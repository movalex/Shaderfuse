


-- // ------------------------------------------------------------------- // --
-- //                                                                     // --
-- //        A T O M A G I C A L Y   G E N E R A T E D   F I L E          // --
-- //                  -   D O   N O T   E D I T   -                      // --
-- //       W I L L   B E   O V E R W R I T T E N   W I T H O U T         // --
-- //              A N Y   F U R T H E R   W A R N I N G                  // --
-- //                                                                     // --
-- // ------------------------------------------------------------------- // --




local ST_ID               = '777777'
local ST_NAME             = 'AudioWaveform'
local ST_AUTHOR           = 'JiPi'
local FUSE_NAME           = 'AudioWaveform'
local FUSE_PATH           = 'Shaderfuse_beta/'
local FUSE_FILENAME       = 'AudioWaveform.fuse'
local FUSE_COPYRIGHT      = ''
local FUSE_AUTHOR         = 'JiPi'
local FUSE_AUTHORURL      = 'https://www.youtube.com/c/JiPi_YT'
local FUSE_VERSION        = 'v19'
local FUSE_THUMB          = ''
local FUSE_AUTHORIMG= 'iVBORw0KGgoAAAANSUhEUgAAAC8AAAAYCAYAAABqWKS5AAABhGlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpSIVh3ZQKZKhOlkQFXHUKhShQqgVWnUwufQLmjQkKS6OgmvBwY/FqoOLs64OroIg+AHi5uak6CIl/q8ptIjx4Lgf7+497t4BQr3MNKtrHNB020wl4mImuyoGXiFgECFEMCwzy5iTpCQ8x9c9fHy9i/Es73N/jj41ZzHAJxLPMsO0iTeIpzdtg/M+cZgVZZX4nHjMpAsSP3JdcfmNc6HJAs8Mm+nUPHGYWCx0sNLBrGhqxFPEUVXTKV/IuKxy3uKslausdU/+wmBOX1nmOs0IEljEEiSIUFBFCWXYiNGqk2IhRftxD/9Q0y+RSyFXCYwcC6hAg9z0g//B726t/OSEmxSMA90vjvMxAgR2gUbNcb6PHadxAvifgSu97a/UgZlP0mttLXoE9G8DF9dtTdkDLneAgSdDNuWm5Kcp5PPA+xl9UxYI3QK9a25vrX2cPgBp6ip5AxwcAqMFyl73eHdPZ2//nmn19wNwmHKmkuMbdwAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAuIwAALiMBeKU/dgAAAAd0SU1FB+UCGRMiNEXqxFgAAAAZdEVYdENvbW1lbnQAQ3JlYXRlZCB3aXRoIEdJTVBXgQ4XAAAFwUlEQVRYw82Xa2xUxxXHf3Mfu+t9+P3GuLipY8cYDAbbYMKjCQkmUeo6BEJLUBKpikppm4eKVKGoalS1aVKlUqRCv1SVFaUKRUnVJm0DUSNRRELjyphYhvCwsfHbXnu97713996dfihIBtlNUsXKni9z59zRX79zdObMDADrGlrUfc17v86n2HPNzx5+runpo2SIKQBe1eMutcvfvG9te+tiCxsbtzmmnHLvFcaPZAq8uPnxSOuTzU5f2ZExs/+BU6eO+zdu3+HxlJVnxyORlaquBfKzqup1w7HxzeMvHMg4eIBdj/10n6O6aL+7doW1zle6rT4v16MKuBpL8EEkzOTF7uffOfyDn2cKvDp/4lueM+7dcu+Rx6tqa9ubVjgq3G5KdUHdHYWssKJ8OJnckp2X+/ZY37mpjKn5m+asrGsv84f1u1fmk/Yb9Bw9FfpzZ2f/5IluapcX84CqaJ6vtezPlMxrt8xcy0W2f5SJ6VFcIUGs77w7FhjyzjgKSDfkEUuF8bpzGzMSXvj9wdCyVgZGpqioKKXmxw/q5dOx0uk8ONs7yqXxBqY+uS4yEj58+Xxf19TjMjCTI+ruVPB5VaIxGBiRXOtXmZ6ykWa/LyPhNZlFdJz0uQmferEHHCrItMSIQzJhk4hfoqSwsnF/x19fnTXeeOHv7/4hkBHd5r7NhzaWub/3NzdVOSIp0AQ4hEC1QbUF0rQo8DhYdVel2HNQb/FfKPy2N4fXhkYuJL7UbrN29Wb31tW7jnm8Vnn7d3vYsWeEXBW8CnhVgVeVVOTqtLU7ubttlMsfT6NN11fooqRmvpiUMlfeas/P+zczz7/9hu+SXNiCUsouKeWjt+nfoqH9NwKVYNjybFxfyMDZi5SUa9QVe3CShwroKgjFxu3XGBoqZ7A/i2H79d9M8v7ZJUpqDtAEHJNSWkKItxat+e7eU3GX2tk82vv0RzliZ6HpkXiyBE4d0mlBIgbxuEJiUMW2DAKxAdbXbm47H+3JvsSF0Gc6yoUo/JQlJ4GdQDVwAqi64X8KeGshDQWgYfUG9Y7clt0+Jb8wNmeRCCjMTQlCswIjAmlDolhAKs3k3DBOd4h7lq2v3l118L17Nz1c8FngFyqbBQKUQogrwD/mub+ymIYCsKHomV+Up/b8UrO84IoiLYmwIWVAPAqhIIQCEAonsW2baflJ15nhiXh1TkvzpoJvvfhF1YqUUpFSrgTun+e+vuiG/eaWZ7eWaNsOjQXmuKj8qjOtzkqpSBQN0mlIpSBtCyQSVEHK4ZcRpeeHV6zTx08PpJmdq9j0BbHvAGygb162JfDrRft8hXP7U6GALiLKdWzFrvNmFwmHraAK0BSJZUMiITBFgpQzjGlOCqElV7jUyi3BpMJodPTM/wCy/89AwsA54GUhxMlF4WdDht8lJlIpbUriME6HXHPN+aoTXXNipcFMpjF0A9OaISmDCBNk2hnff8j9SsDfu+9nHTvrvT7ZKYR4YgH92OcAPimEaPtcJ+wbXbue2br+wO9stKKkHOyeUd97KJnVVJPtKkcRCkkrQcycJWHOkCKOERlFsRPm/Tub1wA3X17pG6P3Nv2JJb0e1NSv0cg1jfr6jgPDw309djr1L9sdrgnKGKqqY2sWKSWG06eiySxUbxFutfFHx/74l8G9j7YjpUQIsUFKuQq4Z562BXy4pPBr1h3+rctb9Z2YqZNXsnV3IhHETMQoKKjiWv8/sSyT4pK7KCiopLa6DNtOsqzYXOVyXugA6pPJZKvT6dSA3tu0XxRCjC3p9SBhGCVxwyQSHqes+KtEgpMkjTl0zYERG4voyuwRI3ru++FQb7eqwsDgNU5/NHKio6MtdvVq/4O6rr8MXAHiNzZaF/CYEOInS/6GbWp9OMeVVfwNRXiLCiu2vxKcHYqascsv+fIbHpqZ6Hrp3x8c/RNA67Z9pR7f2oPR8OUztm0rXWd+/+6XfSX+D8lMtKH55bvKAAAAAElFTkSuQmCC'
local FUSE_AUTHORIMGSIZE = {47,24}


local g_geometry        = {100, 100, 1024, 270}
local g_ui              = fu.UIManager
local g_uidispatcher    = bmd.UIDispatcher(g_ui)

local g_installWindow = nil;
local g_endScreen     = nil;
local g_fileExists    = false;


local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
function dec(data)
    data = string.gsub(data, '[^'..b..'=]', '')
    return (data:gsub('.', function(x)
        if (x == '=') then return '' end
        local r,f='',(b:find(x)-1)
        for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
        return r;
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if (#x ~= 8) then return '' end
        local c=0
        for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
        return string.char(c)
    end))
end




function createInstallWindow()

  local text=''
  if FUSE_AUTHORIMG~='' then
    text ='<img src="data:image/png;base64,'..FUSE_AUTHORIMG..'" />'
  end


  g_installWindow = g_uidispatcher:AddWindow({
    ID = 'InstallWindow',
    WindowTitle = FUSE_NAME..' Installer',
    Geometry    = g_geometry,
    Spacing     = 10,

    g_ui:VGroup {

      ID = 'root',

      g_ui:HGroup {
        g_ui:Label{
          ID = "", WordWrap = false, Weight = 0,
          MinimumSize = {320, 180}, ReadOnly = true, Flat = true,
          Alignment = { AlignHCenter = false, AlignTop = true, },
          Text = '<img src="data:image/png;base64,'.. FUSE_THUMB .. '" />',
        },

        g_ui:HGap(20),
        -- ui:HGap(1.0,0.1),

        g_ui:Label{
          Weight = 2.0,
          ID = 'TextLabel',
          Text = ''
            ..'<h2 style="color:#efbd78; ">Welcome to the '..FUSE_NAME..' Setup</h2>'
            ..'<p style="font-size:large; color:#ffffff; ">'
            ..'<a href="https://www.shadertoy.com/view/'..ST_ID..'" style="color:rgb(139,155,216); text-decoration:none; ">'..ST_NAME..'</a> created by '
            ..'<a href="https://www.shadertoy.com/user/'..ST_AUTHOR..'" style="color:rgb(139,155,216); text-decoration:none; ">'..ST_AUTHOR..'</a> '
            ..'and ported by <a href="'..FUSE_AUTHORURL..'" style="color:rgb(139,155,216); text-decoration:none; ">'..FUSE_AUTHOR..'</a><br />'
            ..'<span style="color:gray; font-size:small; ">'..FUSE_COPYRIGHT..'&nbsp;</span>'
            ..'</p>'
            ..'<p>'
            ..'  This script will install \''..FUSE_FILENAME..'\' '..FUSE_VERSION..' on your computer.<br />'
            ..'  THIS IS AT YOUR OWN RISK AND WITHOUT WARRANTY OF ANY KIND!<br />'
            ..'  Click \'Install\' to continue or \'Cancel\' to exit the setup.'
            ..'</p>'
            ..'<p style="color:#ffffff; ">'
            ..'  Visit us on <a href="https://github.com/nmbr73/Shaderfuse" style="color: rgb(139,155,216); text-decoration:none; ">GitHub</a> for more cute little ShaderFuses!'
            ..'</p>'
            ..(g_fileExists and '<p align="center"><span style="color:#ffffff; background-color:#ff0000; ">&nbsp;ATTENTION! '..FUSE_FILENAME..' does already exist and will be overwritten!&nbsp;</span></p>' or ''),
          Alignment = { AlignHCenter = false, AlignVCenter = false, },
          WordWrap = true,
          OpenExternalLinks = true,
        },
      },

      g_ui:Label{
        Weight = 0,
        ID = 'hr',
        Text='<hr />',
      },

      g_ui:HGroup{

        g_ui:HGap(5),
        g_ui:Label{
          ID = "", WordWrap = false, Weight = 0,
          MinimumSize = FUSE_AUTHORIMGSIZE,
          ReadOnly = true, Flat = true,
          Alignment = { AlignHCenter = false, AlignTop = true, },
          Text = text,
        },


        Weight = 0,
        g_ui:HGap(0, 2.0),
        g_ui:Button{  ID = "Install", Text = "Install",    },
        g_ui:Button{  ID = "Cancel",  Text = "Cancel",  },
      },
    },
  })

  function g_installWindow.On.InstallWindow.Close(ev)
      g_uidispatcher:ExitLoop()
  end

  function g_installWindow.On.Install.Clicked(ev)
    g_installWindow:Hide()
    install()
  end

  function g_installWindow.On.Cancel.Clicked(ev)
    g_uidispatcher:ExitLoop()
  end
end


function createEndScreen()

  local text=''
  if g_fileExists then
    text='<p>As you already had this Fuse installed, you may not need to restart the application. But chances are, that you have just overwritten the same version and will not find anything new. '
  else
    text='<p>In order to use the newly installed Plug-in you will need to restart DaVinci Resolve / Fusion. '
  end

  text = text .. 'However, go into Fusion, smash the \'Shift+Space\' shortcut and search for "'..FUSE_NAME..'" to add this type of node - and then ...</p><p style="color:#ffffff; ">Have Fun!'

  if FUSE_AUTHORIMG~='' then
    text=text..'<br /><img src="data:image/png;base64,'..FUSE_AUTHORIMG..'" /></p>'
  else
    text=text..'</p>'
  end


  g_endScreen = g_uidispatcher:AddWindow({
    ID = 'EndScreen',
    WindowTitle = FUSE_NAME..' Installed',
    Geometry = {300, 100, 640, 270},

    g_ui:VGroup{
      ID = 'root',

      g_ui:Label{
          Weight = 1.0, ID = 'FinalTextLabel',
          Text ='<h2>Installation of <span style="color:#ffffff; ">'..FUSE_NAME..'</span> (hopefully) completed</h2><p>'..text..'</p>',
          Alignment = { AlignHCenter = true, AlignVTop = true, },
          WordWrap = true,
      },

      g_ui:HGroup{
        Weight = 0,
        g_ui:HGap(0, 2.0),
        g_ui:Button{ Weight = 0.1, ID = "Okay", Text = "Okay", },
        g_ui:HGap(0, 2.0),
      },
    },
  })

  function g_endScreen.On.EndScreen.Close(ev)
      g_uidispatcher:ExitLoop()
  end

  function g_endScreen.On.Okay.Clicked(ev)
      g_uidispatcher:ExitLoop()
  end

end


function fileExists(path, file)

  assert(path~=nil and path~='')
  assert(file~=nil and file~='')

	local h = bmd.readdir(path..file)

	for k, v in pairs(h) do
    if v.Name~=nil and v.Name==file then
      return true;
    end
	end

	return false;
end



function install()

  bmd.createdir(fusion:MapPath('Fuses:/'..FUSE_PATH));

  local f = io.open(fusion:MapPath('Fuses:/'..FUSE_PATH..FUSE_FILENAME),"wb")
  writeFuseCode(f);
  f:close()
  g_endScreen:Show()
end



function goForIt()

  g_fileExists    =  fileExists(fusion:MapPath('Fuses:/'..FUSE_PATH), FUSE_FILENAME)

  createInstallWindow()
  createEndScreen()

  g_installWindow:Show()
  g_uidispatcher:RunLoop()
  g_endScreen:Hide()
end
function writeFuseCode(f)
  f:write(dec("CgoKLS0gLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvLyAtLQotLSAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIC0tCi0tIC8vICAgICAgICBBIFQgTyBNIEEgRyBJIEMgQSBMIFkgICBHIEUgTiBFIFIgQSBUIEUgRCAgIEYgSSBMIEUgICAgICAgICAgLy8gLS0KLS0gLy8gICAgICAgICAgICAgICAgICAtICAgRCBPICAgTiBPIFQgICBFIEQgSSBUICAgLSAgICAgICAgICAgICAgICAgICAgICAvLyAtLQotLSAvLyAgICAgICBXIEkgTCBMICAgQiBFICAgTyBWIEUgUiBXIFIgSSBUIFQgRSBOICAgVyBJIFQgSCBPIFUgVCAgICAgICAgIC8vIC0tCi0tIC8vICAgICAgICAgICAgICBBIE4gWSAgIEYgVSBSIFQgSCBFIFIgICBXIEEgUiBOIEkgTiBHICAgICAgICAgICAgICAgICAgLy8gLS0KLS0gLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAtLQotLSAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vIC0tCgoKCgotLVtbLS0KQXVkaW9XYXZlZm9ybQoKQmFzZWQgb24gdGhlIGZ1c2UgbW9kaWZpZXIgU3Vja0xlc3NBdWRpb01vZGlmaWVyIGJ5IFBpZXRlciBWYW4gSG91dGUsIHRoaXMgZnVzZSByZXByZXNlbnRzIHRoZSB3YXZlZm9ybSBvZiBhIFBDTSAxNi1iaXQgYXVkaW8gZmlsZS4gVGhlIHBsYXkgcG9pbnQgaXMgc2V0IGluIHRoZSBtaWRkbGUgb2YgdGhlIHBpY3R1cmUuClRoZXJlIGFyZSB0aHJlZSBwYXJhbWV0ZXJzIGZvciBzZXR0aW5nIHRoZSB3YXZlZm9ybSdzIHRpbWluZzogMSkgUHJveHkgMikgWm9vbSAzKSBSZXNvbHV0aW9uCgoxKSBQcm94eTogVGhpcyBtdWx0aXBsaWVzIHRoZSBzYW1wbGUgcG9vbCB3aXRob3V0IGluY3JlYXNpbmcgdGhlIG51bWJlciBvZiBwaXhlbHMgc2hvd24KMikgWm9vbTogVGhpcyBhbHNvIG11bHRpcGxpZXMgdGhlIHNhbXBsZSBwb29sLCBidXQgYWxsIHZhbHVlcyBhcmUgYWxzbyBkaXNwbGF5ZWQgKGFzIGZhciBhcyBjYW4gYmUgZGlzcGxheWVkKQozKSBSZXNvbHV0aW9uOiBBY3RzIGFzIGEgZGl2aXNvciBmb3IgdGhlIGRpc3BsYXlhYmxlIHBpeGVscyAtPiBSZXNvbHV0aW9uID0gMiB3aXRoIEhEIC0+IDE5MjAvMgoKVGhlIHN0ZXJlbyBzaWduYWwgKEJvdGgpIGlzIGdlbmVyYXRlZCBieSBtYXhpbXVtIGZvcm1hdGlvbiBvZiB0aGUgdHdvIGNoYW5uZWxzLgoKQWZ0ZXIgbG9hZGluZyB0aGUgZGF0YSBmcm9tIGZpbGUsIGFycmF5cyB3aWxsIGJlIGZpbGxlZCB3aXRoIG51bW1lcmljYWwgZGF0YS4gVGhlIHNpemUgb2YgdGhlIGF1ZGlvIGZpbGUgaXMgbGltaXRlZCB0byAxME1iIChmcm9tIHZlcnNpb24gMC44IHRvIDUwIE1CKSBpbiBvcmRlciBub3QgdG8gbWFrZSB0aGUgYXJyYXlzIHRvbyBsYXJnZS4KVGhlIGF1ZGlvIGRhdGEgY2FuIGJlIG1vdmVkIGZvcndhcmQgb3IgYmFja3dhcmQgYnkgdXAgdG8gNTAgZnJhbWVzLgoKQW4gYW1wbGl0dWRlIHNwZWN0cnVtIG9mIHRoZSBsb2FkZWQgV0FWIGZpbGUgY2FuIGJlIGRpc3BsYXllZCBpbnN0ZWFkIG9mIHRoZSB3YXZlZm9ybSAoY29udHJvbCBwYWdlIHNwZWN0cnVtKQpBdHRlbnRpb246IFRoZSBjb3JyZWN0IHNldHRpbmdzIGZvciB0aGUgd2F2ZWZvcm0gc2hvdWxkIHRoZW4gYmUgc2V0IHRvIDEgZm9yIHByb3h5LCB6b29tIGFuZCByZXNvbHV0aW9uLiBPbmx5IHRoZW4gd2lsbCB0aGUgRkZUIGRpc3BsYXkgdGhlIG1hdGhlbWF0aWNhbGx5IGNvcnJlY3Qgc3BlY3RydW0uCkhvd2V2ZXIsIGludGVyZXN0aW5nIGVmZmVjdHMgY2FuIGFsc28gYmUgYWNoaWV2ZWQgd2l0aCB0aGlzIHBhcmFtZXRlcnMuClRoZSBGRlQgd2luZG93IGlzIGNvbmZpZ3VyYWJsZS4gVGhlcmUgYXJlIDQgZGlmZmVyZW50IHR5cGVzIG9mIGRpc3BsYXk6IHJhdywgYmFycywgc21vb3RoIGFuZCBuZWVkbGVzLgpUaGUgc3VwcG9ydCBwb2ludHMgY2FuIGJlIHNldCBlcXVpZGlzdGFudC4gVGhlbiBzZWN0aW9ucyBjYW4gYmUgY29tYmluZWQsIHdoaWNoIGFyZSBhbHNvIHNob3duIGluIHRoZSA0IGZvcm1zLgpUaGUgY29sb3Igb2YgdGhlIHNwZWN0cnVtIGNhbiBiZSBzZXQgdmlhIHRoZSBjb2xvciBjb250cm9sIHBhZ2UuCgpJZiB5b3UgaGF2ZSBzZWxlY3RlZCB0aGUgZGlzcGxheSBvZiB0aGUgc3BlY3RydW0sIHRoZSAiRWxvbmdhdGlvbiIgZnVuY3Rpb25hbGl0eSBjYW4gYmUgYWN0aXZhdGVkLgpBIHdpbmRvdyBhYm92ZSB0aGUgc3BlY3RydW0gY2FuIGJlIHNlbGVjdGVkIGhlcmUgd2l0aCBvZmZzZXQgYW5kIHdpZHRoLiBUaGUgc2VsZWN0ZWQgZGF0YSBhcmUgY2FsY3VsYXRlZCB3aXRoIHRoZSAiT3BlcmF0b3IiIHBhcmFtZXRlciB0byBiZSBzZXQgYW5kIHZpc3VhbGl6ZWQgYXMgYSBiYXIuClRoaXMgdmFsdWUgIkVsb25nYXRpb24iIGNhbiBiZSB1c2VkIGJ5IG90aGVyIG5vZGVzIGJ5ICJDb25uZWN0IHRvIi4KCldpdGggdGhlICJTdGVhZHkgV2F2ZWZvcm0iIGZ1bmN0aW9uYWxpdHksIHlvdSBjYW4gZGV0ZXJtaW5lIGhvdyBtdWNoIGF1ZGlvIGRhdGEgYSBzby1jYWxsZWQgc2VlZCBmcmFtZSBpcyBmb3JtZWQgZnJvbSBieSBzZWxlY3RpbmcgdGhlIG51bWJlciBvZiBmcmFtZXMuClRoZSBzZWVkIGZyYW1lcyBhcmUgb3V0cHV0IGRpcmVjdGx5LCB0aGUgIm1pc3NpbmciIGFyZSBjYWxjdWxhdGVkLgoKVGhlIFNhbXBsaW5nZGF0YSBjYW4gYmUgZmlsdGVyZWQgYnkgdGhyZWUgZnJlcXVlbmN5IGJhbmRzOiBMb3dwYXNzIDAtMzAwIEh6LCBCYW5kcGFzcyAzMDAgSHogLSAza0h6IGFuZCBIaWdocGFzcyAza0h6LTIwa0h6CgpFbG9uZ2F0aW9uIGNhbiBiZSBtYXBwZWQgdG8gT24vT2ZmLVZhbHVlcyB3aXRoIEh5c3RlcnNpcwpFbG9uZ2F0aW9uIGZvciBTcGVjdHJ1bSBoYXMgbm93IHRocmVlIEVsb25nYXRpb25zLiBFYWNoIGNhbiBzZXQgdG8gc2VwYXJhdGUgRnJlcXVlbmN5YmFuZCB3aXRoIEJhbmR3aWR0aCwgT2Zmc2V0IGFuZCBBbXBsaWZ5CgpUaGUgU3BlY3RydW0gY2FuIGJlIGRpc3BsYXllZCBpbiBhIGNvbG9yZWQsIG1pcnJvcmVkIEZyZXF1ZW5jeSBWaXN1YWxpemF0aW9uICggaHR0cHM6Ly93d3cuc2hhZGVydG95LmNvbS92aWV3L01kVlNXRyApIEhlcmUgeW91IGNhbiB1c2Ugc2NhbGUgYW5kIHNtb290aCBhcyBwYXJhbWV0ZXIKCkEgZGVjb21wcmVzc2ZlYXR1cmUgYWxsb3dlZCBhIHNwcmVhZCBvZiB0aGUgU3BlY3RydW1kYXRhLiBXaXRoIHRoZSBoZWxwIG9mIGEgdGhyZXNob2xkIHlvdSBjYW4gYWRqdXN0IHRoZSBsb2NhbCBtaW5pbXVtIGFuZCBtYXhpbXVtIHZhbHVlcy4KCkEgc2Vjb25kIE91dHB1dCBjYW4gYWN0aXZhdGUgd2l0aCAiU2hhZGVydG95IEF1ZGlvIi4gTW9kdXMgaXMgc3dpdGNoZWQgdG8gRkZUIGFuZCB0aGUgT3V0cHV0MiBnZW5lcmF0ZXMgYSBQaWN0dXJlIDUxMioyIFBpeGVsIGZvciBhIFNoYWRlcmZ1c2UuCgpJZiB5b3UgbGlrZSB0aGlzIGZ1c2UsIEkgd291bGQgYmUgaGFwcHkgdG8gcmVjZWl2ZSBhIG1lc3NhZ2UgKGh0dHBzOi8vd3d3LnN0ZWFrdW5kZXJ3YXRlci5jb20vd2VzdWNrbGVzcy9tZW1iZXJsaXN0LnBocD9tb2RlPXZpZXdwcm9maWxlJnU9NDcwMCkuCklmIHlvdSBjYW4gdXNlIGl0IHZlcnkgd2VsbCwgaXQgd291bGQgYmUgZ3JlYXQgaWYgeW91IHN1cHBvcnRlZCBXU0wgKGh0dHBzOi8vd3d3LnN0ZWFrdW5kZXJ3YXRlci5jb20pLgoKCgpWZXJzaW9ucwowLjEgRmlyc3QgVHJ5CjAuMiBSZWFjdG9yIFZlcnNpb24KMC4zIEZGVCBiZXRhCkltcGxlbWF0YXRpb24gb2YgYSBGRlQgdG8gc2hvdyBhbiBFcXVhbGl6ZXIgLSBUZXN0IGhvdyBtdWNoIFJlc291cmNlcyBhbmQgQ29tcHV0aW5ndGltZSBpcyBuZWVkZWQKMC40IEFtcGxpdHVkZSBTcGVjdHJ1bQpJbXBsZW1lbnRhdGlvbiBvZiBBbXBsaXR1ZGUgU3BlY3RydW0uIENob29zZSBhIGZyZXF1ZW5jeSBiYW5kLCBnZW5lcmF0ZSBhICJtb2RpZmllciIgVmFsdWUgZm9yICJjb25uZWN0IHRvIiBmdW5jdGlvbmFsaXR5CjAuNSBCZWF1dHkgV29yawpCdWdmaXhlczogRGlzcGxheSBBdWRpb2RhdGEsIFNhbXBsZVJlYWQgU3RlcmVvLCBTcGVjdHJ1bSB2cyBXYXZlZm9ybWVudmVsb3BlIGNvbnRyb2wKU3BlY3RydW0gQXBwZWFyYW5jZTogUm91Z2gsQmFycyxTbW9vdGgsTmVlZGxlcwowLjYgRkZUIHdpbmRvdyB3aWR0aCBzZWxlY3RhYmxlICgyNTYgLSAyMDQ4KSwgU2NhbGUgRkZUCkVxdWlkaXN0YW5jZSBzdXBwb3J0IHBvaW50cyB3aXRoIHNlbGVjdGFibGUgU3RlcHMKRkZUIExpbWl0YXRpb24gd2l0aCBDb21wcmVzc2lvbgowLjcgQnVnZml4OiBObyAiQ29ubmVjdCB0byIgRGF0YSAoRWxvbmdhdGlvbiksIGlmIEZ1c2Ugbm90IG5ldHdvcmtlZApTaG93IEVycm9ycyBpbiBJbWFnZTogMSkgRmlsZSB0b28gbGFyZ2UgMikgVW5zdXBwb3J0ZWQgV0FWLUZpbGUgZm9ybWF0CjAuOCBPcHRpbWl6YXRpb24gb2Ygc2FtcGxlcmVhZCAoIDMwJSBmYXN0ZXIgKQpFbG9uZ2F0aW9uIGZvciBXYXZlZm9ybQpTdGVhZHkgV2F2ZWZvcm0KRmlsdGVyIGltcGxlbWVudGVkIChMUCxCUCxIUCkKTmV3IENvbnRyb2x0YWI6ICBPbi9PZmYgRWxvbmdhdGlvbiB3aXRoIEh5c3RlcmVzZQpDaGFuZ2UgU3BlY3RydW12YWx1ZSB0byBsb2dhcml0aG1pYwpMaW1pdGF0aW9uIGFuZCBMb2dhcml0aG1pYyBpcyBjb25zaWRlcmVkIGZvciBFbG9uZ2F0aW9uCjAuOSBIaWRlIFNlbGVjdGlvbiBUb29sIChFbG9uZ2F0aW9uKQpTbW9vdGggRmlsbGVkIGZvciBTcGVjdHJ1bXN2aXN1YWxhdGlvbgpCdWdGaXg6IE1hcFBhdGgKMS4wIEFkZGl0aW9uYWwgRXJyb3I6IFdyb25nIGJpdC1kZXB0aApGaWx0ZXIvRmlsZS9FbG9uZ2F0aW9uaW5wdXRzIHRvIElOUF9FeHRlcm5hbCA9IGZhbHNlIC0gYXZvaWRhbmNlIG9mIHdlaXJkIGJlaGF2aW9yCjEuMSBJbXBsZW1lbnQgb2YgdGhyZWUgRWxvbmdhdGlvbnNldHMgZm9yIFNwZWN0cnVtLCBhZGRlZCBPZmZzZXQKQnVnZml4IGVxdWlkaXN0YW50IHBvaW50cwoxLjIgQWRkIE5vaXNldGhyZXNob2xkIGZvciBXYXZlZm9ybQoxLjMgRnJlcXVlbmN5IFZpc3VhbGl6YXRpb24gKFNoYWRlcnRveSkgLSBJbnRlcmZhY2UgQXVkaW9kYXRhCiAgICAgLSBTbW9vdGhmdW5jdGlvbmFsaXR5IGZvciBGcmVxdWVuY3kgVmlzdWFsaXphdGlvbgogICAgIC0gUG9zc2liaWxpdHkgb2YgbXVsdGlwbGUgdXNlIG9mIHRoZSBGcmVxdWVuY3lWaXN1YWxpemF0aW9uIGluIG9uZSBDb21wb3NpdGlvbgogICAgQWRkIERlY29tcHJlc3NmdW5jdGlvbmFsaXR5IGluIFNwZWN0cnVtKGVxdWlkaXN0YW50L2xvZ2FyaXRobWljKSB3aXRoIFRyZXNoaG9sZAoxLjQgRENUTCBjb3JyZWN0ZWQKICAgIEFkZGVkIGEgbWVyZ2UgZm9yIEJhY2tncm91bmRwaWN0dXJlIGZvciBGcmVxdWVuY3kgVmlzdWFsaXphdGlvbgoxLjUgV29ya2Fyb3VuZCBGdXNpb24xNyBmb3IgV2F2ZWZvcm1kaXNwbGF5KE1vdmVUbyBzaG93cyBsaW5lIHJldHVybiBmb3Igbm9ybWFsIGFuZCBwb3NpdGl2IGVudmVsb3BlKQogICAgQWRkZWQgIlNtb290aCItRmVhdHVyZSBmb3IgU3BlY3RydW1kaXNwbGF5LiBGYWxsaW5nIGVkZ2VzIGFyZSBvdXRwdXQgd2l0aCBhIGRlbGF5CjEuNiBBZGRlZCBTbG9wZS1GZWF0dXJlIC0geW91IGNhbiBjaG9vc2UgYSBjb3JuZXIgZnJlcXVlbmN5IGZyb20gd2hpY2ggYSBjb250aW51b3VzIGFtcGxpZmljYXRpb24gaXMgY2FycmllZCBvdXQsIHNvIHRoYXQgaGlnaCBmcmVxdWVuY2llcyBhcmUgcmFpc2VkCiAgICBBZGRlZCBhIEppUGktTG9nbwoxLjcgQnVnZml4CjEuOCBTaGFkZXJ0b3kgQXVkaW8KMS45IEJ1Z2ZpeCAiSW5wdXQgVGV4dHVyZSIsIFNtYWxsIENoYW5nZXMsIExvZ28sIDIwME1CIExpbWl0CgoKS25vd24gQnVnczoKSWYgeW91IHVzZSB0aGUgZWxvbmdhdGlvbiB3aXRoaW4gYW4gZXhwcmVzc2lvbiBvZiBhbm90aGVyIGZ1c2UsIHRoaXMgaXMgb25seSBvcGVyYXRlZCBpZiB0aGUgQXVkaW9XYXZlZm9ybSBpcyBjb25uZWN0ZWQgdG8gdGhlIGFjdGl2ZSBuZXR3b3JrLgpDb250cmFyeSB0byB0aGUgQ29ubmVjdF9UbyBmdW5jdGlvbmFsaXR5LiBXb3JrYXJvdW5kIHdvdWxkIGJlIHRvIGFkZCBhbiBpbnB1dCBpbiB0aGUgdGFyZ2V0IGZ1c2UgKGVkaXQgY29udHJvbHMpIGFuZCBmaWxsIGl0IHdpdGggQ29ubmVjdF90bywKdGhlbiBhbiBleHByZXNzaW9uIGNhbiBiZSBlbnRlcmVkIGF0IHRoZSB0YXJnZXQgaW5wdXQuCgoKVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IgSU1QTElFRC4KTUFZIEJFIE1BREUgRk9SIFBFUlNPTkFMLCBQUklWQVRFIEFORCBOT04tQ09NTUVSQ0lBTCBVU0UgT05MWS4KSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwKVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuCgotLV1dLS0KCi0tIE1BTkRBVE9SWSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpsb2NhbCBzaGFkZXJ0b3lfbmFtZSAgICAgICA9ICJBdWRpb1dhdmVmb3JtIgpsb2NhbCBzaGFkZXJ0b3lfYXV0aG9yICAgICA9ICJKaVBpIgpsb2NhbCBzaGFkZXJ0b3lfaWQgICAgICAgICA9ICI3Nzc3NzciCmxvY2FsIHNoYWRlcnRveV9saWNlbnNlICAgID0gIiIKbG9jYWwgZGN0bGZ1c2VfY2F0ZWdvcnkgICAgPSAiVG9vbCIKbG9jYWwgZGN0bGZ1c2VfbmFtZSAgICAgICAgPSAiQXVkaW9XYXZlZm9ybSIKbG9jYWwgZGN0bGZ1c2VfYXV0aG9yICAgICAgPSAiSmlQaSIKLS0gT1BUSU9OQUwgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCmxvY2FsIGRjdGxmdXNlX3ZlcnNpb25ObyAgID0gMTkKbG9jYWwgZGN0bGZ1c2VfdmVyc2lvbkRhdGUgPSAiTWFyY2ggMjQsIDIwMjMiCmxvY2FsIGRjdGxmdXNlX2F1dGhvcnVybCAgID0gImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2MvSmlQaV9ZVCIKbG9jYWwgZGN0bGZ1c2VfYXV0aG9ybG9nbyAgPSAnd2lkdGg9IjI1OSIgaGVpZ2h0PSI2MCIgc3JjPSJkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQVFNQUFBQThDQVlBQUFCaWl0OEhBQUFCaEdsRFExQkpRME1nY0hKdlptbHNaUUFBS0pGOWtUMUl3MEFjeFY5VGE2VlVST3dnNHBDaE9sa1FGWEhVS2hTaFFxZ1ZXblV3dWZRTG1qUWtLUzZPZ212QndZL0Zxb09MczY0T3JvSWcrQUhpNXVhazZDSWwvaThwdElqMTRMZ2Y3KzQ5N3Q0QlFyM01OS3RySE5CMDIwd2w0bUltdXlvR1h4RkFQd1lRUXJmTUxHTk9rcExvT0w3dTRlUHJYWXhuZFQ3MzUraFZjeFlEZkNMeExETk1tM2lEZUhyVE5qanZFMGRZVVZhSno0bkhUTG9nOFNQWEZZL2ZPQmRjRm5obXhFeW41b2tqeEdLaGpaVTJaa1ZUSTU0aWpxcWFUdmxDeG1PVjh4Wm5yVnhselh2eUY0Wnorc295MTJrT0k0RkZMRUdDQ0FWVmxGQ0dqUml0T2lrV1VyUWY3K0FmY3YwU3VSUnlsY0RJc1lBS05NaXVIL3dQZm5kcjVTY252S1J3SEFpOE9NN0hDQkRjQlJvMXgvaytkcHpHQ2VCL0JxNzBscjlTQjJZK1NhKzF0T2dSMExjTlhGeTNOR1VQdU53QkJwOE0yWlJkeVU5VHlPZUI5elA2cGl3d2NBdUUxcnplbXZzNGZRRFMxRlh5QmpnNEJFWUxsTDNlNGQwOTdiMzllNmJaM3cvN1duSjNrQ3cvNXdBQUFBbHdTRmx6QUFBT3hBQUFEc1FCbFNzT0d3QUFBQWQwU1UxRkIrVUZFUk1RS01zUE9Ka0FBQUFaZEVWWWRFTnZiVzFsYm5RQVEzSmxZWFJsWkNCM2FYUm9JRWRKVFZCWGdRNFhBQUFZZVVsRVFWUjQydTJkZlhSVzFiM25QL3VjODd3blQ1S0hCRUlTOGc0cEJFRk1CTEVXZ1l0ZTZiVzM5YlhTNnEyekxOVHhlbHRuM2VuUXVhdld0dE5wYlpkdGRUcWRWanJlVlZ1N2JvdTJldThNNVlwVUJYRTBGRkI1RHlRQmtwQUU4dks4djV6WFBYK2tJbG9JQ1VJUzZQbXNsWlU4ZWM3ZTU1eTk5Kys3Zi90Mzl0a2J4cEhGamRkSVhGeGNKaVhxZUoxb1djTnlXVjFZaTJKb3ZYM3AzcDF1MGJ1NFRDNlVNLzF6NmJ6clpGUGwvRFVYNmlUelM2OWE0UThGT1JMcjRPMlRPOWU1eGU3aWNvbUl3UXhSUXpVem43eFFKeEVFWDFKQ2ZyWWRlRTI0UmU3aWNnbUpRZXRRQjdrQys0S2RKTCswa09NRHg5M1Nkbkc1RkprM2EwSHRzdVliNVVmS21qNzBjR0hGMGsrN2dVTVhsMHZSTXdEWWZlaXRqclJoTTNWcTVZY2FMalExTDVZWkorbVd0SXZMSkVjYjZjdnR1LzhnYnZpcnUwYlZxODlkZUkyMGJQdFpqNktza0tiUnZQZnR0em9BNWk3NWE1Nyt3ZGZkV01GZk9BOCsrS0Q4em5lK2MzN0R6UHo4YzdhZlpESjVxcDBLSVpCeTVHYmIyZGxKWTJQamlQbCs4NXZmbEE4OTlCQlNTaHpIT2ZYN1RIK2Yvbm1rNzRWNDc1U1daWkZJSkVnbWt5U1RTZmJ0MjhmT25UdlpzR0hEaDdLWGRldld5VldyVm8wcHpmMzMzeit5R0FDODlJZGZpeHR1dTFlKzlOdWZuN3JBcHRzK0pXc1dMS0cyY2dIMVUyb28xcno0cENScjJYY01xSUllcjkzZW5EdEoxc2t3dGFJVWZ2QjExeHBjeU12THUrVHl6cy9QSC9keVNpUVNjc09HRGF4ZnY1NFhYbmhCakZkNWFLTTV5QWtHdWZrLy94YzVoR1JPODQxRS9HWE1EeFd3SUdSVGxRK2VzQ0RuMFpDV1FpNlI0V2hQaXBaK25iMktsNFBaSkNzZmZFaHUvSitQdTk2Qmk4c29DSWZEckZxMWlsV3JWckYxNjFiNXlDT1A4T3FycjE1MCt4bVZHTHpadnAzLzlQZFBjNmpYSUpReitkdXlFSXVxdzJoRlFTeE5SUUQ1RXBDU2NJWEQxRGsyZGRFTUcvNTRtRGNPOTlNOS8xcG0zajRrRHovM0MxY1FYRnhHZ1pRU0lRUkxsaXhodzRZTmZPMXJYNVBmLy83M0w2cjlLS082c1B4U1R1NXJvNnp2QkorYVZjbWlLNnZRU3Z4SVRhRGxJTFdyaCtoTCsrbC9kUy95cEE3U1M2UW9uN3V1cWVITzZRa0dFa0htTHJqZXJXRVhsMUZ5ZXR3akdBenkyR09Qc1diTkdqbmhZakJsd1RMc25FbGp2czFINTA1RDlRQzJCOUd2MFAxYU94N0xRK0gwVWtwbVZMTC9sVGZvZTZzTllhdDRWVDlYMXpVd1R6R1pxZ2l1V3ZHMzdpTkdsNHZhbTE1dWduRDZmWDN2ZTk5ajJiSmw4bUtWMjZqRW9LcW1rZU90QjFnOHV3cVBsc0hCQkF2NnR4eWc4SmpGODQvL0MzOTMyNmY1M3RvdlVsdmc1OUFmM29BQmdBQld2cGRiYWl1eFR3eFFNWE11aFEzelY3ak4xdVZpOTZhWG95Z1VGQlR3d0FNUFhIQ0JmRGYvVVlsQmlXM2lkUGRTN0JHZ1pOQXh3SURVMjhkNWZkUExmT2RmL3hmciszZnlQemIramg4LzhiK1pubGZJM3UxYlFkR3hwY1NmaWVFVGdtbVZzOUJGNkNXMzJicU10aUdQMWJoUGYzUTNVdHJUajd1VXZKcmJiNytkNWN1WHk5SG1ONWI3UEdjQThZcUZINVhaSTBlSStIM0VrZ244V1I5cUFKQWhERjNITmgxOFFvMnEwaXB5QktSVFdYSW5ZZ1FpSVdRMnkwQTJRZFpPSTFTTG9rZ2VDTU50NVM0WEhGM1h6MHN3Smx2dlB4cnV1dXN1WG43NTVYT1doNklvWXhMVGN6OU5jQVRwa3duS1F5SDZZME9JUGhVMTM4SnZLdmpLWWI1V3dqL0dsaGJ0Yjk5SDFaUVNWbHk5bEcxNzN1YTJPNWJSRjA4UWpTZUlKWWF3aENTL01BTEM1N1pjbDFFYmlHVlpvenJXNy9kUEdndFBwVkw4K3RlL1JrcUpydXZvdWs0NEhLYXlzcEtLaWdvYUd4cy9WUDdYWG52dGlOK3ZXYk5HckZrejlyY0l6aWtHZTNac0U1Kzk2ZTlsZHFpTmxLWVNqT2VRT1lHaFNLWmVQNHRqLy9vS3l4dm04WmtyYndaSDVmOTI3cUJzNVVLNjgyTEVrd2tHQjlNY2oxa29UakdwYnZEcEFiSnVPM2U1d083elpHUDE2dFZuRmFkRml4WU5yVjY5dXVpKysrNDdyN3diR3h0WnRHalJVRXRMUytSQ1h2T281aGtvZGdXcHpGRXlhUU1qQTE3aHdTb1F4QXM4Vk4xM0V6MS83S0RqZUlLVWxhVGlVMytGTFBIUk94QWozajlJVCtjeGpzYkx5UytzcGZXdExqU2owRzNoTHFQR2NaeEwwcU1aaVphV2xraExTd3VIRHgrV2p6NzY2SGtKWkVORFExRkxTd3ZqTGdiN2ovaVpQWDB4UjdzVDVJVlVwdVNwK0ZEeG95SkNLak9XZndUVGt1UjBrMFE2VGpTVklKR0d6cjQ4dXZwbk1xRGZUR2RQTCszNzkrTEQ2N1p3bHd2dUdkeDk5OTN5VEdsSE1zeG5ubmxHVE9RMWYvZTczeFUzM25palhMNTgrWmpGWnFScDBpdFdySkNscGFWanV0NWYvZXBYWWxSaTBMZHZGMU8xRzluY0YrSmdwK1NxSzJ5cXlreUNmZ1cvTDRSUUZTeFRFbzFMK2dhSzZPNFRkUGJhUkFjQ3BCSmU0b013TkpEQjd5M0drVzdNd09YQ2V3YS8vT1V2eDVUdi92MzdlZWFaWnliOC92YnMyY05veGVCMGNRdUh3MmM5N3M0NzcyVDE2dFZqMXJEUnZadVFUTkRiM292bW4wMHlXY2loTnRBMEUwMG9lRHdxQ0pEU3diYkEwQVc1TE9nWlNTNEYyWXlCSlFWRjRRaU9BVmk2MjhKZEpueVlNRmxpRWUzdDdlZVZMaEFJakZvNEx1Z3d3VEZQb05vbXVhaENjZ0FVRFR3ZWlhSkloSkJvaWtCQjRGaGc1QVM2QWJadG9TZ0tBWThYcVRuRUIvdUlEM1ZRV09SNkJpNFgzbWpIMnZnbnkrUEZxcXFxVWQvYjZkY2NqOGN2K1AyTlNneFVKNTlNMGtMUlFCR0FBNHF0b2lGUkZJRWlRVXBRSkdnS29EbllVbUFiRXNzMHlUazdNZEplTkdzK2tjQjBRZzJPM052NnRQdlNrc3NGRTRPeE5QN0o5SVJpM3J4NTUzVnZpVVRpZ2wvTHFNVEE0NXNQZGltTzQwSDFnT29CVFJXb0tDZ09JQjBFWUZrZzVMQ1hJQkZJYkd6YlJuTlVIRVVuTDYrSTRyeDVSSXF1WVZwQmsrd2FlSlpESGU0aXFTN2pPMHlZTEY3QkY3LzRSWG5ERFRlY1Y5cUxJUVlqVGtldXJseTQ0Nm9yN3BRekNtNGlUOVFRbEJwZVc2STVnQ2tSenJCTG9Eb0tpcTNna1FMTmtYaHQ4RG9xbXVPZ29xT2hrdWVaUm5YRlhBckNncEx5S0k4OThRLzgxNGYvaVk4ME5qL3FObm1YOFk0WlREU1BQUEtJL1BhM3YzMWVhUzNMNGplLytjMEZWN1N6ZWdZMU01b2ZyUzcrRDAwbG9ac3hUQzlaVlpMUkhTekhScFVheUdHdlFDZ1NSUUdKeE5aQUV3cW1MYkZ0Q3h5Qm9uZ0pldk1wQ2RWUzVJV3MxY3FuVjlkaGFNZm9hdk54M2R4L1hDdHkvN3oyUVB0THJvZmdNcWxkK3JHd2V2VnFhZHZESzR5cnFrcEpTY21wbjVVclZ4S0puUDk4b1FzOXYrQ2NZbEJmdm5KdFZjSEhTZlJXRUNwL205dFdYa24zY1lXdFczclJqUUljR1J4MnVSUVFRcUlJVUtXQ0tSMUFvaWtLbWtkRms0SzhrbndLRmNpbG9MVE9RM0Yxa05kZTI4bU9iWjFNODgvbW1sbTNjcURkZlgvSk5lckx3ek1JaFVLc1czZng5Z3A2L2ZYWEwwcStaeHdtTFA3SWwrVE15TzNFVDBnUzZSN3NZQ2NscytOODRqNUp6ZnlEQklOUjhqVUlLZUFUSmw0c3ZGTEJJOEVyYklLS1E5Q3JFTTV6S0NtVjVCWDBzT0lHeUNrYldQTEpmQWF6M2ZTMHBkRk9sREl6ZURWR1BFUk5aZE1hMTJSY01iZ2N4T0JpeGlRNk9qcFl1M2F0R0RjeGFHNHU0cC8rMnp5dXVta1BiL1N0NHFXWGYwSGFPRVRLN2lCY0JKZ0dxc213OFNzMmZnWDhFalFIdklEZkt5bktoMGhRaFp5SlllL21ZN2ZBMzl4YlF2T2NDbnBlMGZHM043TmcxaWRvUFhtUWQ3bzNjcVRUM1hiTkZZUExaNWh3c2ZqUmozNTAwZkwrTXpHb25kRzBKaDZieXI5djZ1SVR0NjdrOW52cU1lSTJHelpzSUszSDhQZ3MwckYrRklOaFFiQWttbTNqRlJCUUlhQUlmSTZLRTdjd1l6RktRZ1l6Y3ZWMHZRaVJZMDM4L3I5TDl2emJYTHFPRkxQcjZCWmFEajlKUmg2c2M2djU4dVp5RFFTT0owOC8vVFNQUDM3eEZoYitzNWlCRkxCM2R6dUJkQS9wL1huY0VIbWN2RVZiR05xM0Y3M1Z6MVJaZ0pacHBYQmFIdk9iNTlCN01vNmFDeEZXQWdROEVBeElmSnFGMyt0SHFJVmtMWjBoL1RyZStHT09iRmFRaWdVWjdNOFExZmN5SUxlUzhleWxvMnQ0andXWHYxelA0SHhtelAwbHNYbnpadTY5OTk2TFdrQi9KZ1pIT25ldU84TE9kVHF0c24vZ1FhWjUvcHI4b2h1b0Q2ems0RzlWdkY2SE81WXR3S2NKUExySjFNSVNMQVNtZERCc1FjWlNpZWtxVmdaTUczVERpNUdCWkVZUWkyYkpKTklVaElOTUtRZ1RpNnY0Uk5DdGFWY016aW9FcmtEQWM4ODl4eDEzM0RGeFM2Vm41Zkc2dHY3LzArNnQwTWlldUI1VkNEUVBlTHpnOVNsNGZRS1BKbEMxNFNtSndwSGdLTmlXd0hJa2x1bWdaMEhQT2lTemdLNlE3dzlUV2lPSlpYdHBiK3VoZk5ySEtBdEhNR1YwUjl2eDdjMnV5Ymd4QXpkbThINis5YTF2OGZEREQ0K0xJcDVWRERxNjN1cVlYVElYd3hyRWI0R2lDS1FEdWlrdzlPSEhpYW9RcUpxRFJ3VVE0RWdjVytBNEVzY0IyNVpvUXFNZ0VpZHNGU0FrOUtZNk9SSnRJYVdudUg3YXpaUld6NkkvL1daVEc5dGRpM0ZqQmk3QW9VT0hlUGJaWi9ucVY3ODZybTdSMmVjWlZEUS9XaUJxOE9icXlLYXlhSGxCTkVVZ0pXQUxwRkNHNXhnNHd4T09WRldncWdLaG5LN293eDhjNGNmTVFTeGgwS01QYjd1bXFURm16dkJUWHBEUHFvV2ZJMmYyeUpZajdzU2pTNDFiYnJsRlZsVlZuVE93TlpLNy81Y1dMN0FzaTJ3MlN5S1JJSnZObnRwbjhlMjMzK2FkZDk1aDgrYk5FMUlZWnhXRFNLQmg3VFdWZHhKcmJTQmhaekFOaWRlbklod0hJVUFLQncyQlJ3R3ZsMkVoRU1NdkxFa3BzRzJKWllLcFF6cm5JNTNPa3NsR2tWaG9lSEQ4UHVKbWprbzluNnZ5bHhHOFhrTml5dTFIWG5VRllSS3haTWtTV1Y5ZlQzMTlQVFUxTmRUWDExTlhWMGRSVWRHcFk3WnYzODdqano4K1lqNGZYSXpqZEFFWVNRaWkwZWdsVjJhcFZHcFVtOFZPTnJRLzl3Z1cxTTRwdXFQOWltbWZRZWd6VUVvZE1pY1ZURlBIVWhVODZyQkhvRXJ4cHpjWUpiYWhZQ3ZEbFd0YllGa1N5eFNZeHZEbnJKM0dOTUFCaEtJamxEUzZyYlA3MkZHS2ZTVlVlYUYyeWh6dXVmNGYwSFVoMytsNXhSV0VDV0xqeG8yeXJxNk91cm82RkdWVUsrbVBhbVhpRDRyQnVUeUJkOFdpdjcvZnJaU0pFb1BaMDFhMno1dDZOMFJua0UyRHBSb1U1bnRKRENXeHBROFZnWEFrUW9CdERROGI3RDk1QkNDeExZRmpLOWcyMk5adzNNQzJCQ0FScUFnaGNOUTRHYkdYLzlkMUFNdmZ5WnlpUlN5c3ErREtLWjlnYVcwYjcvUzg0dGJNQk5IUTBFQk5UYzJZMG94bXg5K1JWdVlaYVZoeDRzUUp0MUxHaWZkSi84ZHFWOHNGNVovRlRrNWpNR2t5YUE1dzdPUSsyaEwvQXVGT0hKbEdRYUFLNWRSKzg1WXBzQTB3RFltaER3OE5IQXNjeThaQllpRncxR0dWVjRXR29ua3c1Q0IyNE1ET2ZTZC9KdmIyL2p1SCtvNlJURVBBOFhCMXcwSzNWaWFRUFh2MmpEbk5nZ1VMem5uTS9Qbnp6K3Q2dXJ1NzNVb1piekdZWFhHdC9PanN6NkxGNXBCT2V1bEliZU90MU5mWnAzemhDd2xqTDZvL2dlSGtjT1R3eTBtSytpZjFsbUE3NysxK0l5VTR5T0ZWVUtTRDVvQ2lLQ2lxRDZFcW1NUkpjNVMyNDl1YnEyY1dySWxtMjRtYUF4em9nUU45a0RETFdGeDNpenNIZFFMRjRId2U1MzNwUzE4NmE2TG01dVpIUi92ZS9nZlAzZEhoemtjYmR6R1lPZjA2QXFLZVRBNlM5aUNEdVowa25GM1kvbzdOMlBrb0lvUWl2TVBEQVFHS2FxTnFFbFZqK0xjcVVGVUZWUVhOQTRycW9HZ0NxVXFFWWlFVUcwdE5rYkFQbzlNRndOSEQ4WFcySjFiWEhuK1ZmZEY5N0dxSHZhMHFtVnpBclprSll2ZnUzZWNWMmIvbm5udk8rdDE5OTkyM2RxekRnM2RGd1JXRGNSYURtV1hYeWVwcGk4aWx2UmdXcFBVVXZyd2dRdkZ3cEMzYUVmSVY0L1dGOFBwOXZQdTBXQkVxSGszZzhVcDhmb0hta3dndktCNUFDQkFDQnpBVkJ3dURuRFpBVnVzbWE1MThYMlB6aU1MMnVUWFhVMVhjaUtOQ1dwd2dZNStnZW1iWVhmUmtBbGkvZnIwd2pMRnZnZGZVMUVSTFM0djg1Q2MvZWFwclg3WnNtZnpwVDM4cTc3Ly8vdmYxK0NONUhxZnZFVGc0T01qdmYvOTdONWc4VG1nQXhaNTZTc0l6R1lqcEhEblJqaS9zcFhicWxReTBid0VnbEZkTEtCQUJ4WXVaZ3VFTnJ3VDhhVzRCZ09Lb3FMYUREVGdPR0VLaUN4MVRNYkZWRXdVRjFkTHcrRUlnUGFjdVlIcCtJNUZBQTdZNUxFM1JXQitPMEFIVmZZdHhndmpkNzM3SFhYZmROZVowQ3hjdTVJVVhYbUJvYUVocW12YStvT0hwSGNEWlBJOFB6amZZdW5Xcld4bmo2Um5NTEYrNG83VHdTbkt4QWd6TFlTalhRVHpYalJBU24zZTRNcjMrR1ppS2gwQ0JwR0E2QklzZHRDQW8ydkFxcUlwSElqMFdRaFU0aXNEeERQOElMeWgraWVLVEtINFRqOCtEMTF1QW9yd1hmVTVrRXd3bGN5UXNNTHhINlUxc1E2anB1cU9IbzY1L09FRTgvL3p6SHlwOUpCSVo4OU9ETTRuRXhvMGIzY29ZVDg5QW9qUmxNaXJKcEFwU0l6L3NSU21Jc3Z2SWRqSnkyQjZkb0VKT1Nyd20rRlh3QnhRSURFODl0aXd3YlFkSGdLMWFPS2hZanNEUlRHeHA0RGdHVXN0aTJ3SmJrY09McUtiZnEvUzMybjhoY3JKSDVvVWkyR2FLWFYydVd6Z1poZ29QUC95d2JHeHNITmVaZ2FkN0J1M3Q3ZnpzWno5ejI4SjRpa0hiOFRkRkcyL1NaMjJSTmNIUFVGdTFtS2gxZ05hVEIyanJlVmtBSkozRGhEemcyQUt2blk4cUJUNFZWS0dBQjZRWGJIdDQzd1RIc2JBc0EwT21NWjBVbHAzRlZ1TTR3by90WkhEc0xJN3kva2txQnpvMnU1VSt5WGp1dWVlWU8zZnVtSTE0clA4N20yZnc0eC8vMksyRWlZZ1pBTHh6NURtUm1YSDAwZU5NWDZ2TEhHMDk3NzBuTUpUZFNVRUVMSkVqWTBjSWFHR2s1a2NiamhiaVNJbXRHTmlxaVc1bE1kVXNocFBHZE5JNDBzQlNrdUJZMkZZSzIweGd5NVJiOHBPY2IzempHNksrdmw3ZWZmZmRZM2J2eC9LL003Rmh3d1orK01NZnVoM0VSSWtCd09HdUhWOEJ2dkxCZzZLSmx5aUlTTUpCRFovWGc5UUVsbWJnQ0ErZzRBZ0x4ekd3SFIzTE5qR3RMSmFkd3JaMHBHT0JNTEFWc0VsaWtRQmg3blNMZnZKenp6MzNpTHE2T3JsNDhlSlJlUU5qOVNMT2xNZVdMVnU0K2VhYnoxc0lUbjhhY2E1akxuZkdXa2VqbW56ZWVmUU4wWG5zVmFUU2krMkxrZ3ZFMFFOeHpFQWNNNURBOGlVeGZVbE1ieHBMUytKNGt6aWVOTGFXeHRLeVNDMkhWRk5ZU2hwSEZYaDhrU2JYMUM0TnZ2emxMNTl4UDhBUEt3Um55bVBqeG8wc1hicjBRM2tFSDl5R2JMU2V6T1hJV085elZHSXdzN2FvMXBGRzFQRTRPS3FCcGFRd1JSeGRTMkY0TWxoYUJ0dVR3OUZ5NERPUW1vbWpHamhhRGxzenNEVUhMU0R3QmJ5by9ueUM0ZW5NcUY1USsyNysxMTd6TVhmRzRTVGw5ZGRmRi9YMTllTHBwNS8rMEwzcW1Scm51L2s5OGNRVGZQempIM2VIQmhmUUt4Z3JaeFNENjVhdWtaLzV1eC9JSzV0dWxRQ0hPNklkUlZOcWkwS2hFb1RxeCsvM2t6T0dpQ2VPa0V3ZUkyZkgwZTBVT1NkRnhreGdDaDBVaFVpa2pFalJOTUtSV2lKVHl2RDVBZ1NEeFpTV3p3VjFhdnVzV1V2bFQzN3lvbnppSjF0NDVGdnJYVUdZeE54Nzc3M2k4NS8vUEYxZFhSZlU3ZDYyYlJ1MzMzNDdEejMwa0NzRUV6UThPR1BNQUtCcDRlZmsvT2IvaUswVU05c3pCNXNwTXA1b3AzYldFb0w1VTBra2JYUWpRUzVuNHZPR0NCZUVPSDc4TUtvd3lRc1hrOHNZRkUyWmlxN3JoQ05UOGZzanBOTW5pY2NHRUtyR0RTdVdNS2VoaE1PdGN4Qm9sRlZleThGRGFlYk11WW5IZnZDeUhPemZSM3Y3VzZ4Zi84OXU0NWhrUFBYVVUrS3BwNTdpZ1FjZWtMZmVlaXZOemMwVUZCU011ZUVORFEyeGFkTW1Ybnp4Ulg3Kzg1K0w4VFNJOFZoSVphSmpFaVBGWkVZc0w0RDZocHZrZFVzK2grS3R3M0NHZTM2QlRUYWJSdGQxVk5WRHdKOUhUazlqMnpyK1lBaWZkd29TbTc3dVhSdzUvREtKeEFDejV5d2htUTR5ZDM0ejdSMXRWRmJNb3JpNG1sQ2VSVGdZSmg2TFVUb3RSRTJ0QjYrU3dlZFZFTUpQVDIrS2tpbDVDR0docVJxZFBTZDQ4c25INkRqOGg3ck9ZKzdLeVpPWkcyKzhVVFkwTkZCZFhVMU5UUTFGUlVYNGZENzhmajhBc1ZpTVdDekd3TUFBQnc0YzRPREJnMnpjdU5FVitrbUlOcU82YVUzamxaOG1VcmFNZUNLRGtUaE9OblVTMi9FenZheUtnZ0tOYUt5SHZ0NjlESjVvd3pSdGFtY3RKbEpWVGl6ZVR5TFpUeklWeCsvM2tzc09ZaG81a3FrWWdVQUJzVVNja21LZHF1a0twZFBoV0ZlWVhXKzNrelZxS0MxUnFLbjA0L1ZDSUpqSG52MVJpb3FLMEUyTDNqNFRTeFFqOGF5dnJ5bjhTdHVSMkdhM3FpWW5telp0RXBzMmJYSUw0bklRQTRCTU5rRWlFVVhQbWVpWk5JYVpvM2pxVkVwTHkwZ25VOFRpZ2tTc204R0JRK1NGeXFnb3IwSFZBamkyaVpITG9RZy8wOHNLaUVWM3NIdkh2NG5rNE1JZHZrQlZVeUR2Q2lyTFF5aXlDbW1EWXhrTURRM1MycTdnOVZYajZ3T1BDb054T055ZElYczRoU0JCZkhBUFBaMXYwSFhNWFRIWnhXWGN4S0RyNk01MXdieTZKNHVubEtONnBtTkpTQ2JTVkpSTFZPbWdxU0VFRHFvYXdyUURsSlpWQWFEbmJKS3BMSWdZd3Q3TDFwZmVQT1g2dFI3WTNnemJLYS9xbFdYbGZ2S0M5eEZMd2NuK0lRYjZ1OGptNG9TQ1B0S3BhUWcwWXNrWTNjY09FUjFxeFRFN09OSFRRa2ZyVnRlVmRIRVpiOCtnZGU5NmdYMTBSMTY0b2ltWHRURXRoM0RvR2hSaDRQWFBSdlhrNFE5NENIaFM5UGZ2SWIrM2xMejhCZ3dqanBtTGNhVDl6VE1hN3ZGajI4VHp4N1l4OERmVDVZeHBEdDFIdDlIZXZvZGdmaVYrejZlSVJ1ZWdxSDdpc1ZaYTkvK1dmYnQrNFFxQWk4dEVpc0hwdmZtN1NEc3BnNkZxdEx3d1JqWktMdHVEYWJidTNQWG05dVprZkw4c3IyZ2tuUnhpOE1UQkw1enJKSzl0dU9jRFJ2NG1tb2pKMHZKclVJU0hnZjUzMkxmck9WY0lYRndta0JFTnNIN1cxZXZEaFdWM1NHemlROGZyT3RyY3lMNkx5K1hLL3dlOE0wbm1nQUo3ZEFBQUFBQkpSVTVFcmtKZ2dnPT0iJwoKCgp2ZXJzaW9uID0gIkF1ZGlvV2F2ZWZvcm0gVjEuOSAtIDI0IE1hcmNoIDIwMjMiCgotLSBXQVYtRGF0ZW4Kc2FtcGxlZGF0YSA9IHt9CnNhbXBsZWRhdGFsZWZ0ID0ge30Kc2FtcGxlZGF0YXJpZ2h0ID0ge30KCkZGVF9CdWZmZXIgPSB7fQpsb2NhbCByZUNhbGNGb290YWdlID0gZmFsc2UKCmVsb25nYXRpb24gPSAwCmVsb25nYXRpb24yID0gMAplbG9uZ2F0aW9uMyA9IDAKZWxvbmdhdGlvbmh5c3QgPSAwCmVsb25taW4gPSAxMDAKZWxvbm1heCA9IDAKCmVsb25fcGFyYW0gPSB7fQplbG9uX3BhcmFtWzBdID0ge29uID0gMSwgYndpZHRoID0gMC4wMywgYm9mZnNldCA9IDAuMiwgYW1wbGlmeSA9IDEsIG9mZnNldCA9IDAsIG9wZXJhdG9yID0gMH0KZWxvbl9wYXJhbVsxXSA9IHtvbiA9IDAsIGJ3aWR0aCA9IDAuMDMsIGJvZmZzZXQgPSAwLjIsIGFtcGxpZnkgPSAxLCBvZmZzZXQgPSAwLCBvcGVyYXRvciA9IDB9CmVsb25fcGFyYW1bMl0gPSB7b24gPSAwLCBid2lkdGggPSAwLjAzLCBib2Zmc2V0ID0gMC4yLCBhbXBsaWZ5ID0gMSwgb2Zmc2V0ID0gMCwgb3BlcmF0b3IgPSAwfQplX3NlbF9vbGQgPSAwCgplcnJvcl90eHQgPSAiIgoKRnVSZWdpc3RlckNsYXNzKCJBdWRpb1dhdmVmb3JtV29yayIsIENUX1NvdXJjZVRvb2wsIHsKICBSRUdTX05hbWUgICAgICAgICAgICAgICA9ICJBdWRpbyBXYXZlZm9ybSIsCiAgUkVHU19DYXRlZ29yeSAgICAgICAgICAgPSAiRnVzZXMiLAogIFJFR1NfT3BEZXNjcmlwdGlvbiAgICAgID0gIkF1ZGlvIFdhdmVmb3JtIiwKICBSRUdTX09wSWNvblN0cmluZyAgICAgICA9ICJBV1ciLAogIFJFR19GdXNlX05vRWRpdCAgICAgICAgID0gdHJ1ZSwKICBSRUdfRnVzZV9Ob1JlbG9hZCAgICAgICA9IHRydWUsCiAgUkVHX1NvdXJjZV9HbG9iYWxDdHJscyAgPSB0cnVlLAogIFJFR19Tb3VyY2VfU2l6ZUN0cmxzICAgID0gdHJ1ZSwKICBSRUdfU291cmNlX0FzcGVjdEN0cmxzICA9IHRydWUsCiAgUkVHX1RpbWVWYXJpYW50ICAgICAgICAgPSB0cnVlLAogIFJFR19Ob1ByZUNhbGNQcm9jZXNzICAgID0gdHJ1ZSwgIC0tIGNhbGwgUHJvY2VzcyBmb3IgcHJlY2FsYyByZXF1ZXN0cyAoaW5zdGVhZCBvZiBQcmVDYWxjUHJvY2VzcykKICBSRUdTX0NvbXBhbnkgICAgICAgICAgICA9ICJKaVBpIiwKICBSRUdTX1VSTCAgICAgICAgICAgICAgICA9ICJodHRwczovL3d3dy5zdGVha3VuZGVyd2F0ZXIuY29tL3dlc3Vja2xlc3MvIiwKICBSRUdfVmVyc2lvbiAgICAgICAgICAgICA9IDAwMDAxOSwKfSkKCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi0tIERlc2NyaXB0aW9uIG9mIGtlcm5lbCBwYXJhbWV0ZXJzCgotLS0tLS0tLS0tLS0tLS0tQXVkaW9WaXN1YWxpemF0aW9uLS0tLS0tLS0tLS0tLS0tCkZWUGFyYW1zID0KW1sKICBmbG9hdCBmZnRfZGF0YVsyNV07CiAgZmxvYXQgc2NhbGU7CiAgZmxvYXQgc21vb3RoOwogIGZsb2F0IGFscGhhOwogIGludCBjZDsKICBpbnQgd2lkdGg7CiAgaW50IGhlaWdodDsKICBmbG9hdCBpdGltZTsKICBpbnQgY29tcE9yZGVyOwpdXQoKLS0gc291cmNlIG9mIGtlcm5lbApGVktlcm5lbCA9CiAgICBbWwojZGVmaW5lIGZyYWN0KGEpIGEgLSBfZmxvb3IoYSk7CgovLy0tLS0tLS1jb3JyZWN0ZWQgcG93LWZ1bmN0aW9uIGJ5IENocmlzIFJpZGluZ3MtLS0tLS0tLQpfX0RFVklDRV9fIGlubGluZSBmbG9hdCBwb3djZihmbG9hdCB4LCBmbG9hdCB5KSB7CiAgICBmbG9hdCByZXQgPSBfcG93Zih4LHkpOwogICAgaWYgKGlzbmFuKHJldCkpIHsKICAgICAgICByZXQgPSAwLjAwMDFmOwogICAgfQogICAgcmV0dXJuIHJldDsKfQpfX0RFVklDRV9fIGZsb2F0IF9zaWduKGZsb2F0IHZhbHVlKSB7CiAgaWYgKHZhbHVlID09IDAuMGYpIHJldHVybiAwLjBmOwogIHJldHVybiB2YWx1ZSA+IDAuMGYgPyAxLjBmIDogLTEuMGY7Cn0KX19ERVZJQ0VfXyBmbG9hdCBzdGVwX2Jhc2UoZmxvYXQgZWRnZSwgZmxvYXQgdmFsdWUpIHsKICByZXR1cm4gdmFsdWUgPCBlZGdlID8gMC4wZiA6IDEuMGY7Cn0KX19ERVZJQ0VfXyBmbG9hdDMgc3RlcF9lbXUoZmxvYXQzIGVkZ2UsIGZsb2F0MyB2YWx1ZSkgewogIHJldHVybiB0b19mbG9hdDMoCiAgICAgIHN0ZXBfYmFzZShlZGdlLngsIHZhbHVlLngpLAogICAgICBzdGVwX2Jhc2UoZWRnZS55LCB2YWx1ZS55KSwKICAgICAgc3RlcF9iYXNlKGVkZ2UueiwgdmFsdWUueikpOwp9Cl9fREVWSUNFX18gZmxvYXQzIHBvdzNmKGZsb2F0MyBhLCBmbG9hdDMgYikge2Zsb2F0MyByOyByLnggPSBwb3djZihhLngsYi54KTsgci55ID0gcG93Y2YoYS55LGIueSk7IHIueiA9IHBvd2NmKGEueixiLnopOyByZXR1cm4gcjt9CgpfX0RFVklDRV9fIGZsb2F0MyBCMl9zcGxpbmUoZmxvYXQzIF94KSB7IC8vIHJldHVybnMgMyBCLXNwbGluZSBmdW5jdGlvbnMgb2YgZGVncmVlIDIKICAgIGZsb2F0MyB0ID0gMy4wZiAqIF94ICwgemVybyA9IHRvX2Zsb2F0M19zKDAuMGYpOwogICAgZmxvYXQzIGIwID0gc3RlcF9lbXUoemVybywgdCkgKiBzdGVwX2VtdSh6ZXJvLCAxLjBmLXQpOwogICAgZmxvYXQzIGIxID0gc3RlcF9lbXUoemVybywgdC0xLjBmKSAqIHN0ZXBfZW11KHplcm8sIDIuMGYtdCk7CiAgICBmbG9hdDMgYjIgPSBzdGVwX2VtdSh6ZXJvLCB0LTIuMGYpICogc3RlcF9lbXUoemVybywgMy4wZi10KTsKICAgIHJldHVybiAwLjVmICogKAogICAgICBiMCAqIHBvdzNmKHQsIHRvX2Zsb2F0M19zKDIuMGYpKSArCiAgICAgIGIxICogKC0yLjBmKnBvdzNmKHQsIHRvX2Zsb2F0M19zKDIuMGYpKSArIDYuMGYqdCAtIDMuMGYpICsKICAgICAgYjIgKiBwb3czZigzLjBmLXQsdG9fZmxvYXQzX3MoMi4wZikpCiAgICApOwp9CgoKLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCl9fS0VSTkVMX18gdm9pZCBGVktlcm5lbChfX0NPTlNUQU5UUkVGX18gRlZQYXJhbXMgKnBhcmFtcywgX19URVhUVVJFMkRfXyBpQ2hhbm5lbDAsIF9fVEVYVFVSRTJEX1dSSVRFX18gZHN0KQp7CiAgREVGSU5FX0tFUk5FTF9JVEVSQVRPUlNfWFkoeCwgeSk7CiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICBpZiAoeCA8IHBhcmFtcy0+d2lkdGggJiYgeSA8IHBhcmFtcy0+aGVpZ2h0KQogIHsKICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIGZsb2F0MiBmcmFnQ29vcmQgPSB0b19mbG9hdDIoeCwgeSk7CiAgICBmbG9hdDIgaVJlc29sdXRpb24gPSB0b19mbG9hdDIocGFyYW1zLT53aWR0aCwgcGFyYW1zLT5oZWlnaHQpOwogICAgZmxvYXQgcmF0aW8gPSAoZmxvYXQpcGFyYW1zLT53aWR0aC8oZmxvYXQpcGFyYW1zLT5oZWlnaHQ7CiAgICBmbG9hdCBpdGltZT1wYXJhbXMtPml0aW1lOwogICAgZmxvYXQ0IGZyYWdDb2xvciA9IHRvX2Zsb2F0NF9zKDAuMGYpOwogICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKICAgIC8vIGNyZWF0ZSBwaXhlbCBjb29yZGluYXRlcwogICAgZmxvYXQyIHV2ID0gZnJhZ0Nvb3JkIC8gaVJlc29sdXRpb247CgogICAgZmxvYXQgZlZCYXJzID0gMTAwLjBmOwogICAgZmxvYXQgZkhTcGFjaW5nID0gMS4zMDBmOwoKICAgIGZsb2F0IGZIRnJlcSA9ICh1di54ICogMy4xNGYpOwogICAgZmxvYXQgc3F1YXJld2F2ZSA9IF9zaWduKF9zaW5mKGZIRnJlcSpmVkJhcnMpKzEuMGYtZkhTcGFjaW5nKTsKCiAgICBmbG9hdCBfeCA9IF9mbG9vcih1di54ICogZlZCYXJzKS9mVkJhcnM7CiAgICBmbG9hdCBmU2FtcGxlID0gMC4wZjsKCiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIC8vLS0tLS0tLS0tLS0tLS0tIEludGVyZmFjZSB0byBXYXZlZm9ybSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgLy8qKioqKioqIHhyZWYgKioqKioqKioKICAgIGludCBpZHggPSA2OwogICAgZmxvYXQgZmZ0X2RhdGFbMjVdID0gezAuMGZ9OwoKICAgICNpZiBkZWZpbmVkKERFVklDRV9JU19DVURBKQogICAgc3RhdGljIGZsb2F0IHNwZWljaGVyID0gMC4wNWY7CiAgICBzdGF0aWMgZmxvYXQgc2ZmdF9kYXRhWzI1XSA9IHswLjBmfTsKICAgICNlbHNlCiAgICBmbG9hdCBzcGVpY2hlciA9IDAuMDVmOwogICAgZmxvYXQgc2ZmdF9kYXRhWzI1XSA9IHswLjBmfTsKICAgICNlbmRpZgoKICAgIC8vIEJlZvxsbGVuIGRlcyBBdXNnYWJlYXJyYXlzCiAgICBmb3IgKGludCBpPTA7aTwyNTtpKyspCiAgICB7CiAgICAgIGlmIChzZmZ0X2RhdGFbaV0gID4gIHBhcmFtcy0+ZmZ0X2RhdGFbaV0pCiAgICAgIHsKICAgICAgICAgaWYgKHBhcmFtcy0+Y2QpIGZmdF9kYXRhW2ldID0gc2ZmdF9kYXRhW2ldIDwgcGFyYW1zLT5zbW9vdGggPyAwLjBmIDogc2ZmdF9kYXRhW2ldIC0gcGFyYW1zLT5zbW9vdGg7ICAvLyBjb25zdGFudCBzdWJzaWRlCiAgICAgICAgIGVsc2UgICAgICAgICAgICBmZnRfZGF0YVtpXSA9IHNmZnRfZGF0YVtpXSAtIChzZmZ0X2RhdGFbaV0tcGFyYW1zLT5mZnRfZGF0YVtpXSkqcGFyYW1zLT5zbW9vdGg7ICAgICAgLy8gZHluYW1pYyBzdWJzaWRlCiAgICAgIH0KICAgICAgZWxzZQogICAgICAgICBmZnRfZGF0YVtpXSA9IHBhcmFtcy0+ZmZ0X2RhdGFbaV07CiAgICB9CgoKICAgIC8vKioqKioqKioqIHhyZWYgKioqKioqKioqKgogICAgaW50IHhyZWYgPSAoaW50KSAoIF9mbG9vcihfeC8yICogZlZCYXJzKSAgKSA7CgogICAgaWYgKF94IDw9IDAuNDlmKQogICAgewogICAgICAgIHhyZWYgPSAoaW50KSAoMjQgIC0gX2Zsb29yKChfeCswLjAyZikvMiAqIGZWQmFycykgICkgKzE7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgeHJlZiA9IChpbnQpICggX2Zsb29yKChfeC0wLjVmLTAuMDFmICkvMi4wZiAqIGZWQmFycykgICkrMiA7CiAgICB9CiAgICB4cmVmID0geHJlZiA+IDI0ID8gMjQgOiB4cmVmOwoKICAgIGlmICh5PT1wYXJhbXMtPmhlaWdodC0xKS8vKHk9PTEwNzkpCiAgICB7CiAgICAvL3NwZWljaGVyID0gZmZ0X2RhdGFbMTVdOwogICAgfQoKICAgIC8vIEJlZvxsbGVuIGRlcyBTdGF0aWNhcnJheXMKICAgIGlmICh5PT1wYXJhbXMtPmhlaWdodC0xKS8vKHk9PTEwNzkpCiAgICB7CiAgICAgIGZvciAoaW50IGk9MDtpPDI1O2krKykKICAgICAgewogICAgICAgIHNmZnRfZGF0YVtpXSA9IGZmdF9kYXRhW2ldOwogICAgICB9CiAgICB9CgoKICAgIC8vLS0tLS0g3GJlcmdhYmUgLS0tLS0tLS0tLQogICAgZlNhbXBsZSA9IGZmdF9kYXRhWyB4cmVmIF07CgogICAgLy8tLS0tLS0tLS0tLS0tLS0gSW50ZXJmYWNlIHRvIFdhdmVmb3JtIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIGZsb2F0IGZmdCA9IHNxdWFyZXdhdmUgKiBmU2FtcGxlKiBwYXJhbXMtPnNjYWxlOwoKICAgIGZsb2F0IGZIQmFycyA9IDEwMC4wZjsKICAgIGZsb2F0IGZWU3BhY2luZyA9IDAuMTgwZjsKICAgIGZsb2F0IGZWRnJlcSA9ICh1di55ICogMy4xNGYpOwogICAgZlZGcmVxID0gX3NpZ24oX3NpbmYoZlZGcmVxICogZkhCYXJzKSsxLjBmLWZWU3BhY2luZyk7CgogICAgZmxvYXQyIGNlbnRlcmVkID0gdG9fZmxvYXQyX3MoMS4wZikgKiB1diAtIHRvX2Zsb2F0Ml9zKDEuNTBmKTsKICAgIGZsb2F0IHQgPSBpdGltZSAvIDEwMC4wZjsKICAgIGZsb2F0IHBvbHljaHJvbWUgPSAxLjBmOwogICAgZmxvYXQzIHNwbGluZV9hcmdzID0gZnJhY3QoKHBvbHljaHJvbWUqdXYueC10KSArIHRvX2Zsb2F0MygwLjBmLCAtMS4wZi8zLjBmLCAtMi4wZi8zLjBmKSk7CiAgICBmbG9hdDMgc3BsaW5lID0gQjJfc3BsaW5lKHNwbGluZV9hcmdzKTsKCiAgICBmbG9hdCBmID0gX2ZhYnMoY2VudGVyZWQueSk7CiAgICBmbG9hdDMgYmFzZV9jb2xvciAgPSB0b19mbG9hdDMoMS4wZiwgMS4wZiwgMS4wZikgLSBmKnNwbGluZTsKICAgIGZsb2F0MyBmbGFtZV9jb2xvciA9IHBvdzNmKGJhc2VfY29sb3IsIHRvX2Zsb2F0M19zKDMuMGYpKTsKCiAgICBmbG9hdCB0dCA9IDAuM2YgLSB1di55OwogICAgZmxvYXQgZGYgPSBfc2lnbih0dCk7CiAgICBkZiA9IChkZiArIDEuMGYpLzAuNWY7CiAgICBmbG9hdDMgY29sID0gZmxhbWVfY29sb3IgKiAoMS4wZiAtIHN0ZXAoZmZ0LCBfZmFicygwLjNmLXV2LnkpKSkgKiB0b19mbG9hdDNfcyhmVkZyZXEpOwogICAgY29sIC09IGNvbCAqIGRmICogMC4xODBmOwoKICAgIGZyYWdDb2xvciA9IHRvX2Zsb2F0NF9hdyhjb2wscGFyYW1zLT5hbHBoYSk7CgogICAgX3RleDJEVmVjNFdyaXRlKGRzdCwgeCwgeSwgZnJhZ0NvbG9yKTsKICB9Cn0KXV0KTG9nb19PbiA9IHRydWUKaWYgKExvZ29fT24pIHRoZW4KLS0gIEJyYW5kTG9nbyA9IFtbCi0tICA8Y2VudGVyPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnN0ZWFrdW5kZXJ3YXRlci5jb20vd2VzdWNrbGVzcy92aWV3dG9waWMucGhwP2Y9NDUmdD00NTk3Ij48aW1nIHdpZHRoPSIzMjAiIGhlaWdodD0iNjAiIHNyYz0nZGF0YTppbWFnZS9wbmc7YmFzZTY0LAotLSAgLzlqLzRBQVFTa1pKUmdBQkFRRUFZQUJnQUFELzRRQm9SWGhwWmdBQVRVMEFLZ0FBQUFnQUJBRWFBQVVBQUFBQkFBQUFQZ0ViQUFVQUFBQUJBQUFBUmdFb0FBTUFBQUFCQUFJQUFBRXhBQUlBQUFBUkFBQUFUZ0FBQUFBQUFBQmdBQUFBQVFBQUFHQUFBQUFCY0dGcGJuUXVibVYwSURRdU1pNHhOQUFBLzlzQVF3QUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUIvOXNBUXdFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQi84QUFFUWdBUEFGQUF3RWhBQUlSQVFNUkFmL0VBQjhBQUFFRkFRRUJBUUVCQUFBQUFBQUFBQUFCQWdNRUJRWUhDQWtLQy8vRUFMVVFBQUlCQXdNQ0JBTUZCUVFFQUFBQmZRRUNBd0FFRVFVU0lURkJCaE5SWVFjaWNSUXlnWkdoQ0NOQ3NjRVZVdEh3SkROaWNvSUpDaFlYR0JrYUpTWW5LQ2txTkRVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmc0U0Zob2VJaVlxU2s1U1ZscGVZbVpxaW82U2xwcWVvcWFxeXM3UzF0cmU0dWJyQ3c4VEZ4c2ZJeWNyUzA5VFYxdGZZMmRyaDR1UGs1ZWJuNk9ucThmTHo5UFgyOS9qNSt2L0VBQjhCQUFNQkFRRUJBUUVCQVFFQUFBQUFBQUFCQWdNRUJRWUhDQWtLQy8vRUFMVVJBQUlCQWdRRUF3UUhCUVFFQUFFQ2R3QUJBZ01SQkFVaE1RWVNRVkVIWVhFVElqS0JDQlJDa2FHeHdRa2pNMUx3RldKeTBRb1dKRFRoSmZFWEdCa2FKaWNvS1NvMU5qYzRPVHBEUkVWR1IwaEpTbE5VVlZaWFdGbGFZMlJsWm1kb2FXcHpkSFYyZDNoNWVvS0RoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1TGo1T1htNStqcDZ2THo5UFgyOS9qNSt2L2FBQXdEQVFBQ0VRTVJBRDhBL2tIb29BSzNOR3NyYlZCYzZZSTNPc1hiV3cwU1R6dGtNbHlqU0NUVHBJeXVHbTFJUEhIWnlGMUNYY1VVTFlTNWVTUHB3bE9uVnhFS1ZYbTVhcXFVNE5OUnRYcVU1d3cwcE5wcFU0NGgwcFZlcnBLYVZuWm0rSDloN1MySVVuVGRLdkZjc3VUbHJTb1ZJNGFjblovdTZlSWRLcFZqYThxY1p4VFRkMWlGV0RGU3BEQTdTcEJEQmdjRlNEeUNEeGpHYzhWcTJ1ZzYzZlh0aHAxcHBHcFQzMnEzdHJwdW0yc2RuY0dhK3Y3NlZJTE96dFU4c0dhNHVacFk0NElreThqdW9VSElyQ01KemFqR01wU2JVVWttM2VUc2w2dDZMek9XZFNuVFY1emhCV2J2S1NpclJWNVBWclJMVnZvdHkzNG1taE9wQ3d0VnQvc3VoMjhlaVF6MjZScXQ2YkY1UmRhZ3p4cURNYisra3VydUo1QzhrZHROQmJsM0VDazg5WFJqWnhuaXE3cHFNYWFxT0ZKUWlveDlsVC9kMDlFa20zQ01YS1Z2ZWszSjZzNmNSWCtzVnBWbENNSXk1VkNFSXFFWTA0UWpDbXJKSlg1SXg1bnZLVjVQVnNLSzVURUtLQUNpZ0Fvb0FLS0FDaWdBb29BK3AvQS83REg3Ylh4TzhLYUw0OCtHMzdIZjdVL3hDOERlSkxaNzN3NzR6OEQvQUxQbnhhOFdlRk5mczQ3aWEwa3U5RjhSYUQ0UnY5STFXMlM2dDdpMmVleHZKNGx1SUpvUzRraWRWNnYvQUlkdWY4RkUvd0Rvd2o5dEwveEZyNDVmL01MUUI4VzE5Y2VHL3dCZ0Q5dkR4bjRkMER4aDRQOEEySi8ydVBGZmhMeFhvdWxlSlBDL2lqdzMremQ4WTlkOE8rSlBEdXUyTUdxYUpyK2dhM3BmZ3k2MHpXTkYxalRMcTIxSFN0VjA2NXViSFVMRzVndTdTZWEzbWprWUF3ZmlOK3hWKzJUOEh2Q09wZkVENHVmc2xmdE5mQ3p3Rm9zbGhGckhqZjRqZkFiNHArQ1BDT2t5NnBmMjJsYVpIcVhpWHhONFYwelJyR1RVZFV2TFBUYkJMcTlpYTh2N3UyczdjU1hFOFViZUYrRGZCWGpMNGplS2RFOEQvRDN3bDRtOGQrTmZFMTlIcG5odndmNE4wSFZmRkhpbnhCcVVxczBXbjZKNGYwUzB2dFcxYStrVkhhTzBzTFM0dUhWR0t4a0tjQUgxSkovd1RuLzRLRVJmNjM5aEg5c3FQSFh6UDJZUGphbi9BS0Y0SEZVcFArQ2ZQN2U4WCt0L1lnL2E5aXgxOHo5bXI0ekovd0NoZUN4UUJVay9ZSi9ib2hSNUpmMkx2MnNvbzQxTFNQSit6bjhZRVJGVVpMT3plRGdxcUJ5U1NBQjFyd0x4eDhOdmlMOE1kVVRRL2lWNEI4YS9EM1c1SXZQajBmeHg0VzF6d25xa2tJMjVtVFQ5ZXNkUHUyaUc5ZjNpd2xQbVhua1pBT0tyMTc0Ui9zKy9IdjhBYUF2OVowdjREL0JENHZmR3pVL0R0cGJYL2lEVHZoSDhOZkdmeEl2OUNzTDJaN2V6dmRadFBCdWk2emNhWmFYZHhGTEJiWE43SEJEUE5HOFVUdTZNb0FQZFArSGJuL0JSUC9vd2o5dEwvd0FSYStPWC93QXd0ZkovaTN3ajRzOEErSnRkOEZlTy9DL2lMd1Y0eThMNm5kNkw0bThKZUxkRjFMdzU0bThPNnpZU3RCZmFUcnVnNnhiV2VxNlJxZG5NclEzZGhxRnBiM1Z2S3JSelJJNElvQTUyaWdBb29BS0tBQ3BJbzVKcFlvb1ZaNVpaRWppUmZ2Tkk3QlVWZjlwbUlBOXpUU2JhUzNiU1hxM1pDYlVVMjNaSk50dm9scTM4a2Y2Sy93RHdURS9aUi9ZOCtDZjdIV3RmdHMvRXY0YStBL0VQaVRSUk5vdXU2enBmaHUyaHZkVjFud2hxMWw4UHZFSGpEVWJxMmd2TllrazhZZU83WFVkZFcyc25mUjdiVDd0ZFEwclJSTGZTV285TS9aWi9iWC9ZRy80S3ZlR1BpUm9Yd2E4UDZ6NEk4UitDVDRpaTBueFhENFkxUDRjYTNvWGlUdzVaTHF1bnpOcEg5dStJZEwxalNOVTBvWEdxNlZxdHhmcmNGZE4xTFROWTBQd3RxWjBXWFYvdmN3ei9BQjJXWW12aThteGJ3bUV5ck04YmxsREFVazQ0SEdWY3BwS1dZWXJNc1BGcU9NL3RHdW5LcTYzTlZqQ3ZUcFU1UW8wYWJvdmd2d213SEV2aFZVcThVempqc1Z4SGhNWmlNZjhBWEtGTEdaalZlRXk3Sk0yemFNY1pQQ1ZYaHY3Q3dIRUdYNFhKNDBjUmhLZUVxWU9WYWxTcVZaWXFxdjRHL3dCdXY0SVdQd0UvYU04WCtFZEh0N2EwMERVbnVQRUdpV3RrSEZoYlEvMjVyZmh6Vm9kTldURWlhU25pYnc1cnY5alJTS2trR2tteWdrUlpJMkZmSGxmS1p6UW80Yk5NZFN3MGVYRGUzbFZ3c09aU2NNTGlFc1Job09Tc25LRkdyQ010Rjd5ZWkyUEt5TjRuK3ljRFN4dGI2empzTFMrb1k3RXBXV0p4MlhUbGdjWmlJcnBHdmljUFZxeFd0b3pXb1VWNWg2b1VVQUZGQUJSUUFVVUFGRkFCUlFCL3EvOEEvQkI3L2xFYit4SC9BTmswMTMvMVpIamF2MXhKeHllZ29BL3hENi8yRFA4QWdtWmMyNi84RTN2K0NmYXRQQ0NQMkl2MlVRUVpVQkJId0g4QkFnZ3RrRUhnZzlLQVB6NS80T1Y1b1pQK0NQdjdSeXh5eHVSNHArQXBJUjFZZ2Y4QUM5UGgrTTRVazR5UU0rNHIrRGovQUlJcy93REtWZjhBWVYvN0w3NFgvd0RSRi9RQi9yWTBVQUZlYy9GVDRQOEF3cCtPZmczVS9oNThadmh4NEkrS2ZnYldJM2oxTHduNC93RERHaitLOUJ1ZDBieENZNmRyVnBlVzhWM0Nzam0xdm9FanZMU1FpYTFuaGxWWEFCL20wLzhBQndOL3dTVjhMLzhBQk9ENDRlRFBpRDhDTExVN2Y5bUg0L3JyVCtFdEQxQzl1OVlsK0YzajN3OExPZnhIOFBtMW0rbnV0U3Y5Q3U3RFVMVFgvQlYzclZ4THEwdGovYmVqWEZ6cVVuaG1iVnI3NzgvNE0rWkVqL2FEL2JMYVIwUUg0Ti9Ea0F1d1VFLzhKdHFweGxpQm5BSng3R2dEKzluN1ZiZjgvRUgvQUg5ai93RGlxL3lMZitDdTVEZjhGUVAyOUdVZ2cvdFIvRjBnZzVCQjhXWDVCQkhCQkhJSTYwQWZuUlJRQVVVQUZGQUJUNHBaSVpJNW9tS1N4T2trYnIxU1JHREl3OTFZQWozRk5OeGFhZG1tbW11aldxZnlZbWswMDFkTldhZlZQZEg5azM3QzMvQld6NERlQVBnVlovQ2I0dy9EdnhqcWZoTFZiRzd1cGRIOEpTMmtscEpINGp2cE5ldmJSNFRjNlI5a1hTTlF2Q21qWE5yZUhVTFJiT3luSDJXL3QxbEVuaUgvQUlLWGZzYmZBRFQvQUJVMzdLbndZOGVlR1BFUGkzU05UMGFmV05iaDhLNk1MR3cxaWV5dk5VaXRyUFFyZURTUE8xUzgwM1RyblY5VXUwT3VhekpwK25EVnRYdTRkT3NvSVA4QVZ2Q2Zzd09QdUtPSWxtR0I0NzRieS9nWGkyZERpTEQxcStDeGxmaUxBWmZuVWFXYVN3cXdYN3JDdkZVcWVKZURkZFl4U3hFS1VaMU1QVDlwVXd5K2Z5VHh1NG40ZTRMem5nUEFRckxCWnRVd01NMG91bGhKd3FWY3RqaHNQT1dFeDg0enpEQjBzZkhCNGRZNmhoM0ZZaWxSbzBhcm5HbXBQK1lEOXNMNHk2aDhkdmlsRjR6dUlnbGhwT2hRZUZOUFdGNWJxRzE4cldOYzhUWHR2TnFMSWtOOXFGenFmaWZVTld2WkxYL1JFbTFGN2EwTFEyd05mS05md2o5SS9ndkIrSGZqWHg3d1hsa2E2eXZoN004TGwyV1ZjUlRkT3Bpc0JSeXJBTERZMVhqRlRoaTZkc1JDclRTcFZWVTU2ZnVTU09uSUhVbGxHRHFWa2xXcnhxNG11b3JsWHQ4VlhxNGl1K1g3TGxWcXprMDIybTdOdDZoUlg0aWV3RkZBQlJRQVVVQUZGQUJSUUFVVUFmNnYvd0R3UWUvNVJHL3NSLzhBWk5OZC93RFZrZU5xL1dpOWs4cXp1NVArZWR0Ty9IK3hFN2Ywb0EveEdLL3M5L1piL3dDRFUzNGVmdEUvc3lmczZmdEEzdjdaL2pUd3RlL0hUNEUvQ0w0eDNmaGkxK0MyaDZyYStITHI0bS9EL3dBUGVOYmpRYmJVNXZpSll5NmxCcEV1dHZwOE4vTFpXa2w1SGJyY1BhMjdTR0pBRDV6L0FPQ29IL0J1SDRGLzRKNS9zWWZFMzlxelJ2MnF2Rm54UjFMd0RxdncrMHkyOEdhbjhLdEg4SzJPby84QUNiZVAvRGZneWFlZldiWHh2cms4SDlud2E1TGZSeHg2Zko5b21namhhU0pHWngrUnYvQkZuL2xLdit3ci93Qmw5OEwvQVBvaS9vQS8xc2EvbUcvNE91ZkgzanI0ZGY4QUJQOEErQ1d0ZkQ3eHA0dDhDNnhlZnRoZUN0SnU5VzhIZUk5WThNYW5kYVZjZkJYNDgzYyttWEYvb2w1WTNVK256M1ZqWlhNMWxMSzF0SmNXZHJNOGJTVzhUSUFmeDhmOEU1UCtDbi83ZC83UGY3VTN3S1R3WiswRDhZdkhQaGJ4SjhVdkFuaER4UDhBQjN4bjQ2OFQrT3ZBL2puUWZGSGlmVHRDMUxRLytFVDhTNnZlNlZaNjNlV21wWEVPaDYvcGFhZHJla2FsTERjV2VveEtabzV2OVlDZ0QrWjMvZzY1OFA2THEzL0JNUFJOWDFHQzJiVS9DLzdUZndzMUh3L2NTeDV1WXJ6VVBEWHhFME85aHRaUU42Q2ZTdFR2WG5pTGVWS3RzanVyU3d3TW44aXYvQkdIL2dsRjRkLzRLcy9FYjQyK0JQRVh4bzF2NE1SZkNYd1Y0WjhXMjJwYUw0S3NmR2ttdHlhL3J0M284bGpQYlgzaUx3NnRrbHN0c3M2VHh6WExTTXhqTVNBQjZBUDZELzhBaURyK0dYL1I5bmp2L3dBTVA0Zi9BUG5uVi9HLysyTjhBcmI5bGY4QWFxL2FEL1p3c3ZFOC9qU3krQ1h4WjhhL0RlMDhXWFdsUjZIZGVJTFh3dHJWMXBsdnFsenBFTi9xa1duejNVVUNTVFcwV29YVWFTRnRrdTBoUUFmTmxGQUJSUUFVVUFGZlczN0pQN1BjWHg5MTc0aEtOVDhPM0dwZkRud0RxWGpyUmZoenF2aUNIdzdydnhYMURUblUvd0RDSWVEN204U1BUTHZYZnNxM04vQnBlbzZyb2Nlc1N3VytqMm1wSFV0UnNySzcvUS9DZktNbnozeEc0Unk3aUxMODJ6Ymg5NXRUeHVlWlZrV0dXTHpqTThveXFsVnpYTXN1eS9ET3Zobld4R053ZUNyWWFNYWRhTmUxVnZEeHFWMVRwVDFvMG5YcVJwUlU1U256S01hY0pUcVRrb3R4aFRoRk55bk5wUmlrdFpOSDZYL0VUNEZmRDd3eDRWL1p3OFpmQ1BWUEZXcjJ2eDMrREVQeEMxSHducS9oOXJMWFBCbmkzUTc2NTBueC93Q0VwOVBzb3hOQW5oZS9nRVYxRmNRR1d3S1RxOXhlMnNNV29UK1M2cDhFdkhIaWhVaHN2QzNpcDdXVUR6YnF6OE42emZBcTJCOHJRMmJ4UktBUm1XNGVDRkJ6Sk5HbkkvNmIvQjN4dHkzamp3KzRlNHp6ZW5sZkRPS3F3emZCWXJJNTQ2aGg1WUQrdzg3elRJTU5UZE91NmRYRExGVXNxamlxRkZ3ZHFkV01LRHJLRUpTK1J3L0F1WTR2RXVXRXlyRnZtcVRjNlVjTFduT200VkowcHVmdWU1YVZPWHZTaXRydHZVK3dadmgxK3l4K3pSK3liOFR0SCtJT29mQ2p4MTQ5K0ttbi9EZUxSdEw4UWVITlYxblUvaHQ0UXY4QXc3cFhpbjRvNnBKRGQ2ZEdiTDR2eDYxcTF4NEYwTzUwTzZiVTlBdVBDRnhkMldyYU5ZNjh6djhBemhhci9adjlwNmovQUdNTHNhUjl2dlA3S0YrWTJ2aHB2MmlUN0NMMW9WV0Zyc1d2bGZhVEVxeG1iZVVVTGdWL2g3OU9xbmpNejQxd1BHL0VHWDRqSU03NHN4MlBody93NVh4RkhFMXN1OFBNaHlmaHpLOHB4V0xsaDZrNlZHZVo4U3c0b3gyRW8zbFc5aldxdkVTWExSaEg2K1dWVk1wb1FvNGpsaFhsT1hMUWhPRlNOUER4cDByVHFUcHluQjFhdGVWWjhzSlNWT25DS2xMbmJoQ2hSWDhIbUlVVUFGRkFCUlFBVVVBRkZBQlJRQi9xKy84QUJCeHQzL0JJejlpTWp0OE52RUMvaW54TDhjSWYxVTErcjJ1dVk5RDFtUWRVMHJVWEdQVmJTWS8wb0EveEpLLzJFdjhBZ21YL0FNbzNmK0NmWC9aa1A3S1AvcWgvQVZBSDU3LzhITFgvQUNoOC9hTy83R3I0Qy84QXE4L2gvWDhHbi9CRm4vbEt2K3dyL3dCbDk4TC9BUG9pL29BLzFzYStHdjIvZitDZS93QUEvd0RncEg4SS9DL3dVL2FKbjhlUWVEZkNQeEcwejRvNlMzdzk4UldYaG5XRDRuMG53ejRyOEoyZ3VyNi8wVFhvcHROL3NyeGxyUG0yaTJrVHZjL1pKaE9vZ01jZ0I4b2ZzaC84RUZmK0NibjdGM3hOMEg0ei9EVDRVK0kvRjN4VDhJelIzZmc3eGo4V2ZHMnErTnB2Q1dwb0hBMXZRdEFWTko4SVcydnhsa2V5MXlmdzdjNnBvODBTWEdoM1dtVHROSkwreWxBSDhOUC9BQWRrZnQ5ZUJmRncrRlgvQUFUOStIT3YybXY2NzRFOGFRZkdiNDh6NlRmckxiK0YvRUZ0NGExYlFmaDM4UDhBVVRCRTZUNnpKcEhpN1h2Rm12YVpKZEovWkVVbmcrYWUybXU3d0hUZk9QOEFnejIvNU9FL2JMLzdJMThPZi9VMzFTZ0QrOTJ2OGlmL0FJSzhmOHBRZjI5Zit6cFBpOS82bG1vVUFmblBSUUFVVUFGRkFCWDBuK3o5OEtQRkhpYlU0L2lCRnFrUGhUd3Y0VTFEZko0Z3ZKM3RocU9wMnNQMnIreE5QQ1lhWVNvMEthdGNNUmIyTmhjczcrZkswZHRKKzRmUnU0S3ozajd4dDhPOGt5Q3RVd2VLd3ZFbVc1L2k4eXB6ZEtXVlpWdzdpcVdiNWptQ3FwcjJkV2poc0pLR0ZibEdNOFpWdzlLVTRSbTV4OVBLTUhVeHVZWWFqVGZKYWFxMUtqZGxUcFVtcHptMzAwWExIbzV5aW0xZTUrbm5nUDRwZU00cksxa3RmRm1yVzhPQWtubDZsTmRXZnluRE5iTTBrMFR3U2NTUXZHeFNTTmxkR0tFTWUwOFRmRTY5bnRHKzIrTE5mdTNLWWRMYVZJV1BYY3ZtN2k2NTU1VTV4WC9TelU0WnliRjVqaHNmbG1WNVhXK3RScFY0NHlFSWV3cTBxcXAxS1ZhUHNWeVZZenB5VTR5aTNHb3BKcHRTUDF1blNrNlNqS3ZWblFjWXlqU2RTVXFjYnhUYlNiY2JhYnBhcnJZK05Kdkh2Z0MvK01YdyswbjRwd3RZZkNiVXZFVXRwNHgzeVhON3FHdFIzR21haGJhZTJzNmk0bXZaTk90Tlduc0xxU0JXRnRhcEc4eW9zZ1dSZm5uOXJ6OW1POC9acThlYVZhNmJxdzhUL0RYNGdhU2ZGdnd3OFdLdXg5VThQVFBHWHNOUWo0QzZ0by8ybTFpdkdqQWl1cmU1c2I5VXRudTVMSzEveVQvYUxaUFE0anpIRjU1aE1UaHErWitGK1o1ZGtlZVllblNqU3I0WEplTGN1eTdFWk82M0w3dnNwNW5oc1hWd0ZHQ2FweHhlUHU0eGpUVS9tTSt5N0NZM0pzZm1HSG55NC9KTXd3OGNUaDB2ZGVWWmhTb1VhRlpTdHJPbG1FZVdTdmVTeGNwV1NqcjhtMFYvbEVmbkFVVUFGRkFCUlFBVVVBRmZzUi93VGUvNElsL3RVLzhBQlQ3NGQrTXZpbDhDZkh2d0E4SCtFL0FYangvaDk0aFQ0citML0crajY4TllqMExRUEVSdU5QMGJ3ZDhOL0hCbjArZlRmRUVTMlYxZlhXbXgzVjdZYW5hN292c3dsa0FQM0IrSDMvQm5aNCt2TGVDZjRxL3QxZUVQRGwwclJOYzZYOFB2Z1hyUGpXM2xUSTgrS0RYdkVmeEs4QXlXN1l5SXJpVHc1Y2pPR2UyL2hyK1J2OW96NFZyOEMvMmhQanQ4RWt1ZFN2WS9nOThaUGlkOExZNzNXTFJMRFY3eVB3QjQxMXZ3cEhkNnBZeEV4V2VvWEthU3M5NWF4a3h3WEVra1VaS0tEUUIvcVRmOEVMTkl2dEQvQU9DU243RDlscUVVa004M3dvdmRYalNXSjRtTmw0aDhjZUxkZjB5VUs0Qk1jK25hbGFUd3lENUpvWkVtakpSMUovVFA0aTY3WmVGL2g5NDY4UzZtNGowN3c3NE44VDY3cUVoWUlFc3RJMFMrMUM2Y3UzQ2hZTGVRbGp3dU1uZ1VBZjRvTmY3Q1gvQk12L2xHNy93VDYvN01oL1pSL3dEVkQrQXFBUHozL3dDRGxyL2xENSswZC8yTlh3Ri85WG44UDYvZzAvNElzLzhBS1ZmOWhYL3N2dmhmL3dCRVg5QUgrdGpYNVdmOEZkZitDbWYvQUE2dC9aMjhDZkh6L2hTZi9DOS8rRTErTk9oZkNEL2hFLzhBaFpIL0FBckQrelA3YThEZkVMeG4vd0FKRC9idi9DQmZFUDdiOW0vNFFUK3pmN0ovc2EwODcrMWZ0bjlweGZZZnN0NEFmem9Ybi9CNUZldkN5MkgvQUFUdHRiYTQvaGx2UDJzWnI2RWY3MEVQN051bnUzNFhLVjhEZnRSZjhIVlg3ZnZ4cTBIVnZDWHdTOEtmQy84QVpaMGJWNExxMGw4UitFcmEvd0RIM3hTdDdPOGhhM21nc1BHUGpESGgzU3B2SWtrRU9yNk40QjAzeEJZWEpqdnRJMWZUYnlDQ2FNQS9tYzFqV05YOFJhdnFtdjhBaURWTlMxelh0YzFHOTFqV3RiMWkrdXRUMWZXTlcxSzVsdk5SMVRWTlN2Wlo3elVOUjFDOG1tdTcyOXU1cHJtNnVaWlo1NVpKWkdZLzJBLzhHZTMvQUNjSisyWC9BTmthK0hQL0FLbStxVUFmM3UxL2tULzhGZVArVW9QN2V2OEEyZEo4WHY4QTFMTlFvQS9PZWlnQW9vQUtLQUN2dGY0bytNZkJGMThEUENmaFR3dHE4TTJnYUxvZWdXT214NmRkUTIycXorT1dMWHZpeVR4Qm9rclFYMGVtM0JmVUx0THNRR0ZyMi90NDFsdTQxRFIvMUo5SERpRGhUaHZJUHBBWXpQTTRvNVhubVkrRG1lOFBjT1V2YmZWc2RqUDdabDdQTVZsVmViaFNuamFkV2psZE40T05XT0x4R0d4T0lxWWVsVXBZYkZTcGVybCtJcDRmQzVwZVNqV3JZV0ZDbXRtNmM2c1hWNVgzNW9Vcnh2ZHhjbWs3WFgzbjhPUEJPaUo0YTBPUFNkVFM1aEdoNlNrbHRJcnY1b2dzSUlFdVlMaVBjcFdhS05HQWtWY2YzanpWVHhwb0VWakhLc1N4eFp6eStIUGZvRlluNmM5ZnBYL1FQd3h4VmxlQXlESmFsTEYwRmxlQnlMTGFPSHhFYXNaVWE5SEI0REQwY1BVaHkyNVhVcDBvYzlQZU11WmFyVSt2cDhWNENHWDA2a2ExUG1qUmlsRy92S1NqRldrbmJXTGZUdHV6ODEvMml0UFd5OFRhRE5jM0UxeFl6UU41bHRFVmlrQ3BOR2JsNE55YlZrbGpJUkhkV0FJVEl4a05MKzBaOGE5RytLa2Z3LzBUd3FmRWtmaGZ3UG9MMmRuYWVKTDI0dko3ZTl2SXJDQzZqZ2E0djlRSmpXUFRZSGVjU3A1OHMwZzhzSkZIWCtLbjBrL0ZISU1QeHA5SzNJc1JQTXNmbi9pZmpQQ2lua2VKcHhvMU1xd21CNFpXWFpubUR4UFBVak9oaVlZYWpTd1dDbFNvVkp5cFl2RlI5cFJqS3FxL3g3elpZaW5tY29UcVArMFZRZzNHVnFjb1VLdE9wYVVVN096cHJsYnZhMmxydS96SFJYK2Y1NVlVVUFGRkFCUlFBVVVBRmYxdC93REJwcCsyUDRmK0ZQN1NYeG8vWkk4YmF6cDJrYWIrMGg0YzBEeFg4TnJqVmI2Q3pqbitLWHd6ZlZJWnZDbW0vYUxpR09iVS9HWGc3eEpxZDlIQXFUWEYxTjRGc3JPMFVUWEFqbUFQOUJXdndkL2EwLzROMVA4QWdudisySCswbnJmN1R2ajgvR253ZDR1OGFhbkJybnhJOEsvRFB4eG9PZytCL2lGcjBVTnZCY2Exck5qclhndnhKcnVqYWhxOE50R05kazhIK0lQRGNlcFhCbTFUeTdmV3J1KzFPNkFQMjg4RmVEZkMvd0FPZkJ2aEw0ZStCOUZzL0RmZ3J3SjRaMEh3WjRROE82Y3JwcCtnZUYvQytsV21pZUg5RnNGa2VTUmJQU3RKc2JTeHRWa2trY1FRSUhkMkJZL2xQL3dYUi9hOThOZnNoZjhBQk5uOW9qV2IzV2JXeThlL0dYd1hybndEK0ZHa2VmQ21xNnY0citLV2szdmhyVTlRMHUza2NOSi93aG5oRzk4UStNcnE0S1BCQU5FZ2djTmNYdHBCY0FIK1ViWCt3bC93VEwvNVJ1LzhFK3YreklmMlVmOEExUS9nS2dEODkvOEFnNWEvNVErZnRIZjlqVjhCZi9WNS9EK3Y0TlArQ0xQL0FDbFgvWVYvN0w3NFgvOEFSRi9RQi9yWTEvS3ovd0FIZGY4QXlqdCtCUDhBMmVsNEYvOEFWRy90QjBBZjUydEZBQlg5aWY4QXdaN2Y4bkNmdGwvOWthK0hQL3FiNnBRQi9lN1grUlAvQU1GZVArVW9QN2V2L1owbnhlLzlTelVLQVB6bm9vQUtLQUNpZ0FyOUgvaDkvd0FFOHZGSGlUUTd4UEVYaTdUYkh4dnJYaG5UOWU4QytHdkRoYlhJQ2JpMGJVcnIvaExiOFdzZHZadzJ0b0k0cFJwVnhkcEZOSkpLTHljUVIyMTMrdWVFZmhSanZGUE04eXcxSEgwTXR3T1U0YUU4WmlaM25pSllySDBzWlR5cWhoNkhLMVVqVnhtRy93QnJuT2RPTkhDeHF5aktWWjBxYy9IempPS2VVMHFVcFU1VmFsYWJWT0MwankwNVFkYVVwZE9XRS9jVm56VGNWYTEydnJmNEZlRm8vQWZnWFZmQ3R0NHEwN3hIclB3cDBtTzUrSXQ0WWRYbXNkRmE1bDFDNmJTN0dXZXh0VnZHdFVWYkhTNFpMbXlacmUwWjNpaGlRQktQZ2Y0aGVCZmpkcTJqYVBkNjFhZUVieldyM1RMUzMwclVydXhoMTZRYXhMcThHbjNsdHA4dDJIdUxLYVN3c0pBOGFHVXdheFpNWTBCa2FQOEEwZnlQaXFmQzNEdkJQQldaOFJVM1RsbGxESktXWjRqRmV4bzE4ZGs4Y1BsbUpwMDZ1TWRCMXEyS3hWT3VzTFNVUGFWRlFxS3prNHhYd1ZYRTQ3RVR4bGFpcXFweHFlMldIaW5Ma3BWNzFZTktITnl4aEJ4YzI5STNUZlZuMTVOL3dSdjAvd0NOM3hDMHJ3ajQyK04yaWZEM3hCcFYzNFUxNjY4T1cxcTJyYXByZnd4MU9HN20xZS8wN1g1dkkwalJOZHVwSVRhMlVkM3BtcVdlbjNNVWN0NUhkcExGREwrYy93RHdVVy80SnovRC93RFpJdGJyeC84QUM3NDcrSHZHbmczVXZHY2ZoclQvQUlaNjNjbTcrS0hoVU5aM0QzTWVyNnpwK202WG9QaVFXRi9aWE1FbDVaYVZvYlBheVFYRWRsTkdqM0UzOGkrTjNoWmlzMXpMaXpqakIxcW5MaDhEZ3M1cTFhOWxoTVRsbExBVm9TcXV0S05PcEhIVko0V2xocU5Cd2JkU0twdEpWcWNvL1VaTG1xaFN3MkVyeWk2azZzNkZsL0VWWnpwKzRvNnB3aXB5bktYU05udEYzL0pPaXY0K1ByUW9vQUtLQUNpZ0Fvb0FLMlBEM2lIWGZDV3Y2SDRxOEw2dnFQaC94TjRaMWpUUEVIaDNYOUh2SjlQMWZROWQwYTlnMUxTTlgwdS90WGp1YkhVZE4xQzJ0NzJ4dkxlU09lMnVZWXBvbldSRllBSDlubjdDSC9CMmhlZUZQQnVpK0FmK0NnSHdoOFYvRUxXOUZ0NExGZmp2OEVvZkNzWGlMeExDbTJKTHZ4cjhMOVp2dkIvaHVQVjQxSG5hanJ2aEh4SnBsbGZnN2JYd1RaenhQTGUvc2xvbi9CenQvd0FFajlWMDVMMi8rTGZ4TzhOWEx4R1J0STF2NEgvRVNmVVluQTRnZVh3NXBYaURTVEszUUdQVkpJYy9lbUE1b0ErV3YyaGYrRHREOWgzd05vV3BRZnM4ZkN2NDFmSGZ4b2JhZit4NWRlMGpTdmhWOFBCZGVTd3RuMVRYTlgxTFdQR1lqUzRhTnBMYXo4QXY1OEtUS0wrMWtNVHQvRkIrM3gvd1VKL2FSLzRLTi9HZWI0eC90RGVKb2JrNmREZGFYOFAvQUllK0hVdXRQK0h2d3Y4QURkMU9seExvZmc3UkxpNnZKWW52SkliZWJYTmYxTzcxRHhINGh1TGEwYlY5VXVZTlAwdTFzQUQ0ZHIrOHY5ai9BUDRPaXYyQWYyZnYyU3YyWFBnTjR5K0VIN1lXcCtML0FJSmZzNmZCTDRSZUs5UzhNK0FQZ3RlK0c5UThTZkRiNGFlR2ZCdXVYdmg2ODFYOW9IUmRVdTlEdTlVMFc2bjBtNTFMUjlKdjU3Q1MzbHZOTnNMaHBMV0lBK1d2K0N2SC9CdzUreForMzUrd2I4V1AyWGZnNzhNUDJvZkRYai94M3JYd3oxTFNOWStKZmdyNFVhUDRQdG9QQm54SThMK01OVVRVdFE4TGZHdnhsclVNcyttYUpkUVdDMnZoKzhTVytrdDRyaDdXM2VTNmkvbWcvd0NDZS83UTNndjlrNzl0YjltMzlvLzRpNlg0bzFyd1A4SGZpZG8zalR4TnBYZ3F5MHJVZkZkOXBlblIzS1QyK2hXT3U2MzRjMGk2MUJqTXZsUmFocm1tVzdBTnZ1a3dBUUQrNC84QTRpNS8rQ2J2L1JFLzIzdi9BQTIvd0gvK2lVcjhWLzhBZ3VuL0FNRnpQMlRQK0NuSDdLbncyK0Jud0YrSG43UlBoTHhiNE8vYUQ4Ti9GalU5UitMdmhMNGE2RDRkbjhPNlA4T1BpbDRQdWJLd3UvQm54YjhmYW5MclVtcCtOOUtuZ3RyalNMV3hheHQ5UWxrMUdLNGl0cmE3QVA1VWFLQUN2M3MvNElOZjhGU2YyZjhBL2dsMThVdmovd0NOL2ovNFArTVhpL1NmaXI0QThKK0ZmRDF2OEh2RC9ncnhCcUZucUdoZUlyelY3dWJXWXZHdnhCK0gxdGIyVWx0Y0lsdEpZM2VvenZPR1dXM2hqQWxZQS9wcS93Q0l1ZjhBNEp1LzlFVC9BRzN2L0RiL0FBSC9BUG9sSy9oWS9icitPdmhIOXAzOXNuOXBuOW9md0ZwM2lQU1BCZnhuK00vanY0aStGOUw4WDJlbVdIaWl3MFR4UHJsMXFkaGE2L1phTnErdjZUYTZyREJPaVhrR25hM3FscEhNR1dHK3VFQWtJQjhvVVVBRkZBQlJRQVY5Si9CajlwUDR5ZkRmeHY0VDFUUS9HV3FYaTZWYk40ZHM5TDF1OHZkUTBwTkZ2RldCOVA4QXN3dTRKVXQ0bFdKb0VodUloSDVFVVIzV3dhQi9zdUJ1TU9JT0RNL3dHWlpCbUZiQjFIajh2bGljUEdwVldFekNsaDhYVHJRdzJQbzBxbEoxOFBLU2NaUTU0UzVKelVKd2Myeml4K0R3K053OVNuaUthbWxUcWNrN0xucFNsQnJucHlhZkxOYnAyYXVsZE1tMW45cHI0dFdHdmZGS0xTOVlzdExzUGlMZVRKNGowcXowNkgrem5tZzIyOFY1YVJYRFhFMXZlTERFRTh4cDVWWU8yNk00VFo4MzJsNWQyTjNiWDlsY3oybDlaM01ONWFYbHZLOE56YlhkdktzMEZ6Qk5HVmtpbmhtUkpZcFVZT2tpcTZrTUFhN3VOdkVIaWZpL0hZWjV4aklPT1NaaG5GYktvWVdrc09zQzh5ektXUHJRcFRqS1ZWeHBWb3dXR2RXcFVxVWFjSXg5cEo4MG5uZ011d3VDcHk5akIzcjBxRWF6bStmMmlwVWxUanpKcmwxaTI1V1NVbTI3ZEQ2WjBQOEFiTy9hVzBQeHZIOFF2K0ZxK0pOWDhTeDZGRDRhRSt0WGt0M2FuUnJZRVcxcDlqaGUyaGo4aGlaRm1oRVU3dXptZVdVU1NCL0RmR3ZqN3hqOFE5YnYvRUhqUHhEcXV2Nm5xTjlkYWpQSnFGNWNUeFIzTjQvbVRtMXQ1SkdodFVZNFhaQWlEYXFnNXhtbnhCNHA4ZGNVNUpISU0rei9BQldZWUQrMHNSbWxWVkh5VmNSWHJxS1ZIRVNwZXpoVXdlR2xHVlRDWVQyYW9ZZXBVbTZjVW8wbzAxaDhwd0dFcnZFMEtFWVZQWlJwTFZ5akZSKzFGU3UxVWtrbE9kM0tTU3U5WGZqNksvUGowZ29vQUtLQUNpZ0Fvb0FLS0FDaWdBb29BS0tBQ2lnQW9vQUtLQUNpZ0Fvb0FLS0FDaWdELzlrPQotLSAgPC9jZW50ZXI+Jy8+PC9hPgotLSAgXV0KICAKICBCcmFuZExvZ28gPSBbWwogIDxjZW50ZXI+PGEgaHJlZj0iaHR0cHM6Ly93d3cuc3RlYWt1bmRlcndhdGVyLmNvbS93ZXN1Y2tsZXNzL3ZpZXd0b3BpYy5waHA/Zj00NSZ0PTQ1OTciPjxpbWcgd2lkdGg9IjMyMCIgaGVpZ2h0PSI2MCIgc3JjPSdkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQVFNQUFBQThDQVlBQUFCaWl0OEhBQUFCaEdsRFExQkpRME1nY0hKdlptbHNaUUFBS0pGOWtUMUl3MEFjeFY5VGE2VlVST3dnNHBDaE9sa1FGWEhVS2hTaFFxZ1ZXblV3dWZRTG1qUWtLUzZPZ212QndZL0Zxb09MczY0T3JvSWcrQUhpNXVhazZDSWwvaThwdElqMTRMZ2Y3KzQ5N3Q0QlFyM01OS3RySE5CMDIwd2w0bUltdXlvR1h4RkFQd1lRUXJmTUxHTk9rcExvT0w3dTRlUHJYWXhuZFQ3MzUraFZjeFlEZkNMeExETk1tM2lEZUhyVE5qanZFMGRZVVZhSno0bkhUTG9nOFNQWEZZL2ZPQmRjRm5obXhFeW41b2tqeEdLaGpaVTJaa1ZUSTU0aWpxcWFUdmxDeG1PVjh4Wm5yVnhselh2eUY0Wnorc295MTJrT0k0RkZMRUdDQ0FWVmxGQ0dqUml0T2lrV1VyUWY3K0FmY3YwU3VSUnlsY0RJc1lBS05NaXVIL3dQZm5kcjVTY252S1J3SEFpOE9NN0hDQkRjQlJvMXgvaytkcHpHQ2VCL0JxNzBscjlTQjJZK1NhKzF0T2dSMExjTlhGeTNOR1VQdU53QkJwOE0yWlJkeVU5VHlPZUI5elA2cGl3d2NBdUUxcnplbXZzNGZRRFMxRlh5QmpnNEJFWUxsTDNlNGQwOTdiMzllNmJaM3cvN1duSjNrQ3cvNXdBQUFBbHdTRmx6QUFBT3hBQUFEc1FCbFNzT0d3QUFBQWQwU1UxRkIrVUZFUk1RS01zUE9Ka0FBQUFaZEVWWWRFTnZiVzFsYm5RQVEzSmxZWFJsWkNCM2FYUm9JRWRKVFZCWGdRNFhBQUFZZVVsRVFWUjQydTJkZlhSVzFiM25QL3VjODd3blQ1S0hCRUlTOGc0cEJFRk1CTEVXZ1l0ZTZiVzM5YlhTNnEyekxOVHhlbHRuM2VuUXVhdld0dE5wYlpkdGRUcWRWanJlVlZ1N2JvdTJldThNNVlwVUJYRTBGRkI1RHlRQmtwQUU4dks4djV6WFBYK2tJbG9JQ1VJUzZQbXNsWlU4ZWM3ZTU1eTk5Kys3Zi90Mzl0a2J4cEhGamRkSVhGeGNKaVhxZUoxb1djTnlXVjFZaTJKb3ZYM3AzcDF1MGJ1NFRDNlVNLzF6NmJ6clpGUGwvRFVYNmlUelM2OWE0UThGT1JMcjRPMlRPOWU1eGU3aWNvbUl3UXhSUXpVem43eFFKeEVFWDFKQ2ZyWWRlRTI0UmU3aWNnbUpRZXRRQjdrQys0S2RKTCswa09NRHg5M1Nkbkc1RkprM2EwSHRzdVliNVVmS21qNzBjR0hGMGsrN2dVTVhsMHZSTXdEWWZlaXRqclJoTTNWcTVZY2FMalExTDVZWkorbVd0SXZMSkVjYjZjdnR1LzhnYnZpcnUwYlZxODlkZUkyMGJQdFpqNktza0tiUnZQZnR0em9BNWk3NWE1Nyt3ZGZkV01GZk9BOCsrS0Q4em5lK2MzN0R6UHo4YzdhZlpESjVxcDBLSVpCeTVHYmIyZGxKWTJQamlQbCs4NXZmbEE4OTlCQlNTaHpIT2ZYN1RIK2Yvbm1rNzRWNDc1U1daWkZJSkVnbWt5U1RTZmJ0MjhmT25UdlpzR0hEaDdLWGRldld5VldyVm8wcHpmMzMzeit5R0FDODlJZGZpeHR1dTFlKzlOdWZuN3JBcHRzK0pXc1dMS0cyY2dIMVUyb28xcno0cENScjJYY01xSUllcjkzZW5EdEoxc2t3dGFJVWZ2QjExeHBjeU12THUrVHl6cy9QSC9keVNpUVNjc09HRGF4ZnY1NFhYbmhCakZkNWFLTTV5QWtHdWZrLy94YzVoR1JPODQxRS9HWE1EeFd3SUdSVGxRK2VzQ0RuMFpDV1FpNlI0V2hQaXBaK25iMktsNFBaSkNzZmZFaHUvSitQdTk2Qmk4c29DSWZEckZxMWlsV3JWckYxNjFiNXlDT1A4T3FycjE1MCt4bVZHTHpadnAzLzlQZFBjNmpYSUpReitkdXlFSXVxdzJoRlFTeE5SUUQ1RXBDU2NJWEQxRGsyZGRFTUcvNTRtRGNPOTlNOS8xcG0zajRrRHovM0MxY1FYRnhHZ1pRU0lRUkxsaXhodzRZTmZPMXJYNVBmLy83M0w2cjlLS082c1B4U1R1NXJvNnp2QkorYVZjbWlLNnZRU3Z4SVRhRGxJTFdyaCtoTCsrbC9kUy95cEE3U1M2UW9uN3V1cWVITzZRa0dFa0htTHJqZXJXRVhsMUZ5ZXR3akdBenkyR09Qc1diTkdqbmhZakJsd1RMc25FbGp2czFINTA1RDlRQzJCOUd2MFAxYU94N0xRK0gwVWtwbVZMTC9sVGZvZTZzTllhdDRWVDlYMXpVd1R6R1pxZ2l1V3ZHMzdpTkdsNHZhbTE1dWduRDZmWDN2ZTk5ajJiSmw4bUtWMjZqRW9LcW1rZU90QjFnOHV3cVBsc0hCQkF2NnR4eWc4SmpGODQvL0MzOTMyNmY1M3RvdlVsdmc1OUFmM29BQmdBQld2cGRiYWl1eFR3eFFNWE11aFEzelY3ak4xdVZpOTZhWG95Z1VGQlR3d0FNUFhIQ0JmRGYvVVlsQmlXM2lkUGRTN0JHZ1pOQXh3SURVMjhkNWZkUExmT2RmL3hmciszZnlQemIramg4LzhiK1pubGZJM3UxYlFkR3hwY1NmaWVFVGdtbVZzOUJGNkNXMzJicU10aUdQMWJoUGYzUTNVdHJUajd1VXZKcmJiNytkNWN1WHk5SG1ONWI3UEdjQThZcUZINVhaSTBlSStIM0VrZ244V1I5cUFKQWhERjNITmgxOFFvMnEwaXB5QktSVFdYSW5ZZ1FpSVdRMnkwQTJRZFpPSTFTTG9rZ2VDTU50NVM0WEhGM1h6MHN3Smx2dlB4cnV1dXN1WG43NTVYT1doNklvWXhMVGN6OU5jQVRwa3duS1F5SDZZME9JUGhVMTM4SnZLdmpLWWI1V3dqL0dsaGJ0Yjk5SDFaUVNWbHk5bEcxNzN1YTJPNWJSRjA4UWpTZUlKWWF3aENTL01BTEM1N1pjbDFFYmlHVlpvenJXNy9kUEdndFBwVkw4K3RlL1JrcUpydXZvdWs0NEhLYXlzcEtLaWdvYUd4cy9WUDdYWG52dGlOK3ZXYk5HckZrejlyY0l6aWtHZTNac0U1Kzk2ZTlsZHFpTmxLWVNqT2VRT1lHaFNLWmVQNHRqLy9vS3l4dm04WmtyYndaSDVmOTI3cUJzNVVLNjgyTEVrd2tHQjlNY2oxa29UakdwYnZEcEFiSnVPM2U1d083elpHUDE2dFZuRmFkRml4WU5yVjY5dXVpKysrNDdyN3diR3h0WnRHalJVRXRMUytSQ1h2T281aGtvZGdXcHpGRXlhUU1qQTE3aHdTb1F4QXM4Vk4xM0V6MS83S0RqZUlLVWxhVGlVMytGTFBIUk94QWozajlJVCtjeGpzYkx5UytzcGZXdExqU2owRzNoTHFQR2NaeEwwcU1aaVphV2xraExTd3VIRHgrV2p6NzY2SGtKWkVORFExRkxTd3ZqTGdiN2ovaVpQWDB4UjdzVDVJVlVwdVNwK0ZEeG95SkNLak9XZndUVGt1UjBrMFE2VGpTVklKR0d6cjQ4dXZwbk1xRGZUR2RQTCszNzkrTEQ2N1p3bHd2dUdkeDk5OTN5VEdsSE1zeG5ubmxHVE9RMWYvZTczeFUzM25palhMNTgrWmpGWnFScDBpdFdySkNscGFWanV0NWYvZXBYWWxSaTBMZHZGMU8xRzluY0YrSmdwK1NxSzJ5cXlreUNmZ1cvTDRSUUZTeFRFbzFMK2dhSzZPNFRkUGJhUkFjQ3BCSmU0b013TkpEQjd5M0drVzdNd09YQ2V3YS8vT1V2eDVUdi92MzdlZWFaWnliOC92YnMyY05veGVCMGNRdUh3MmM5N3M0NzcyVDE2dFZqMXJEUnZadVFUTkRiM292bW4wMHlXY2loTnRBMEUwMG9lRHdxQ0pEU3diYkEwQVc1TE9nWlNTNEYyWXlCSlFWRjRRaU9BVmk2MjhKZEpueVlNRmxpRWUzdDdlZVZMaEFJakZvNEx1Z3d3VEZQb05vbXVhaENjZ0FVRFR3ZWlhSkloSkJvaWtCQjRGaGc1QVM2QWJadG9TZ0tBWThYcVRuRUIvdUlEM1ZRV09SNkJpNFgzbWpIMnZnbnkrUEZxcXFxVWQvYjZkY2NqOGN2K1AyTlNneFVKNTlNMGtMUlFCR0FBNHF0b2lGUkZJRWlRVXBRSkdnS29EbllVbUFiRXNzMHlUazdNZEplTkdzK2tjQjBRZzJPM052NnRQdlNrc3NGRTRPeE5QN0o5SVJpM3J4NTUzVnZpVVRpZ2wvTHFNVEE0NXNQZGltTzQwSDFnT29CVFJXb0tDZ09JQjBFWUZrZzVMQ1hJQkZJYkd6YlJuTlVIRVVuTDYrSTRyeDVSSXF1WVZwQmsrd2FlSlpESGU0aXFTN2pPMHlZTEY3QkY3LzRSWG5ERFRlY1Y5cUxJUVlqVGtldXJseTQ0Nm9yN3BRekNtNGlUOVFRbEJwZVc2STVnQ2tSenJCTG9Eb0tpcTNna1FMTmtYaHQ4RG9xbXVPZ29xT2hrdWVaUm5YRlhBckNncEx5S0k4OThRLzgxNGYvaVk4ME5qL3FObm1YOFk0WlREU1BQUEtJL1BhM3YzMWVhUzNMNGplLytjMEZWN1N6ZWdZMU01b2ZyUzcrRDAwbG9ac3hUQzlaVlpMUkhTekhScFVheUdHdlFDZ1NSUUdKeE5aQUV3cW1MYkZ0Q3h5Qm9uZ0pldk1wQ2RWUzVJV3MxY3FuVjlkaGFNZm9hdk54M2R4L1hDdHkvN3oyUVB0THJvZmdNcWxkK3JHd2V2VnFhZHZESzR5cnFrcEpTY21wbjVVclZ4S0puUDk4b1FzOXYrQ2NZbEJmdm5KdFZjSEhTZlJXRUNwL205dFdYa24zY1lXdFczclJqUUljR1J4MnVSUVFRcUlJVUtXQ0tSMUFvaWtLbWtkRms0SzhrbndLRmNpbG9MVE9RM0Yxa05kZTI4bU9iWjFNODgvbW1sbTNjcURkZlgvSk5lckx3ek1JaFVLc1czZng5Z3A2L2ZYWEwwcStaeHdtTFA3SWwrVE15TzNFVDBnUzZSN3NZQ2NscytOODRqNUp6ZnlEQklOUjhqVUlLZUFUSmw0c3ZGTEJJOEVyYklLS1E5Q3JFTTV6S0NtVjVCWDBzT0lHeUNrYldQTEpmQWF6M2ZTMHBkRk9sREl6ZURWR1BFUk5aZE1hMTJSY01iZ2N4T0JpeGlRNk9qcFl1M2F0R0RjeGFHNHU0cC8rMnp5dXVta1BiL1N0NHFXWGYwSGFPRVRLN2lCY0JKZ0dxc213OFNzMmZnWDhFalFIdklEZkt5bktoMGhRaFp5SlllL21ZN2ZBMzl4YlF2T2NDbnBlMGZHM043TmcxaWRvUFhtUWQ3bzNjcVRUM1hiTkZZUExaNWh3c2ZqUmozNTAwZkwrTXpHb25kRzBKaDZieXI5djZ1SVR0NjdrOW52cU1lSTJHelpzSUszSDhQZ3MwckYrRklOaFFiQWttbTNqRlJCUUlhQUlmSTZLRTdjd1l6RktRZ1l6Y3ZWMHZRaVJZMDM4L3I5TDl2emJYTHFPRkxQcjZCWmFEajlKUmg2c2M2djU4dVp5RFFTT0owOC8vVFNQUDM3eEZoYitzNWlCRkxCM2R6dUJkQS9wL1huY0VIbWN2RVZiR05xM0Y3M1Z6MVJaZ0pacHBYQmFIdk9iNTlCN01vNmFDeEZXQWdROEVBeElmSnFGMyt0SHFJVmtMWjBoL1RyZStHT09iRmFRaWdVWjdNOFExZmN5SUxlUzhleWxvMnQ0andXWHYxelA0SHhtelAwbHNYbnpadTY5OTk2TFdrQi9KZ1pIT25ldU84TE9kVHF0c24vZ1FhWjUvcHI4b2h1b0Q2ems0RzlWdkY2SE81WXR3S2NKUExySjFNSVNMQVNtZERCc1FjWlNpZWtxVmdaTUczVERpNUdCWkVZUWkyYkpKTklVaElOTUtRZ1RpNnY0Uk5DdGFWY016aW9FcmtEQWM4ODl4eDEzM0RGeFM2Vm41Zkc2dHY3LzArNnQwTWlldUI1VkNEUVBlTHpnOVNsNGZRS1BKbEMxNFNtSndwSGdLTmlXd0hJa2x1bWdaMEhQT2lTemdLNlE3dzlUV2lPSlpYdHBiK3VoZk5ySEtBdEhNR1YwUjl2eDdjMnV5Ymd4QXpkbThINis5YTF2OGZEREQ0K0xJcDVWRERxNjN1cVlYVElYd3hyRWI0R2lDS1FEdWlrdzlPSEhpYW9RcUpxRFJ3VVE0RWdjVytBNEVzY0IyNVpvUXFNZ0VpZHNGU0FrOUtZNk9SSnRJYVdudUg3YXpaUld6NkkvL1daVEc5dGRpM0ZqQmk3QW9VT0hlUGJaWi9ucVY3ODZybTdSMmVjWlZEUS9XaUJxOE9icXlLYXlhSGxCTkVVZ0pXQUxwRkNHNXhnNHd4T09WRldncWdLaG5LN293eDhjNGNmTVFTeGgwS01QYjd1bXFURm16dkJUWHBEUHFvV2ZJMmYyeUpZajdzU2pTNDFiYnJsRlZsVlZuVE93TlpLNy81Y1dMN0FzaTJ3MlN5S1JJSnZObnRwbjhlMjMzK2FkZDk1aDgrYk5FMUlZWnhXRFNLQmg3VFdWZHhKcmJTQmhaekFOaWRlbklod0hJVUFLQncyQlJ3R3ZsMkVoRU1NdkxFa3BzRzJKWllLcFF6cm5JNTNPa3NsR2tWaG9lSEQ4UHVKbWprbzluNnZ5bHhHOFhrTml5dTFIWG5VRllSS3haTWtTV1Y5ZlQzMTlQVFUxTmRUWDExTlhWMGRSVWRHcFk3WnYzODdqano4K1lqNGZYSXpqZEFFWVNRaWkwZWdsVjJhcFZHcFVtOFZPTnJRLzl3Z1cxTTRwdXFQOWltbWZRZWd6VUVvZE1pY1ZURlBIVWhVODZyQkhvRXJ4cHpjWUpiYWhZQ3ZEbFd0YllGa1N5eFNZeHZEbnJKM0dOTUFCaEtJamxEUzZyYlA3MkZHS2ZTVlVlYUYyeWh6dXVmNGYwSFVoMytsNXhSV0VDV0xqeG8yeXJxNk91cm82RkdWVUsrbVBhbVhpRDRyQnVUeUJkOFdpdjcvZnJaU0pFb1BaMDFhMno1dDZOMFJua0UyRHBSb1U1bnRKRENXeHBROFZnWEFrUW9CdERROGI3RDk1QkNDeExZRmpLOWcyMk5adzNNQzJCQ0FScUFnaGNOUTRHYkdYLzlkMUFNdmZ5WnlpUlN5c3ErREtLWjlnYVcwYjcvUzg0dGJNQk5IUTBFQk5UYzJZMG94bXg5K1JWdVlaYVZoeDRzUUp0MUxHaWZkSi84ZHFWOHNGNVovRlRrNWpNR2t5YUE1dzdPUSsyaEwvQXVGT0hKbEdRYUFLNWRSKzg1WXBzQTB3RFltaER3OE5IQXNjeThaQllpRncxR0dWVjRXR29ua3c1Q0IyNE1ET2ZTZC9KdmIyL2p1SCtvNlJURVBBOFhCMXcwSzNWaWFRUFh2MmpEbk5nZ1VMem5uTS9Qbnp6K3Q2dXJ1NzNVb1piekdZWFhHdC9PanN6NkxGNXBCT2V1bEliZU90MU5mWnAzemhDd2xqTDZvL2dlSGtjT1R3eTBtSytpZjFsbUE3NysxK0l5VTR5T0ZWVUtTRDVvQ2lLQ2lxRDZFcW1NUkpjNVMyNDl1YnEyY1dySWxtMjRtYUF4em9nUU45a0RETFdGeDNpenNIZFFMRjRId2U1MzNwUzE4NmE2TG01dVpIUi92ZS9nZlAzZEhoemtjYmR6R1lPZjA2QXFLZVRBNlM5aUNEdVowa25GM1kvbzdOMlBrb0lvUWl2TVBEQVFHS2FxTnFFbFZqK0xjcVVGVUZWUVhOQTRycW9HZ0NxVXFFWWlFVUcwdE5rYkFQbzlNRndOSEQ4WFcySjFiWEhuK1ZmZEY5N0dxSHZhMHFtVnpBclprSll2ZnUzZWNWMmIvbm5udk8rdDE5OTkyM2RxekRnM2RGd1JXRGNSYURtV1hYeWVwcGk4aWx2UmdXcFBVVXZyd2dRdkZ3cEMzYUVmSVY0L1dGOFBwOXZQdTBXQkVxSGszZzhVcDhmb0hta3dndktCNUFDQkFDQnpBVkJ3dURuRFpBVnVzbWE1MThYMlB6aU1MMnVUWFhVMVhjaUtOQ1dwd2dZNStnZW1iWVhmUmtBbGkvZnIwd2pMRnZnZGZVMUVSTFM0djg1Q2MvZWFwclg3WnNtZnpwVDM4cTc3Ly8vdmYxK0NONUhxZnZFVGc0T01qdmYvOTdONWc4VG1nQXhaNTZTc0l6R1lqcEhEblJqaS9zcFhicWxReTBid0VnbEZkTEtCQUJ4WXVaZ3VFTnJ3VDhhVzRCZ09Lb3FMYUREVGdPR0VLaUN4MVRNYkZWRXdVRjFkTHcrRUlnUGFjdVlIcCtJNUZBQTdZNUxFM1JXQitPMEFIVmZZdHhndmpkNzM3SFhYZmROZVowQ3hjdTVJVVhYbUJvYUVocW12YStvT0hwSGNEWlBJOFB6amZZdW5Xcld4bmo2Um5NTEYrNG83VHdTbkt4QWd6TFlTalhRVHpYalJBU24zZTRNcjMrR1ppS2gwQ0JwR0E2QklzZHRDQW8ydkFxcUlwSElqMFdRaFU0aXNEeERQOElMeWgraWVLVEtINFRqOCtEMTF1QW9yd1hmVTVrRXd3bGN5UXNNTHhINlUxc1E2anB1cU9IbzY1L09FRTgvL3p6SHlwOUpCSVo4OU9ETTRuRXhvMGIzY29ZVDg5QW9qUmxNaXJKcEFwU0l6L3NSU21Jc3Z2SWRqSnkyQjZkb0VKT1Nyd20rRlh3QnhRSURFODl0aXd3YlFkSGdLMWFPS2hZanNEUlRHeHA0RGdHVXN0aTJ3SmJrY09McUtiZnEvUzMybjhoY3JKSDVvVWkyR2FLWFYydVd6Z1poZ29QUC95d2JHeHNITmVaZ2FkN0J1M3Q3ZnpzWno5ejI4SjRpa0hiOFRkRkcyL1NaMjJSTmNIUFVGdTFtS2gxZ05hVEIyanJlVmtBSkozRGhEemcyQUt2blk4cUJUNFZWS0dBQjZRWGJIdDQzd1RIc2JBc0EwT21NWjBVbHAzRlZ1TTR3by90WkhEc0xJN3kva2txQnpvMnU1VSt5WGp1dWVlWU8zZnVtSTE0clA4N20yZnc0eC8vMksyRWlZZ1pBTHh6NURtUm1YSDAwZU5NWDZ2TEhHMDk3NzBuTUpUZFNVRUVMSkVqWTBjSWFHR2s1a2NiamhiaVNJbXRHTmlxaVc1bE1kVXNocFBHZE5JNDBzQlNrdUJZMkZZSzIweGd5NVJiOHBPY2IzempHNksrdmw3ZWZmZmRZM2J2eC9LL003Rmh3d1orK01NZnVoM0VSSWtCd09HdUhWOEJ2dkxCZzZLSmx5aUlTTUpCRFovWGc5UUVsbWJnQ0ErZzRBZ0x4ekd3SFIzTE5qR3RMSmFkd3JaMHBHT0JNTEFWc0VsaWtRQmg3blNMZnZKenp6MzNpTHE2T3JsNDhlSlJlUU5qOVNMT2xNZVdMVnU0K2VhYnoxc0lUbjhhY2E1akxuZkdXa2VqbW56ZWVmUU4wWG5zVmFUU2krMkxrZ3ZFMFFOeHpFQWNNNURBOGlVeGZVbE1ieHBMUytKNGt6aWVOTGFXeHRLeVNDMkhWRk5ZU2hwSEZYaDhrU2JYMUM0TnZ2emxMNTl4UDhBUEt3Um55bVBqeG8wc1hicjBRM2tFSDl5R2JMU2V6T1hJV085elZHSXdzN2FvMXBGRzFQRTRPS3FCcGFRd1JSeGRTMkY0TWxoYUJ0dVR3OUZ5NERPUW1vbWpHamhhRGxzenNEVUhMU0R3QmJ5by9ueUM0ZW5NcUY1USsyNysxMTd6TVhmRzRTVGw5ZGRmRi9YMTllTHBwNS8rMEwzcW1Scm51L2s5OGNRVGZQempIM2VIQmhmUUt4Z3JaeFNENjVhdWtaLzV1eC9JSzV0dWxRQ0hPNklkUlZOcWkwS2hFb1RxeCsvM2t6T0dpQ2VPa0V3ZUkyZkgwZTBVT1NkRnhreGdDaDBVaFVpa2pFalJOTUtSV2lKVHl2RDVBZ1NEeFpTV3p3VjFhdnVzV1V2bFQzN3lvbnppSjF0NDVGdnJYVUdZeE54Nzc3M2k4NS8vUEYxZFhSZlU3ZDYyYlJ1MzMzNDdEejMwa0NzRUV6UThPR1BNQUtCcDRlZmsvT2IvaUswVU05c3pCNXNwTXA1b3AzYldFb0w1VTBra2JYUWpRUzVuNHZPR0NCZUVPSDc4TUtvd3lRc1hrOHNZRkUyWmlxN3JoQ05UOGZzanBOTW5pY2NHRUtyR0RTdVdNS2VoaE1PdGN4Qm9sRlZleThGRGFlYk11WW5IZnZDeUhPemZSM3Y3VzZ4Zi84OXU0NWhrUFBYVVUrS3BwNTdpZ1FjZWtMZmVlaXZOemMwVUZCU011ZUVORFEyeGFkTW1Ybnp4Ulg3Kzg1K0w4VFNJOFZoSVphSmpFaVBGWkVZc0w0RDZocHZrZFVzK2grS3R3M0NHZTM2QlRUYWJSdGQxVk5WRHdKOUhUazlqMnpyK1lBaWZkd29TbTc3dVhSdzUvREtKeEFDejV5d2htUTR5ZDM0ejdSMXRWRmJNb3JpNG1sQ2VSVGdZSmg2TFVUb3RSRTJ0QjYrU3dlZFZFTUpQVDIrS2tpbDVDR0docVJxZFBTZDQ4c25INkRqOGg3ck9ZKzdLeVpPWkcyKzhVVFkwTkZCZFhVMU5UUTFGUlVYNGZENzhmajhBc1ZpTVdDekd3TUFBQnc0YzRPREJnMnpjdU5FVitrbUlOcU82YVUzamxaOG1VcmFNZUNLRGtUaE9OblVTMi9FenZheUtnZ0tOYUt5SHZ0NjlESjVvd3pSdGFtY3RKbEpWVGl6ZVR5TFpUeklWeCsvM2tzc09ZaG81a3FrWWdVQUJzVVNja21LZHF1a0twZFBoV0ZlWVhXKzNrelZxS0MxUnFLbjA0L1ZDSUpqSG52MVJpb3FLMEUyTDNqNFRTeFFqOGF5dnJ5bjhTdHVSMkdhM3FpWW5telp0RXBzMmJYSUw0bklRQTRCTU5rRWlFVVhQbWVpWk5JYVpvM2pxVkVwTHkwZ25VOFRpZ2tTc204R0JRK1NGeXFnb3IwSFZBamkyaVpITG9RZy8wOHNLaUVWM3NIdkh2NG5rNE1JZHZrQlZVeUR2Q2lyTFF5aXlDbW1EWXhrTURRM1MycTdnOVZYajZ3T1BDb054T055ZElYczRoU0JCZkhBUFBaMXYwSFhNWFRIWnhXWGN4S0RyNk01MXdieTZKNHVubEtONnBtTkpTQ2JTVkpSTFZPbWdxU0VFRHFvYXdyUURsSlpWQWFEbmJKS3BMSWdZd3Q3TDFwZmVQT1g2dFI3WTNnemJLYS9xbFdYbGZ2S0M5eEZMd2NuK0lRYjZ1OGptNG9TQ1B0S3BhUWcwWXNrWTNjY09FUjFxeFRFN09OSFRRa2ZyVnRlVmRIRVpiOCtnZGU5NmdYMTBSMTY0b2ltWHRURXRoM0RvR2hSaDRQWFBSdlhrNFE5NENIaFM5UGZ2SWIrM2xMejhCZ3dqanBtTGNhVDl6VE1hN3ZGajI4VHp4N1l4OERmVDVZeHBEdDFIdDlIZXZvZGdmaVYrejZlSVJ1ZWdxSDdpc1ZaYTkvK1dmYnQrNFFxQWk4dEVpc0hwdmZtN1NEc3BnNkZxdEx3d1JqWktMdHVEYWJidTNQWG05dVprZkw4c3IyZ2tuUnhpOE1UQkw1enJKSzl0dU9jRFJ2NG1tb2pKMHZKclVJU0hnZjUzMkxmck9WY0lYRndta0JFTnNIN1cxZXZEaFdWM1NHemlROGZyT3RyY3lMNkx5K1hLL3dlOE0wbm1nQUo3ZEFBQUFBQkpSVTVFcmtKZ2dnPT0KICA8L2NlbnRlcj4nLz48L2E+CiAgXV0KCgplbmQKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQotLSAgICAgICBDcmVhdGUKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpmdW5jdGlvbiBDcmVhdGUoKQppZiAoTG9nb19PbikgdGhlbgogIEluTG9nbyAgICAgICAgICAgICA9IHNlbGY6QWRkSW5wdXQoQnJhbmRMb2dvLCAiTGFiZWwiLCB7CiAgTElOS0lEX0RhdGFUeXBlICAgID0gIlRleHQiLAogIElOUElEX0lucHV0Q29udHJvbCA9ICJMYWJlbENvbnRyb2wiLAogIExCTENfTXVsdGlMaW5lICAgICA9IHRydWUsCiAgSUNfTm9MYWJlbCAgICAgICAgID0gdHJ1ZSwKICBJQ19Ob1Jlc2V0ICAgICAgICAgPSB0cnVlLAogIElOUF9FeHRlcm5hbCAgICAgICA9IGZhbHNlLAogIElOUF9QYXNzaXZlICAgICAgICA9IHRydWUsCiAgSUNfQ29udHJvbFBhZ2UgICAgID0gLTEsCiAgfSkKZW5kCgoKICAtLSBBdWRpbyBGaWxlIGNob29zaW5nCiAgSW5GaWxlID0gc2VsZjpBZGRJbnB1dCgiV2F2ZSBGaWxlIiwgIldhdmVGaWxlIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIlRleHQiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gICJGaWxlQ29udHJvbCIsCiAgICBGQ19DbGlwQnJvd3NlID0gZmFsc2UsICAgICAgICAtLSB0cnVlCiAgICBJTlBfRG9Ob3RpZnlDaGFuZ2VkICA9IHRydWUsCiAgICBJTlBfRXh0ZXJuYWwgPSBmYWxzZSwKICAgIEZDU19GaWx0ZXJTdHJpbmcgPSAiV0FWLUZpbGVzICgqLndhdil8Ki53YXZ8IgogIH0pCgogIFJlbG9hZCA9IHNlbGY6QWRkSW5wdXQoIlJlbG9hZCBTYW1wbGUiLCAiUmVsb2FkU2FtcGxlIiwgewogICAgSU5QSURfSW5wdXRDb250cm9sID0gICJCdXR0b25Db250cm9sIiwKICAgIElOUF9Eb05vdGlmeUNoYW5nZWQgID0gdHJ1ZSwKICAgIElOUF9FeHRlcm5hbCA9IGZhbHNlLAogICAgQlROQ1NfRXhlY3V0ZSA9ICJ0b29sLlNjcmlwdFJlbG9hZFtmdS5USU1FX1VOREVGSU5FRF0gPSAxIiwKICB9KQoKICBJbkNoYW5uZWxzID0gc2VsZjpBZGRJbnB1dCgiU2VsZWN0IENoYW5uZWwocykiLCAiU2VsZWN0Q2hhbm5lbHMiLCB7CiAgICB7IE1CVE5DX0FkZEJ1dHRvbiA9ICJMZWZ0IiwgTUJUTkNJRF9BZGRJRCA9ICJMZWZ0IiwgfSwKICAgIHsgTUJUTkNfQWRkQnV0dG9uID0gIlJpZ2h0IiwgTUJUTkNJRF9BZGRJRCA9ICJSaWdodCIsIH0sCiAgICB7IE1CVE5DX0FkZEJ1dHRvbiA9ICJCb3RoIiwgTUJUTkNJRF9BZGRJRCA9ICJCb3RoIiwgfSwKICAgIElOUElEX0RlZmF1bHRJRCA9ICJCb3RoIiwKICAgIExJTktJRF9EYXRhVHlwZSA9ICJGdUlEIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJNdWx0aUJ1dHRvbklEQ29udHJvbCIsCiAgICBNQlROQ19TdHJldGNoVG9GaXQgPSB0cnVlLAogICAgTUJUTkNfRm9yY2VCdXR0b25zID0gdHJ1ZSwKICAgIElDX1Zpc2libGUgPSBmYWxzZQogIH0pCgogIEluUHJveHkgPSBzZWxmOkFkZElucHV0KCJQcm94eSAoZm9yIHNhbXBsaW5nKSIsICJQcm94eSIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIlNsaWRlckNvbnRyb2wiLAogICAgSU5QX01pblNjYWxlID0gMSwKICAgIElOUF9NaW5BbGxvd2VkID0gMSwKICAgIElOUF9NYXhTY2FsZSA9IDEwMCwKICAgIElOUF9EZWZhdWx0ID0gMjUsCiAgICBJTlBfSW50ZWdlciA9IHRydWUsCiAgfSkKCiAgSW5BbXBsaXR1ZGVTY2FsZSA9IHNlbGY6QWRkSW5wdXQoIkFtcGxpdHVkZSBTY2FsZSIsICJBbXBsaXR1ZGVTY2FsZSIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIlNjcmV3Q29udHJvbCIsCiAgICBJTlBfRGVmYXVsdCA9IDEsCiAgICBJTlBfTWF4U2NhbGUgPSA1LAogIH0pCgogIEluU2FtcGxlU3RhcnRGcmFtZSA9IHNlbGY6QWRkSW5wdXQoIlNhbXBsZSBTdGFydCBGcmFtZSAoVGltZSBPZmZzZXQpIiwgIlNhbXBsZVN0YXJ0RnJhbWUiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTY3Jld0NvbnRyb2wiLAogICAgSU5QX0RlZmF1bHQgPSAwLAogICAgSU5QX01heFNjYWxlID0gNTAsCiAgICBJTlBfTWluU2NhbGUgPSAtNTAsCiAgICBJTlBfTWF4QWxsb3dlZCA9IDUwLAogICAgSU5QX01pbkFsbG93ZWQgPSAtNTAsCiAgICBJTlBfSW50ZWdlciA9IHRydWUsCiAgfSkKCiAgSW5ab29tID0gc2VsZjpBZGRJbnB1dCgiWm9vbSIsICJab29tIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiU2xpZGVyQ29udHJvbCIsCiAgICBJTlBfTWluU2NhbGUgPSAxLAogICAgSU5QX01pbkFsbG93ZWQgPSAxLAogICAgSU5QX01heFNjYWxlID0gMTAwLAogICAgSU5QX0RlZmF1bHQgPSAyLAogICAgSU5QX0ludGVnZXIgPSB0cnVlLAogIH0pCgogIEluUmVzb2x1dGlvbiA9IHNlbGY6QWRkSW5wdXQoIlJlc29sdXRpb24iLCAiUmVzb2x1dGlvbiIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIlNsaWRlckNvbnRyb2wiLAogICAgSU5QX01pblNjYWxlID0gMSwKICAgIElOUF9NaW5BbGxvd2VkID0gMSwKICAgIElOUF9NYXhTY2FsZSA9IDEwLAogICAgSU5QX0RlZmF1bHQgPSAyLAogICAgSU5QX0ludGVnZXIgPSB0cnVlLAogIH0pCgogIEluRW52ZWxvcGVTZWwgPSBzZWxmOkFkZElucHV0KCJFbnZlbG9wZSIsICJFbnZlbG9wZVNlbCIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIkNvbWJvQ29udHJvbCIsCiAgICBJTlBfRGVmYXVsdCA9IDAuMCwKICAgIElOUF9JbnRlZ2VyID0gdHJ1ZSwKICAgIElDRF9XaWR0aCA9IDEsCiAgICB7IENDU19BZGRTdHJpbmcgPSAiTm9ybWFsIiwgfSwKICAgIHsgQ0NTX0FkZFN0cmluZyA9ICJCb2xkIiwgfSwKICAgIHsgQ0NTX0FkZFN0cmluZyA9ICJTcGVjaWFsIiwgfSwKICAgIHsgQ0NTX0FkZFN0cmluZyA9ICJQb3NpdGl2ZSIsIH0sCiAgICBDQ19MYWJlbFBvc2l0aW9uID0gIkhvcml6b250YWwiLAogIH0pCgoKSW5GaWx0ZXJzT0ZGID0gc2VsZjpBZGRJbnB1dCgiIiwgIkZpbHRlcnNPRkYiLCB7CiAgICB7IE1CVE5DX0FkZEJ1dHRvbiA9ICJGaWx0ZXIgT2ZmIiwgTUJUTkNJRF9BZGRJRCA9ICJOb0ZpbHRlciIsIH0sCiAgICBJTlBJRF9EZWZhdWx0SUQgPSAiTm9GaWx0ZXIiLAogICAgTElOS0lEX0RhdGFUeXBlID0gIkZ1SUQiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIk11bHRpQnV0dG9uSURDb250cm9sIiwKICAgIElDRF9XaWR0aCA9IDEuMCwKICAgIE1CVE5DX1N0cmV0Y2hUb0ZpdCA9IHRydWUsCiAgICBNQlROQ19Gb3JjZUJ1dHRvbnMgPSB0cnVlLAogICAgSU5QX0RvTm90aWZ5Q2hhbmdlZCAgPSB0cnVlLAogICAgSUNfVmlzaWJsZSA9IHRydWUsCiAgICBJTlBfRXh0ZXJuYWwgPSBmYWxzZSwKICAgIENDX0xhYmVsUG9zaXRpb24gPSAiVmVydGljYWwiLAogIH0pCgpJbkZpbHRlcnMgPSBzZWxmOkFkZElucHV0KCIiLCAiRmlsdGVycyIsIHsKICAgIHsgTUJUTkNfQWRkQnV0dG9uID0gIjIwLTMwMEh6IiwgTUJUTkNJRF9BZGRJRCA9ICJMUCIsIH0sCiAgICB7IE1CVE5DX0FkZEJ1dHRvbiA9ICIzMDAtM2tIeiIsIE1CVE5DSURfQWRkSUQgPSAiQlAiLCB9LAogICAgeyBNQlROQ19BZGRCdXR0b24gPSAiMy0yMGtIeiIsIE1CVE5DSURfQWRkSUQgPSAiSFAiLCB9LAogICAgSU5QSURfRGVmYXVsdElEID0gIk5vRmlsdGVyIiwKICAgIExJTktJRF9EYXRhVHlwZSA9ICJGdUlEIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJNdWx0aUJ1dHRvbklEQ29udHJvbCIsCiAgICBJQ0RfV2lkdGggPSAxLjAsCiAgICBNQlROQ19TdHJldGNoVG9GaXQgPSB0cnVlLAogICAgTUJUTkNfRm9yY2VCdXR0b25zID0gdHJ1ZSwKICAgIElOUF9Eb05vdGlmeUNoYW5nZWQgID0gdHJ1ZSwKICAgIElDX1Zpc2libGUgPSB0cnVlLAogICAgSU5QX0V4dGVybmFsID0gZmFsc2UsCiAgfSkKCkluTm9pc2VUaHJlc2hvbGQgPSBzZWxmOkFkZElucHV0KCJOb2lzZSBUaHJlc2hvbGQiLCAiTm9pc2VUaHJlc2hvbGQiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTY3Jld0NvbnRyb2wiLAogICAgSU5QX0RlZmF1bHQgPSAwLAogICAgSU5QX01heFNjYWxlID0gMSwKICAgIElOUF9NaW5TY2FsZSA9IDAsCiAgICBJTlBfTWluQWxsb3dlZCA9IDAuMCwKICAgIElOUF9NYXhBbGxvd2VkID0gMTAwMDAsCiAgICAtLUlDX1Zpc2libGUgICAgICAgICA9IGZhbHNlLAogIH0pCgoKICBJbkNyb3NzaGFpciA9IHNlbGY6QWRkSW5wdXQoIkNyb3NzaGFpciIsICJDcm9zc2hhaXIiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJDaGVja2JveENvbnRyb2wiLAogICAgSU5QX0RlZmF1bHQgPSAwLAogIH0pCgoKICAtLSBTdGVhZHkgV2F2ZQogIEluU3RlYWR5V2F2ZSA9IHNlbGY6QWRkSW5wdXQoIlN0ZWFkeSBXYXZlIiwgIlN0ZWFkeVdhdmUiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJDaGVja2JveENvbnRyb2wiLAogICAgSU5QX0RvTm90aWZ5Q2hhbmdlZCAgPSB0cnVlLAogICAgTUJUTkNfU3RyZXRjaFRvRml0ID0gdHJ1ZSwKICAgIElOUF9EZWZhdWx0ID0gMCwKICB9KQoKCiAgSW5GcmFtZUNvdW50ID0gc2VsZjpBZGRJbnB1dCgiRnJhbWVjb3VudCIsICJGcmFtZWNvdW50IiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiU2xpZGVyQ29udHJvbCIsCiAgICBJTlBfTWluU2NhbGUgPSAxLAogICAgSU5QX01pbkFsbG93ZWQgPSAxLAogICAgSU5QX01heFNjYWxlID0gMTAsCiAgICBJTlBfRGVmYXVsdCA9IDEsCiAgICBJTlBfSW50ZWdlciA9IHRydWUsCiAgICBJQ19WaXNpYmxlICA9IGZhbHNlLAogIH0pCgogIC0tRWxvbmdhdGlvbiBXRgogIEluRWxvbmdhdGlvbldGT24gPSBzZWxmOkFkZElucHV0KCJFbG9uZ2F0aW9uIE9uIiwgIkVsb25nYXRpb25XRk9uIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiQ2hlY2tib3hDb250cm9sIiwKICAgIElOUF9Eb05vdGlmeUNoYW5nZWQgPSB0cnVlLAogICAgSU5QX0RlZmF1bHQgICAgICAgICA9IDAsCiAgICBJQ19WaXNpYmxlICAgICAgICAgID0gdHJ1ZSwKICAgIElOUF9FeHRlcm5hbCAgICAgICAgPSBmYWxzZSwKICB9KQoKICBJbkxhYmVsRWxvbmdhdGlvbldGID0gc2VsZjpBZGRJbnB1dCgiRWxvbmdhdGlvbiIsICJMYWJlbEVsb25nYXRpb25XRiIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJUZXh0IiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJMYWJlbENvbnRyb2wiLAogICAgSU5QX0V4dGVybmFsID0gZmFsc2UsCiAgICBJTlBfUGFzc2l2ZSA9IHRydWUsCiAgfSkKCiAgSW5FbG9uZ2F0aW9uV0ZPcGVyYXRpb24gPSBzZWxmOkFkZElucHV0KCJPcGVyYXRvciIsICJFbG9uZ2F0aW9uV0ZPcGVyYXRvciIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIkNvbWJvQ29udHJvbCIsCiAgICBJTlBfRGVmYXVsdCA9IDAuMCwKICAgIElOUF9JbnRlZ2VyID0gdHJ1ZSwKICAgIElDRF9XaWR0aCA9IDEsCiAgICB7IENDU19BZGRTdHJpbmcgPSAiTWF4IiwgfSwKICAgIHsgQ0NTX0FkZFN0cmluZyA9ICJBdmVyYWdlIiwgfSwKICAgIHsgQ0NTX0FkZFN0cmluZyA9ICJNZWRpYW4iLCB9LAogICAgQ0NfTGFiZWxQb3NpdGlvbiA9ICJIb3Jpem9udGFsIiwKICAgIElDX1Zpc2libGUgICAgICAgICA9IGZhbHNlLAogIH0pCgogICBJbkVsb25nYXRpb25XRkFtcGxpZnkgPSBzZWxmOkFkZElucHV0KCJBbXBsaWZ5IiwgIkVsb25nYXRpb25XRkFtcGxpZnkiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTbGlkZXJDb250cm9sIiwKICAgIElOUF9NaW5TY2FsZSA9IC00LAogICAgSU5QX01heFNjYWxlID0gNCwKICAgIElOUF9EZWZhdWx0ID0gMSwKICAgIElOUF9NaW5BbGxvd2VkICAgICA9IC0xNSwKICAgIElOUF9NYXhBbGxvd2VkICAgICA9IDE1LAogICAgSUNfVmlzaWJsZSAgICAgICAgID0gZmFsc2UsCiAgfSkKCiAgSW5FbG9uZ2F0aW9uV0ZPZmZzZXQgPSBzZWxmOkFkZElucHV0KCJPZmZzZXQiLCAiRWxvbmdhdGlvbldGT2Zmc2V0IiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiU2NyZXdDb250cm9sIiwKICAgIElOUF9EZWZhdWx0ID0gMCwKICAgIElOUF9NYXhTY2FsZSA9IDUsCiAgICBJTlBfTWluU2NhbGUgPSAtNSwKICAgIElOUF9NYXhBbGxvd2VkID0gMTAsCiAgICBJTlBfTWluQWxsb3dlZCA9IC0xMCwKICAgIElDX1Zpc2libGUgID0gZmFsc2UsCiAgfSkKCiAgSW5IaWRlU2VsZWN0aW9uVG9vbCA9IHNlbGY6QWRkSW5wdXQoIkhpZGUgU2VsZWN0aW9uIFRvb2wiLCAiSGlkZVNlbGVjdGlvblRvb2wiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJDaGVja2JveENvbnRyb2wiLAogICAgSU5QX0RvTm90aWZ5Q2hhbmdlZCAgPSB0cnVlLAogICAgSU5QX0RlZmF1bHQgPSAwLAogICAgSUNfVmlzaWJsZSAgICAgICAgICAgPSBmYWxzZSwKICB9KQoKICAtLSBTaGFkZXJ0b3kgQXVkaW8KICBJblNoYWRlcnRveUF1ZGlvID0gc2VsZjpBZGRJbnB1dCgiU2hhZGVydG95IEF1ZGlvIiwgIlNoYWRlcnRveUF1ZGlvIiwgewogICAgTElOS0lEX0RhdGFUeXBlICAgICAgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCAgID0gIkNoZWNrYm94Q29udHJvbCIsCiAgICBJTlBfRG9Ob3RpZnlDaGFuZ2VkICA9IHRydWUsCiAgICBNQlROQ19TdHJldGNoVG9GaXQgICA9IHRydWUsCiAgICBJTlBfRGVmYXVsdCA9IDAsCiAgfSkKCiAgSW5TaGFkZXJBdWRpb1NjYWxlID0gc2VsZjpBZGRJbnB1dCgiU2hhZGVyIEF1ZGlvIFNjYWxlIiwgIlNoYWRlckF1ZGlvU2NhbGUiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTbGlkZXJDb250cm9sIiwKICAgIElOUF9NaW5TY2FsZSAgICAgPSAwLjAsCiAgICAtLUlOUF9NaW5BbGxvd2VkID0gMSwKICAgIElOUF9NYXhTY2FsZSAgICAgPSAyLjAsCiAgICBJTlBfRGVmYXVsdCAgICAgID0gMS4wLAogICAgSUNfVmlzaWJsZSAgICAgICA9IGZhbHNlLAogICAgLS1JTlBfSW50ZWdlciA9IHRydWUsCiAgfSkKCgogIFNlcDMgPSBzZWxmOkFkZElucHV0KHN0cmluZy5yZXAoIl8iLCA1MiksICJTZXBhcmF0b3IzIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIlRleHQiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIkxhYmVsQ29udHJvbCIsCiAgICBJTlBfRXh0ZXJuYWwgPSBmYWxzZSwKICAgIElOUF9QYXNzaXZlID0gdHJ1ZSwKICB9KQoKICBpZiAoTG9nb19PbikgdGhlbgogICAgSW5Mb2dvU3cgPSBzZWxmOkFkZElucHV0KCJMb2dvIiwgIkxvZ29TdyIsIHsKICAgIExJTktJRF9EYXRhVHlwZSAgICAgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCAgPSAiQ2hlY2tib3hDb250cm9sIiwKICAgIElOUF9JbnRlZ2VyICAgICAgICAgPSB0cnVlLAogICAgSU5QX0RvTm90aWZ5Q2hhbmdlZCA9IHRydWUsCiAgICBJTlBfRGVmYXVsdCAgICAgICAgID0gMSwKICAgIElDX1Zpc2libGUgICAgICAgICAgPSB0cnVlLAogICAgSU5QX0V4dGVybmFsICAgICAgICA9IGZhbHNlLAogICAgSU5QX1Bhc3NpdmUgICAgICAgICA9IHRydWUsCiAgfSkKICBlbmQKCiAgSW5GaWxlTmFtZSA9IHNlbGY6QWRkSW5wdXQoIk5vIEF1ZGlvIGxvYWRlZCIsICJGaWxlTmFtZSIsIHsKICAgIExJTktJRF9EYXRhVHlwZSAgICA9ICJUZXh0IiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJMYWJlbENvbnRyb2wiLAogICAgSU5QX0V4dGVybmFsICAgICAgID0gZmFsc2UsCiAgICBJTlBfUGFzc2l2ZSAgICAgICAgPSB0cnVlLAogICAgSUNEX1dpZHRoICAgICAgICAgID0gMSwKICB9KQogIAogIEluRmlsZUluZm8gPSBzZWxmOkFkZElucHV0KCJObyBBdWRpbyBsb2FkZWQiLCAiRmlsZUluZm8iLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgICAgPSAiVGV4dCIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiTGFiZWxDb250cm9sIiwKICAgIElOUF9FeHRlcm5hbCAgICAgICA9IGZhbHNlLAogICAgSU5QX1Bhc3NpdmUgICAgICAgID0gdHJ1ZSwKICAgIElDRF9XaWR0aCAgICAgICAgICA9IDEsCiAgfSkKCgogIEluTGFiZWwgPSBzZWxmOkFkZElucHV0KHZlcnNpb24sICJfVmVyc2lvbiIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJUZXh0IiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJMYWJlbENvbnRyb2wiLAogICAgSU5QX0V4dGVybmFsID0gZmFsc2UsCiAgICBJTlBfUGFzc2l2ZSA9IHRydWUsCiAgICBJQ0RfV2lkdGggPSAxLAogIH0pCgoKICAtLSBMYXlvdXQgLS0KICBzZWxmOkFkZENvbnRyb2xQYWdlKCJMYXlvdXQiKQoKICBzZWxmOkJlZ2luQ29udHJvbE5lc3QoIldhdmVmb3JtbGluZSIsICJXRkxpbmUiLCB0cnVlLCB7fSkKICBJblRoaWNrbmVzcyA9IHNlbGY6QWRkSW5wdXQoIlRoaWNrbmVzcyIsICJUaGlja25lc3MiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgICAgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTbGlkZXJDb250cm9sIiwKICAgIElOUF9NaW5BbGxvd2VkICAgICA9IDAuMDAwMSwKICAgIElOUF9NYXhTY2FsZSAgICAgICA9IDAuMSwKICAgIElOUF9EZWZhdWx0ICAgICAgICA9IDAuMDAyLAogIH0pCgogIC0tIGNvbG9yIHdoZWVsCiAgSW5SZWQgPSBzZWxmOkFkZElucHV0KCJSZWQiLCAiUmVkIiwgewogICAgSUNTX05hbWUgICAgICAgICAgICA9ICJMaW5lIENvbG9yIiwKICAgIExJTktJRF9EYXRhVHlwZSAgICAgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCAgPSAiQ29sb3JDb250cm9sIiwKICAgIElOUF9EZWZhdWx0ICAgICAgICAgPSAxLjAsCiAgICBJTlBfTWF4U2NhbGUgICAgICAgID0gMS4wLAogICAgQ0xSQ19TaG93V2hlZWwgICAgICA9IGZhbHNlLAogICAgSUNfQ29udHJvbEdyb3VwICAgICA9IDEsCiAgICBJQ19Db250cm9sSUQgICAgICAgID0gMCwKICB9KQogIEluR3JlZW4gPSBzZWxmOkFkZElucHV0KCJHcmVlbiIsICJHcmVlbiIsIHsKICAgIExJTktJRF9EYXRhVHlwZSAgICAgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCAgPSAiQ29sb3JDb250cm9sIiwKICAgIElOUF9EZWZhdWx0ICAgICAgICAgPSAxLjAsCiAgICBJQ19Db250cm9sR3JvdXAgICAgID0gMSwKICAgIElDX0NvbnRyb2xJRCAgICAgICAgPSAxLAogIH0pCiAgSW5CbHVlID0gc2VsZjpBZGRJbnB1dCgiQmx1ZSIsICJCbHVlIiwgewogICAgTElOS0lEX0RhdGFUeXBlICAgICA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sICA9ICJDb2xvckNvbnRyb2wiLAogICAgSU5QX0RlZmF1bHQgICAgICAgICA9IDEuMCwKICAgIElDX0NvbnRyb2xHcm91cCAgICAgPSAxLAogICAgSUNfQ29udHJvbElEICAgICAgICA9IDIsCiAgfSkKICBJbkFscGhhID0gc2VsZjpBZGRJbnB1dCgiQWxwaGEiLCAiQWxwaGEiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgICAgID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgID0gIkNvbG9yQ29udHJvbCIsCiAgICBJTlBfRGVmYXVsdCAgICAgICAgID0gMS4wLAogICAgSUNfQ29udHJvbEdyb3VwICAgICA9IDEsCiAgICBJQ19Db250cm9sSUQgICAgICAgID0gMywKICB9KQogIHNlbGY6RW5kQ29udHJvbE5lc3QoKQoKICBzZWxmOkJlZ2luQ29udHJvbE5lc3QoIkNyb3NzaGFpcmxpbmUiLCAiQ0hMaW5lIiwgdHJ1ZSwge30pCiAgSW5UaGlja25lc3NDSCA9IHNlbGY6QWRkSW5wdXQoIlRoaWNrbmVzcyIsICJUaGlja25lc3NDSCIsIHsKICAgIExJTktJRF9EYXRhVHlwZSAgICA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIlNsaWRlckNvbnRyb2wiLAogICAgSU5QX01pbkFsbG93ZWQgICAgID0gMC4wMDAxLAogICAgSU5QX01heFNjYWxlICAgICAgID0gMC4xLAogICAgSU5QX0RlZmF1bHQgICAgICAgID0gMC4wMDIsCiAgfSkKCiAgSW5Eb3R0ZWQgPSBzZWxmOkFkZElucHV0KCJEb3R0ZWQiLCAiRG90dGVkIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiQ2hlY2tib3hDb250cm9sIiwKICAgIElOUF9EZWZhdWx0ID0gMCwKICAgIElDX1Zpc2libGUgICAgICAgICA9IGZhbHNlCiAgfSkKCiAgLS0gY29sb3Igd2hlZWwKICBJblJlZENIID0gc2VsZjpBZGRJbnB1dCgiUmVkIiwgIlJlZENIIiwgewogICAgSUNTX05hbWUgICAgICAgICAgICA9ICJMaW5lIENvbG9yIiwKICAgIExJTktJRF9EYXRhVHlwZSAgICAgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCAgPSAiQ29sb3JDb250cm9sIiwKICAgIElOUF9EZWZhdWx0ICAgICAgICAgPSAxLjAsCiAgICBJTlBfTWF4U2NhbGUgICAgICAgID0gMS4wLAogICAgQ0xSQ19TaG93V2hlZWwgICAgICA9IGZhbHNlLAogICAgSUNfQ29udHJvbEdyb3VwICAgICA9IDIsCiAgICBJQ19Db250cm9sSUQgICAgICAgID0gMCwKICB9KQogIEluR3JlZW5DSCA9IHNlbGY6QWRkSW5wdXQoIkdyZWVuQ0giLCAiR3JlZW5DSCIsIHsKICAgIExJTktJRF9EYXRhVHlwZSAgICAgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCAgPSAiQ29sb3JDb250cm9sIiwKICAgIElOUF9EZWZhdWx0ICAgICAgICAgPSAxLjAsCiAgICBJQ19Db250cm9sR3JvdXAgICAgID0gMiwKICAgIElDX0NvbnRyb2xJRCAgICAgICAgPSAxLAogIH0pCiAgSW5CbHVlQ0ggPSBzZWxmOkFkZElucHV0KCJCbHVlQ0giLCAiQmx1ZUNIIiwgewogICAgTElOS0lEX0RhdGFUeXBlICAgICA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sICA9ICJDb2xvckNvbnRyb2wiLAogICAgSU5QX0RlZmF1bHQgICAgICAgICA9IDEuMCwKICAgIElDX0NvbnRyb2xHcm91cCAgICAgPSAyLAogICAgSUNfQ29udHJvbElEICAgICAgICA9IDIsCiAgfSkKICBJbkFscGhhQ0ggPSBzZWxmOkFkZElucHV0KCJBbHBoYUNIIiwgIkFscGhhQ0giLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgICAgID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgID0gIkNvbG9yQ29udHJvbCIsCiAgICBJTlBfRGVmYXVsdCAgICAgICAgID0gMS4wLAogICAgSUNfQ29udHJvbEdyb3VwICAgICA9IDIsCiAgICBJQ19Db250cm9sSUQgICAgICAgID0gMywKICB9KQogIHNlbGY6RW5kQ29udHJvbE5lc3QoKQoKCiAgLS0gU3BlY3RydW0gLS0KICBzZWxmOkFkZENvbnRyb2xQYWdlKCJTcGVjdHJ1bSIpCiAgSW5TcGVjdHJ1bSA9IHNlbGY6QWRkSW5wdXQoIlNwZWN0cnVtIiwgIlNwZWN0cnVtIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiQ2hlY2tib3hDb250cm9sIiwKICAgIElOUF9Eb05vdGlmeUNoYW5nZWQgPSB0cnVlLAogICAgSU5QX0V4dGVybmFsID0gZmFsc2UsCiAgICBJTlBfRGVmYXVsdCA9IDAsCiAgfSkKCiAgRGlzcGxheUJ1ZmZlciA9IHNlbGY6QWRkSW5wdXQoIk5vIERhdGEgaW4gQnVmZmVyIiwgIk5vdGVCdWZmZXIiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiVGV4dCIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiTGFiZWxDb250cm9sIiwKICAgIElOUF9FeHRlcm5hbCA9IGZhbHNlLAogICAgSU5QX1Bhc3NpdmUgPSB0cnVlLAogICAgSUNEX1dpZHRoID0gMSwKICAgIElDX1Zpc2libGUgPSBmYWxzZQogIH0pCgogIEdlbmVyYXRlQnVmZmVyID0gc2VsZjpBZGRJbnB1dCgiR2VuZXJhdGUgQnVmZmVyIiwgIkdlbmVyYXRlQnVmZmVyIiwgewogICAgTElOS1NfTmFtZSAgICAgICAgICA9ICJHZW5lcmF0ZSBCdWZmZXIiLAogICAgTElOS0lEX0RhdGFUeXBlICAgICA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sICA9ICJCdXR0b25Db250cm9sIiwKICAgIElOUF9Eb05vdGlmeUNoYW5nZWQgPSB0cnVlLAogICAgQlROQ1NfRXhlY3V0ZSAgICAgICA9IE5vdGVXaW5kb3csCiAgICBJQ0RfV2lkdGggICAgICAgICAgID0gMS4wLAogICAgSUNfVmlzaWJsZSAgICAgICAgICA9IGZhbHNlCiAgfSkKCgogIEluRkZUID0gc2VsZjpBZGRJbnB1dCgiRkZUIiwgIkZGVCIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIkNvbWJvQ29udHJvbCIsCiAgICBJTlBfRGVmYXVsdCA9IDAuMCwKICAgIElOUF9JbnRlZ2VyID0gdHJ1ZSwKICAgIElDRF9XaWR0aCA9IDEsCiAgICB7IENDU19BZGRTdHJpbmcgPSAiMjU2IiwgfSwKICAgIHsgQ0NTX0FkZFN0cmluZyA9ICI1MTIiLCB9LAogICAgeyBDQ1NfQWRkU3RyaW5nID0gIjEwMjQiLCB9LAogICAgeyBDQ1NfQWRkU3RyaW5nID0gIjIwNDgiLCB9LAogICAgQ0NfTGFiZWxQb3NpdGlvbiA9ICJIb3Jpem9udGFsIiwKICB9KQoKCiAgSW5TbW9vdGhmYWN0b3IgPSBzZWxmOkFkZElucHV0KCJTbW9vdGggRmFjdG9yIiwgIlNtb290aGZhY3RvciIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIlNsaWRlckNvbnRyb2wiLAogICAgSU5QX0ludGVnZXIgPSB0cnVlLAogICAgSU5QX01pbkFsbG93ZWQgPSAxLAogICAgSU5QX01heEFsbG93ZWQgPSAxMCwKICAgIElOUF9NaW5TY2FsZSA9IDEsCiAgICBJTlBfTWF4U2NhbGUgPSAxMCwKICAgIElOUF9EZWZhdWx0ID0gMSwKICAgIElDX1Zpc2libGUgICAgICAgICA9IHRydWUKICB9KQoKICAtLSBEZWJ1Z2dpbmcKICBJblZhcjEgPSBzZWxmOkFkZElucHV0KCJWYXIxIiwgIlZhcjEiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTbGlkZXJDb250cm9sIiwKICAgIElOUF9NaW5TY2FsZSAgICAgPSAtMS4wLAogICAgLS1JTlBfTWluQWxsb3dlZCA9IDEsCiAgICBJTlBfTWF4U2NhbGUgICAgID0gMS4wLAogICAgSU5QX0RlZmF1bHQgICAgICA9IDEuMCwKICAgIElDX1Zpc2libGUgICAgICAgPSBmYWxzZQogICAgLS1JTlBfSW50ZWdlciA9IHRydWUsCiAgfSkKICBJblZhcjIgPSBzZWxmOkFkZElucHV0KCJWYXIyIiwgIlZhcjIiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTbGlkZXJDb250cm9sIiwKICAgIElOUF9NaW5TY2FsZSA9IC0xLAogICAgLS1JTlBfTWluQWxsb3dlZCA9IDEsCiAgICBJTlBfTWF4U2NhbGUgPSAxMC4wLAogICAgSU5QX0RlZmF1bHQgPSAyLAogICAgSUNfVmlzaWJsZSAgICAgICAgID0gZmFsc2UsCiAgICAtLUlOUF9JbnRlZ2VyID0gdHJ1ZSwKICB9KQogIEluVmFyMyA9IHNlbGY6QWRkSW5wdXQoIlZhcjMiLCAiVmFyMyIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIlNsaWRlckNvbnRyb2wiLAogICAgSU5QX01pblNjYWxlID0gLTEsCiAgICAtLUlOUF9NaW5BbGxvd2VkID0gMSwKICAgIElOUF9NYXhTY2FsZSA9IDAuMDEsCiAgICBJTlBfRGVmYXVsdCA9IDEsCiAgICBJQ19WaXNpYmxlICAgICAgICAgPSBmYWxzZQogICAgLS1JTlBfSW50ZWdlciA9IHRydWUsCiAgfSkKICBJblZhcjQgPSBzZWxmOkFkZElucHV0KCJWYXI0IiwgIlZhcjQiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTbGlkZXJDb250cm9sIiwKICAgIElOUF9NaW5TY2FsZSA9IC0xLAogICAgLS1JTlBfTWluQWxsb3dlZCA9IDEsCiAgICBJTlBfTWF4U2NhbGUgPSAwLjAxLAogICAgSU5QX0RlZmF1bHQgPSAxLAogICAgSUNfVmlzaWJsZSAgICAgICAgID0gZmFsc2UsCiAgICAtLUlOUF9JbnRlZ2VyID0gdHJ1ZSwKICB9KQoKCiAgSW5GRlRTY2FsZSA9IHNlbGY6QWRkSW5wdXQoIlNjYWxlIiwgIkZGVFNjYWxlIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiU2NyZXdDb250cm9sIiwKICAgIElOUF9EZWZhdWx0ID0gMSwKICAgIElOUF9NYXhTY2FsZSA9IDEwLAogICAgSU5QX01pblNjYWxlID0gMCwKICAgIElOUF9NaW5BbGxvd2VkID0gMC4wMSwKICAgIElOUF9NYXhBbGxvd2VkID0gMTAsCiAgICBJQ19WaXNpYmxlICAgICA9IGZhbHNlLAogIH0pCgogIEluTG9nSyA9IHNlbGY6QWRkSW5wdXQoIkxvZ0siLCAiTG9nSyIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIlNsaWRlckNvbnRyb2wiLAogICAgSU5QX0ludGVnZXIgICAgPSB0cnVlLAogICAgSU5QX01pbkFsbG93ZWQgPSAwLAogICAgSU5QX01heEFsbG93ZWQgPSAzLAogICAgSU5QX01pblNjYWxlICAgPSAwLAogICAgSU5QX01heFNjYWxlICAgPSAzLAogICAgSU5QX0RlZmF1bHQgICAgPSAwLAogICAgSUNfVmlzaWJsZSAgICAgPSBmYWxzZSwKICB9KQoKCiAgSW5BcHBlYXJhbmNlID0gc2VsZjpBZGRJbnB1dCgiQXBwZWFyYW5jZSIsICJBcHBlYXJhbmNlIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiQ29tYm9Db250cm9sIiwKICAgIElOUF9EZWZhdWx0ID0gMC4wLAogICAgSU5QX0ludGVnZXIgPSB0cnVlLAogICAgSUNEX1dpZHRoID0gMSwKICAgIHsgQ0NTX0FkZFN0cmluZyA9ICJSb3VnaCIsIH0sCiAgICB7IENDU19BZGRTdHJpbmcgPSAiQmFycyIsIH0sCiAgICB7IENDU19BZGRTdHJpbmcgPSAiU21vb3RoIiwgfSwKICAgIHsgQ0NTX0FkZFN0cmluZyA9ICJTbW9vdGggRmlsbGVkIiwgfSwKICAgIHsgQ0NTX0FkZFN0cmluZyA9ICJOZWVkbGVzIiwgfSwKICAgIENDX0xhYmVsUG9zaXRpb24gPSAiSG9yaXpvbnRhbCIsCiAgICBJQ19WaXNpYmxlICAgICA9IGZhbHNlLAogIH0pCiAgLS1DQ19MYWJlbFBvc2l0aW9uID0gIlZlcnRpY2FsIiwKCiAgSW5FcXVpQ3V0cyA9IHNlbGY6QWRkSW5wdXQoIkVxdWlkaXN0YW50IEN1dHMiLCAiRXF1aUN1dHMiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJDaGVja2JveENvbnRyb2wiLAogICAgSU5QX0RvTm90aWZ5Q2hhbmdlZCA9IHRydWUsCiAgICBJQ19WaXNpYmxlICAgICAgICAgID0gZmFsc2UsCiAgICBJTlBfRGVmYXVsdCA9IDAsCiAgfSkKCiAgSW5TdGVwcyA9IHNlbGY6QWRkSW5wdXQoIlN0ZXBzIiwgIlN0ZXBzIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiU2xpZGVyQ29udHJvbCIsCiAgICBJTlBfTWluU2NhbGUgPSAwLAogICAgSU5QX01pbkFsbG93ZWQgPSAwLAogICAgSU5QX01heEFsbG93ZWQgPSA3LAogICAgLS1JTlBfTWF4U2NhbGUgPSAyNTYsCiAgICBJTlBfRGVmYXVsdCA9IDAsCiAgICBJQ19WaXNpYmxlICAgICA9IGZhbHNlLAogICAgSU5QX0ludGVnZXIgICAgPSB0cnVlLAogIH0pCiAgSW5MaW1pdCA9IHNlbGY6QWRkSW5wdXQoIkxpbWl0YXRpb24iLCAiTGltaXRhdGlvbiIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIkNoZWNrYm94Q29udHJvbCIsCiAgICBJTlBfRG9Ob3RpZnlDaGFuZ2VkID0gdHJ1ZSwKICAgIElDX1Zpc2libGUgICAgICAgICAgPSBmYWxzZSwKICAgIElOUF9EZWZhdWx0ID0gMCwKICB9KQogIEluTGltaXRUaHJlc2hvbGQgPSBzZWxmOkFkZElucHV0KCJUaHJlc2hvbGQiLCAiVGhyZXNob2xkIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiU2NyZXdDb250cm9sIiwKICAgIElOUF9EZWZhdWx0ID0gMSwKICAgIElOUF9NYXhTY2FsZSA9IDEsCiAgICBJTlBfTWluU2NhbGUgPSAwLjEsCiAgICBJTlBfTWluQWxsb3dlZCA9IDAuMCwKICAgIElOUF9NYXhBbGxvd2VkID0gMSwKICAgIElDX1Zpc2libGUgICAgICAgICA9IGZhbHNlLAogIH0pCiAgSW5MaW1pdENvbXByZXNzaW9uID0gc2VsZjpBZGRJbnB1dCgiQ29tcHJlc3Npb24iLCAiQ29tcHJlc3Npb24iLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTY3Jld0NvbnRyb2wiLAogICAgSU5QX0RlZmF1bHQgPSAxMDAsCiAgICBJTlBfTWF4U2NhbGUgPSAxMDAsCiAgICBJTlBfTWluU2NhbGUgPSAyLAogICAgSU5QX01pbkFsbG93ZWQgPSAyLAogICAgSU5QX01heEFsbG93ZWQgPSAxMDAsCiAgICBJQ19WaXNpYmxlICAgICAgICAgPSBmYWxzZSwKICB9KQogIEluRGVjb21wcmVzcyA9IHNlbGY6QWRkSW5wdXQoIkRlY29tcHJlc3MiLCAiRGVjb21wcmVzcyIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sICAgPSAiQ2hlY2tib3hDb250cm9sIiwKICAgIElOUF9Eb05vdGlmeUNoYW5nZWQgID0gdHJ1ZSwKICAgIElOUF9EZWZhdWx0ICAgICAgICAgID0gMCwKICAgIElDX1Zpc2libGUgICAgICAgICAgID0gZmFsc2UsCiAgICBJTlBfRXh0ZXJuYWwgICAgICAgICA9IHRydWUsCiAgfSkKICBJbkRDU2NhbGUgPSBzZWxmOkFkZElucHV0KCJEQyBTY2FsZSIsICJEQ1NjYWxlIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiU2NyZXdDb250cm9sIiwKICAgIElOUF9EZWZhdWx0ID0gMS4wLAogICAgSU5QX01heFNjYWxlID0gMS4wLAogICAgSU5QX01pblNjYWxlID0gMC4wLAogICAgLS1JTlBfTWluQWxsb3dlZCA9IC0xLjAsCiAgICAtLUlOUF9NYXhBbGxvd2VkID0gMS4wLAogICAgSUNfVmlzaWJsZSAgICAgPSBmYWxzZSwKICB9KQogIEluRENIaWdoTGluZSA9IHNlbGY6QWRkSW5wdXQoIkRDIEhpZ2hMaW5lIiwgIkRDSGlnaExpbmUiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTY3Jld0NvbnRyb2wiLAogICAgSU5QX0RlZmF1bHQgPSAwLjUsCiAgICBJTlBfTWF4U2NhbGUgPSAxLjAsCiAgICBJTlBfTWluU2NhbGUgPSAwLjAsCiAgICAtLUlOUF9NaW5BbGxvd2VkID0gLTEuMCwKICAgIC0tSU5QX01heEFsbG93ZWQgPSAxLjAsCiAgICBJQ19WaXNpYmxlICAgICA9IGZhbHNlLAogIH0pCiAgSW5EQ1RocmVzaG9sZCA9IHNlbGY6QWRkSW5wdXQoIkRDIFRocmVzaG9sZCIsICJEQ1RocmVzaG9sZCIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIlNjcmV3Q29udHJvbCIsCiAgICBJTlBfRGVmYXVsdCA9IDAuNSwKICAgIElOUF9NYXhTY2FsZSA9IDEuMCwKICAgIElOUF9NaW5TY2FsZSA9IDAuMCwKICAgIElOUF9NaW5BbGxvd2VkID0gLTEuMCwKICAgIElOUF9NYXhBbGxvd2VkID0gMS4wLAogICAgSUNfVmlzaWJsZSAgICAgPSBmYWxzZSwKICB9KQogIEluU2xvcGUgPSBzZWxmOkFkZElucHV0KCJTbG9wZSIsICJTbG9wZSIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sICAgPSAiQ2hlY2tib3hDb250cm9sIiwKICAgIElOUF9Eb05vdGlmeUNoYW5nZWQgID0gdHJ1ZSwKICAgIElOUF9EZWZhdWx0ICAgICAgICAgID0gMCwKICAgIElDX1Zpc2libGUgICAgICAgICAgID0gZmFsc2UsCiAgICBJTlBfRXh0ZXJuYWwgICAgICAgICA9IHRydWUsCiAgfSkKCiAgSW5Db25lckZyZXEgPSBzZWxmOkFkZElucHV0KCJDb3JuZXJmcmVxdWVuY3kiLCAiQ29ybmVyRnJlcSIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIlNjcmV3Q29udHJvbCIsCiAgICBJTlBfRGVmYXVsdCA9IDAuMiwKICAgIElOUF9NYXhTY2FsZSA9IDEuMCwKICAgIElOUF9NaW5TY2FsZSA9IDAuMCwKICAgIElOUF9NaW5BbGxvd2VkID0gMC4wLAogICAgSU5QX01heEFsbG93ZWQgPSAxLjAsCiAgICBJQ19WaXNpYmxlICAgICA9IGZhbHNlLAogIH0pCiAgSW5TbG9wZVZhbHVlID0gc2VsZjpBZGRJbnB1dCgiU2xvcGUiLCAiU2xvcGVWYWx1ZSIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIlNjcmV3Q29udHJvbCIsCiAgICBJTlBfRGVmYXVsdCA9IDAuMCwKICAgIElOUF9NYXhTY2FsZSA9IDIwLjAsCiAgICBJTlBfTWluU2NhbGUgPSAwLjAsCiAgICBJTlBfTWluQWxsb3dlZCA9IDAuMCwKICAgIC0tSU5QX01heEFsbG93ZWQgPSAxLjAsCiAgICBJQ19WaXNpYmxlICAgICA9IGZhbHNlLAogIH0pCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogIFNlcDEgPSBzZWxmOkFkZElucHV0KHN0cmluZy5yZXAoIl8iLCA1MiksICJTZXBhcmF0b3IxIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIlRleHQiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIkxhYmVsQ29udHJvbCIsCiAgICBJTlBfRXh0ZXJuYWwgPSBmYWxzZSwKICAgIElOUF9QYXNzaXZlID0gdHJ1ZSwKICB9KQogIEluRnJlcXVlbmN5VmlzdWFsaXphdGlvbiA9IHNlbGY6QWRkSW5wdXQoIkZyZXF1ZW5jeVZpc3VhbGl6YXRpb24iLCAiRnJlcXVlbmN5VmlzdWFsaXphdGlvbiIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sICAgPSAiQ2hlY2tib3hDb250cm9sIiwKICAgIElOUF9Eb05vdGlmeUNoYW5nZWQgID0gdHJ1ZSwKICAgIElOUF9EZWZhdWx0ICAgICAgICAgID0gMCwKICAgIElDX1Zpc2libGUgICAgICAgICAgID0gZmFsc2UsCiAgICBJTlBfRXh0ZXJuYWwgICAgICAgICA9IGZhbHNlLAogIH0pCiAgSW5GVlNjYWxlID0gc2VsZjpBZGRJbnB1dCgiRlYgU2NhbGUiLCAiRlZTY2FsZSIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIlNjcmV3Q29udHJvbCIsCiAgICBJTlBfRGVmYXVsdCA9IDEsCiAgICBJTlBfTWF4U2NhbGUgPSA1LAogICAgSU5QX01pblNjYWxlID0gMCwKICAgIElOUF9NaW5BbGxvd2VkID0gLTUuMCwKICAgIElOUF9NYXhBbGxvd2VkID0gNS4wLAogICAgSUNfVmlzaWJsZSAgICAgPSBmYWxzZSwKICB9KQogIEluRlZDRCA9IHNlbGY6QWRkSW5wdXQoIkNvbnN0YW50IiwgIkZWQ0QiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCAgID0gIkNoZWNrYm94Q29udHJvbCIsCiAgICBJTlBfRG9Ob3RpZnlDaGFuZ2VkICA9IHRydWUsCiAgICBJTlBfRGVmYXVsdCAgICAgICAgICA9IDEsCiAgICBJQ19WaXNpYmxlICAgICAgICAgICA9IGZhbHNlLAogICAgSU5QX0V4dGVybmFsICAgICAgICAgPSB0cnVlLAogIH0pCgogIEluRlZTbW9vdGggPSBzZWxmOkFkZElucHV0KCJGViBTbW9vdGgiLCAiRlZTbW9vdGgiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTY3Jld0NvbnRyb2wiLAogICAgSU5QX0RlZmF1bHQgPSAwLjAyLAogICAgSU5QX01heFNjYWxlID0gMC41LAogICAgSU5QX01pblNjYWxlID0gMC4wLAogICAgSU5QX01pbkFsbG93ZWQgPSAwLjAsCiAgICBJTlBfTWF4QWxsb3dlZCA9IDEuNSwKICAgIElDX1Zpc2libGUgICAgID0gZmFsc2UsCiAgfSkKCiAgSW5GVk1lcmdlID0gc2VsZjpBZGRJbnB1dCgiQXBwbHkgTWVyZ2UgTW9kZSIsICJBcHBseU1vZGUiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJDb21ib0NvbnRyb2wiLAogICAgSU5QX0RlZmF1bHQgPSAwLjAsCiAgICBJTlBfSW50ZWdlciA9IHRydWUsCiAgICB7IENDU19BZGRTdHJpbmcgPSAiTm9ybWFsIiwgfSwKICAgIHsgQ0NTX0FkZFN0cmluZyA9ICJTY3JlZW4iLCB9LAogICAgeyBDQ1NfQWRkU3RyaW5nID0gIkRpc3NvbHZlIiwgfSwKICAgIHsgQ0NTX0FkZFN0cmluZyA9ICJNdWx0aXBseSIsIH0sCiAgICB7IENDU19BZGRTdHJpbmcgPSAiT3ZlcmxheSIsIH0sCiAgICB7IENDU19BZGRTdHJpbmcgPSAiU29mdCBMaWdodCIsIH0sCiAgICB7IENDU19BZGRTdHJpbmcgPSAiSGFyZCBMaWdodCIsIH0sCiAgICB7IENDU19BZGRTdHJpbmcgPSAiQ29sb3IgRG9kZ2UiLCB9LAogICAgeyBDQ1NfQWRkU3RyaW5nID0gIkNvbG9yIEJ1cm4iLCB9LAogICAgeyBDQ1NfQWRkU3RyaW5nID0gIkRhcmtlbiIsIH0sCiAgICB7IENDU19BZGRTdHJpbmcgPSAiTGlnaHRlbiIsIH0sCiAgICB7IENDU19BZGRTdHJpbmcgPSAiRGlmZmVyZW5jZSIsIH0sCiAgICB7IENDU19BZGRTdHJpbmcgPSAiRXhjbHVzaW9uIiwgfSwKICAgIHsgQ0NTX0FkZFN0cmluZyA9ICJIdWUiLCB9LAogICAgeyBDQ1NfQWRkU3RyaW5nID0gIlNhdHVyYXRpb24iLCB9LAogICAgeyBDQ1NfQWRkU3RyaW5nID0gIkNvbG9yIiwgfSwKICAgIHsgQ0NTX0FkZFN0cmluZyA9ICJMdW1pbm9zaXR5IiwgIH0sCiAgICBJQ19WaXNpYmxlICAgICAgPSBmYWxzZSwKICAgIH0pCgoKICBJbkJrZ0FscGhhID0gc2VsZjpBZGRJbnB1dCgiSW1hZ2UgQWxwaGEiLCAiQmtnQWxwaGEiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTbGlkZXJDb250cm9sIiwKICAgIElOUF9NaW5TY2FsZSA9IDAsCiAgICBJTlBfTWF4U2NhbGUgPSAxLAogICAgSU5QX0RlZmF1bHQgPSAxLjAsCiAgICBJTlBfTWluQWxsb3dlZCAgICAgPSAwLjAsCiAgICBJQ19WaXNpYmxlICAgICAgICAgPSBmYWxzZSwKICB9KQoKICBJbkZWQWxwaGEgPSBzZWxmOkFkZElucHV0KCJGViBBbHBoYSIsICJGVkFscGhhIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiU2xpZGVyQ29udHJvbCIsCiAgICBJTlBfTWluU2NhbGUgPSAwLAogICAgSU5QX01heFNjYWxlID0gMSwKICAgIElOUF9EZWZhdWx0ID0gMS4wLAogICAgSU5QX01pbkFsbG93ZWQgICAgID0gMC4wLAogICAgSUNfVmlzaWJsZSAgICAgICAgID0gZmFsc2UsCiAgfSkKCgogIFNlcDIgPSBzZWxmOkFkZElucHV0KHN0cmluZy5yZXAoIl8iLCA1MiksICJTZXBhcmF0b3IyIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIlRleHQiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIkxhYmVsQ29udHJvbCIsCiAgICBJTlBfRXh0ZXJuYWwgPSBmYWxzZSwKICAgIElOUF9QYXNzaXZlID0gdHJ1ZSwKICAgIElDX1Zpc2libGUgICAgICAgICA9IGZhbHNlLAogIH0pCgogIEluRWxvbmdhdGlvbk9uID0gc2VsZjpBZGRJbnB1dCgiRWxvbmdhdGlvbiBPbiIsICJFbG9uZ2F0aW9uT24iLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCAgID0gIkNoZWNrYm94Q29udHJvbCIsCiAgICBJTlBfRG9Ob3RpZnlDaGFuZ2VkICA9IHRydWUsCiAgICBJTlBfRGVmYXVsdCAgICAgICAgICA9IDAsCiAgICBJQ19WaXNpYmxlICAgICAgICAgICA9IGZhbHNlLAogICAgSU5QX0V4dGVybmFsICAgICAgICAgPSBmYWxzZSwKICB9KQoKICBJbkVsb25TZWxlY3Rpb24gPSBzZWxmOkFkZElucHV0KCIiLCAiRWxvblNlbGVjdGlvbiIsIHsKICAgIHsgTUJUTkNfQWRkQnV0dG9uID0gIkUxIiwgTUJUTkNJRF9BZGRJRCA9ICJFMSIsIH0sCiAgICB7IE1CVE5DX0FkZEJ1dHRvbiA9ICJFMiIsIE1CVE5DSURfQWRkSUQgPSAiRTIiLCB9LAogICAgeyBNQlROQ19BZGRCdXR0b24gPSAiRTMiLCBNQlROQ0lEX0FkZElEID0gIkUzIiwgfSwKICAgIElOUElEX0RlZmF1bHRJRCA9ICJFMSIsCiAgICBMSU5LSURfRGF0YVR5cGUgPSAiRnVJRCIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiTXVsdGlCdXR0b25JRENvbnRyb2wiLAogICAgSUNEX1dpZHRoID0gMS4wLAogICAgTUJUTkNfU3RyZXRjaFRvRml0ID0gdHJ1ZSwKICAgIE1CVE5DX0ZvcmNlQnV0dG9ucyA9IHRydWUsCiAgICBJTlBfRG9Ob3RpZnlDaGFuZ2VkICA9IHRydWUsCiAgICBJQ19WaXNpYmxlID0gZmFsc2UsCiAgICBJTlBfRXh0ZXJuYWwgPSBmYWxzZSwKICB9KQoKICBJbkVPbiA9IHNlbGY6QWRkSW5wdXQoIk9uIiwgIkVPbiIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sICA9ICJDaGVja2JveENvbnRyb2wiLAogICAgSU5QX0RvTm90aWZ5Q2hhbmdlZCA9IGZhbHNlLAogICAgSU5QX0V4dGVybmFsICAgICAgICA9IGZhbHNlLCAgLS0gZG9uYHQgYWxsb3cgY29ubmVjdGlvbnMKICAgIC0tSU5QX1Bhc3NpdmUgICAgICAgICA9IHRydWUsICAtLSBkb2Vzbid0IGFmZmVjdCByZW5kZXJpbmcgKGRvZXNuJ3QgaW52YWxpZGF0ZSBjYWNoZXMpCiAgICAtLUlOUF9BY3RpdmUgICAgICAgICAgPSBmYWxzZSwKICAgIElOUF9EZWZhdWx0ICAgICAgICAgPSAxLAogICAgSUNfVmlzaWJsZSAgICAgICAgICA9IGZhbHNlLAogIH0pCiAgSW5FT24yID0gc2VsZjpBZGRJbnB1dCgiT24iLCAiRU9uMiIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sICA9ICJDaGVja2JveENvbnRyb2wiLAogICAgSU5QX0RvTm90aWZ5Q2hhbmdlZCA9IHRydWUsCiAgICBJTlBfRXh0ZXJuYWwgICAgICAgID0gZmFsc2UsICAtLSBkb25gdCBhbGxvdyBjb25uZWN0aW9ucwogICAgLS1JTlBfUGFzc2l2ZSAgICAgICAgID0gdHJ1ZSwgIC0tIGRvZXNuJ3QgYWZmZWN0IHJlbmRlcmluZyAoZG9lc24ndCBpbnZhbGlkYXRlIGNhY2hlcykKICAgIC0tSU5QX0FjdGl2ZSAgICAgICAgICA9IGZhbHNlLAogICAgSU5QX0RlZmF1bHQgICAgICAgICA9IDAsCiAgICBJQ19WaXNpYmxlICAgICAgICAgID0gZmFsc2UsCiAgfSkKICBJbkVPbjMgPSBzZWxmOkFkZElucHV0KCJPbiIsICJFT24zIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgID0gIkNoZWNrYm94Q29udHJvbCIsCiAgICBJTlBfRG9Ob3RpZnlDaGFuZ2VkID0gdHJ1ZSwKICAgIElOUF9FeHRlcm5hbCAgICAgICAgPSBmYWxzZSwgIC0tIGRvbmB0IGFsbG93IGNvbm5lY3Rpb25zCiAgICAtLUlOUF9QYXNzaXZlICAgICAgICAgPSB0cnVlLCAgLS0gZG9lc24ndCBhZmZlY3QgcmVuZGVyaW5nIChkb2Vzbid0IGludmFsaWRhdGUgY2FjaGVzKQogICAgLS1JTlBfQWN0aXZlICAgICAgICAgID0gZmFsc2UsCiAgICBJTlBfRGVmYXVsdCAgICAgICAgID0gMCwKICAgIElDX1Zpc2libGUgICAgICAgICAgPSBmYWxzZSwKICB9KQoKICBJbkxhYmVsRWxvbmdhdGlvbiA9IHNlbGY6QWRkSW5wdXQoIkVsb25nYXRpb24iLCAiTGFiZWxFbG9uZ2F0aW9uIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIlRleHQiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIkxhYmVsQ29udHJvbCIsCiAgICBJTlBfRXh0ZXJuYWwgPSBmYWxzZSwKICAgIElOUF9QYXNzaXZlID0gdHJ1ZSwKICB9KQoKICAtLSBFeHBlcmltZW50YWwgZm9yIEV4cHJlc2lvbnMgKGJ1dCBvbmx5IGFjdGl2IGlmIHNob3dlZCkKICBJbkVsb25nYXRpb24gPSBzZWxmOkFkZElucHV0KCJFbG9uZ2F0aW9uIiwgIkVsb25nYXRpb24iLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTbGlkZXJDb250cm9sIiwKICAgIElOUF9EaXNhYmxlZCAgICAgICAgPSB0cnVlLCAgLS0gcHJldmVudCB1c2VyIGZyb20gZHJhZ2dpbmcgcHJldmlldyBjb250cm9sCiAgICBJTlBfRG9Ob3RpZnlDaGFuZ2VkID0gZmFsc2UsCiAgICAtLUlOUF9Eb05vdGlmeUNoYW5nZWQgPSBmYWxzZSwKICAgIElOUF9FeHRlcm5hbCAgICAgICAgPSBmYWxzZSwgIC0tIGRvbmB0IGFsbG93IGNvbm5lY3Rpb25zCiAgICBJTlBfUGFzc2l2ZSAgICAgICAgID0gdHJ1ZSwgIC0tIGRvZXNuJ3QgYWZmZWN0IHJlbmRlcmluZyAoZG9lc24ndCBpbnZhbGlkYXRlIGNhY2hlcykKICAgIElDX1Zpc2libGUgICAgICAgICAgPSBmYWxzZSwKICB9KQoKICAtLSBQYXJhbWV0ZXJzZXRzIHN0YXJ0CiAgLS0gUGFyYW1ldGVyc2V0IGZvciBFbG9uZ2F0aW9uIDEKICBJblJlY1dpZHRoID0gc2VsZjpBZGRJbnB1dCgiQmFuZCBXaWR0aCIsICJSZWNXaWR0aCIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIlNsaWRlckNvbnRyb2wiLAogICAgSU5QX01pblNjYWxlID0gMCwKICAgIElOUF9NYXhTY2FsZSA9IDEsCiAgICBJTlBfRGVmYXVsdCA9IDAuMDMsCiAgICBJTlBfTWluQWxsb3dlZCAgICAgPSAwLjAzLAogICAgSUNfVmlzaWJsZSAgICAgICAgID0gZmFsc2UsCiAgfSkKCiAgSW5SZWNPZmZzZXQgPSBzZWxmOkFkZElucHV0KCJCYW5kIE9mZnNldCIsICJSZWNPZmZzZXQiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTbGlkZXJDb250cm9sIiwKICAgIElOUF9NaW5TY2FsZSA9IDAsCiAgICBJTlBfTWF4U2NhbGUgPSAxLAogICAgSU5QX0RlZmF1bHQgPSAwLjIsCiAgICBJTlBfTWluQWxsb3dlZCAgICAgPSAwLAogICAgSU5QX01heEFsbG93ZWQgICAgID0gMSwKICAgIElDX1Zpc2libGUgICAgICAgICA9IGZhbHNlLAogIH0pCgogIEluU3BlY3RydW1ab29tID0gc2VsZjpBZGRJbnB1dCgiWm9vbSIsICJTcGVjdHJ1bVpvb20iLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTY3Jld0NvbnRyb2wiLAogICAgSU5QX0RlZmF1bHQgPSAxLAogICAgSU5QX01heFNjYWxlID0gMiwKICAgIElOUF9NaW5TY2FsZSA9IDEsCiAgICBJTlBfTWF4QWxsb3dlZCA9IDIsCiAgICBJTlBfTWluQWxsb3dlZCA9IDEsCiAgICBJQ19WaXNpYmxlICA9IGZhbHNlLAogIH0pCgogIEluRWxvbmdhdGlvbkFtcGxpZnkgPSBzZWxmOkFkZElucHV0KCJBbXBsaWZ5IiwgIkVsb25nYXRpb25BbXBsaWZ5IiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiU2xpZGVyQ29udHJvbCIsCiAgICBJTlBfTWluU2NhbGUgPSAwLAogICAgSU5QX01heFNjYWxlID0gMywKICAgIElOUF9EZWZhdWx0ID0gMSwKICAgIElOUF9NaW5BbGxvd2VkICAgICA9IDAsCiAgICAtLUlOUF9NYXhBbGxvd2VkICAgICA9IDIsCiAgfSkKCiAgSW5FbG9uZ2F0aW9uT2Zmc2V0ID0gc2VsZjpBZGRJbnB1dCgiT2Zmc2V0IiwgIkVsb25nYXRpb25PZmZzZXQiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTY3Jld0NvbnRyb2wiLAogICAgSU5QX0RlZmF1bHQgPSAwLAogICAgSU5QX01heFNjYWxlID0gNSwKICAgIElOUF9NaW5TY2FsZSA9IC01LAogICAgSU5QX01heEFsbG93ZWQgPSAxMCwKICAgIElOUF9NaW5BbGxvd2VkID0gLTEwLAogICAgSUNfVmlzaWJsZSAgPSBmYWxzZSwKICB9KQoKICBJbkVsb25nYXRpb25PcGVyYXRpb24gPSBzZWxmOkFkZElucHV0KCJPcGVyYXRvciIsICJFbG9uZ2F0aW9uT3BlcmF0b3IiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJDb21ib0NvbnRyb2wiLAogICAgSU5QX0RlZmF1bHQgPSAwLjAsCiAgICBJTlBfSW50ZWdlciA9IHRydWUsCiAgICBJQ0RfV2lkdGggPSAxLAogICAgeyBDQ1NfQWRkU3RyaW5nID0gIk1heCIsIH0sCiAgICB7IENDU19BZGRTdHJpbmcgPSAiQXZlcmFnZSIsIH0sCiAgICB7IENDU19BZGRTdHJpbmcgPSAiTWVkaWFuIiwgfSwKICAgIENDX0xhYmVsUG9zaXRpb24gPSAiSG9yaXpvbnRhbCIsCiAgICBJQ19WaXNpYmxlICAgICAgICAgPSBmYWxzZSwKICB9KQoKICAtLSBQYXJhbWV0ZXJzZXQgZm9yIEVsb25nYXRpb24yCiAgSW5SZWNXaWR0aDIgPSBzZWxmOkFkZElucHV0KCJCYW5kIFdpZHRoIiwgIlJlY1dpZHRoMiIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIlNsaWRlckNvbnRyb2wiLAogICAgSU5QX01pblNjYWxlID0gMCwKICAgIElOUF9NYXhTY2FsZSA9IDEsCiAgICBJTlBfRGVmYXVsdCA9IDAuMDMsCiAgICBJTlBfTWluQWxsb3dlZCAgICAgPSAwLjAzLAogICAgSUNfVmlzaWJsZSAgICAgICAgID0gZmFsc2UsCiAgfSkKCiAgSW5SZWNPZmZzZXQyID0gc2VsZjpBZGRJbnB1dCgiQmFuZCBPZmZzZXQiLCAiUmVjT2Zmc2V0MiIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIlNsaWRlckNvbnRyb2wiLAogICAgSU5QX01pblNjYWxlID0gMCwKICAgIElOUF9NYXhTY2FsZSA9IDEsCiAgICBJTlBfRGVmYXVsdCA9IDAuMiwKICAgIElOUF9NaW5BbGxvd2VkICAgICA9IDAsCiAgICBJTlBfTWF4QWxsb3dlZCAgICAgPSAxLAogICAgSUNfVmlzaWJsZSAgICAgICAgID0gZmFsc2UsCiAgfSkKCiAgSW5TcGVjdHJ1bVpvb20yID0gc2VsZjpBZGRJbnB1dCgiWm9vbSIsICJTcGVjdHJ1bVpvb20yIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiU2NyZXdDb250cm9sIiwKICAgIElOUF9EZWZhdWx0ID0gMSwKICAgIElOUF9NYXhTY2FsZSA9IDIsCiAgICBJTlBfTWluU2NhbGUgPSAxLAogICAgSU5QX01heEFsbG93ZWQgPSAyLAogICAgSU5QX01pbkFsbG93ZWQgPSAxLAogICAgSUNfVmlzaWJsZSAgPSBmYWxzZSwKICB9KQoKICBJbkVsb25nYXRpb25BbXBsaWZ5MiA9IHNlbGY6QWRkSW5wdXQoIkFtcGxpZnkiLCAiRWxvbmdhdGlvbkFtcGxpZnkyIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiU2xpZGVyQ29udHJvbCIsCiAgICBJTlBfTWluU2NhbGUgPSAwLAogICAgSU5QX01heFNjYWxlID0gMywKICAgIElOUF9EZWZhdWx0ID0gMSwKICAgIElOUF9NaW5BbGxvd2VkICAgICA9IDAsCiAgICAtLUlOUF9NYXhBbGxvd2VkICAgICA9IDIsCiAgICBJQ19WaXNpYmxlICA9IGZhbHNlLAogIH0pCgogIEluRWxvbmdhdGlvbk9mZnNldDIgPSBzZWxmOkFkZElucHV0KCJPZmZzZXQiLCAiRWxvbmdhdGlvbk9mZnNldDIiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTY3Jld0NvbnRyb2wiLAogICAgSU5QX0RlZmF1bHQgPSAwLAogICAgSU5QX01heFNjYWxlID0gNSwKICAgIElOUF9NaW5TY2FsZSA9IC01LAogICAgSU5QX01heEFsbG93ZWQgPSAxMCwKICAgIElOUF9NaW5BbGxvd2VkID0gLTEwLAogICAgSUNfVmlzaWJsZSAgPSBmYWxzZSwKICB9KQoKICBJbkVsb25nYXRpb25PcGVyYXRpb24yID0gc2VsZjpBZGRJbnB1dCgiT3BlcmF0b3IiLCAiRWxvbmdhdGlvbk9wZXJhdG9yMiIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIkNvbWJvQ29udHJvbCIsCiAgICBJTlBfRGVmYXVsdCA9IDAuMCwKICAgIElOUF9JbnRlZ2VyID0gdHJ1ZSwKICAgIElDRF9XaWR0aCA9IDEsCiAgICB7IENDU19BZGRTdHJpbmcgPSAiTWF4IiwgfSwKICAgIHsgQ0NTX0FkZFN0cmluZyA9ICJBdmVyYWdlIiwgfSwKICAgIHsgQ0NTX0FkZFN0cmluZyA9ICJNZWRpYW4iLCB9LAogICAgQ0NfTGFiZWxQb3NpdGlvbiA9ICJIb3Jpem9udGFsIiwKICAgIElDX1Zpc2libGUgICAgICAgICA9IGZhbHNlLAogIH0pCiAgLS0gUGFyYW1ldGVyc2V0IGZvciBFbG9uZ2F0aW9uMwogIEluUmVjV2lkdGgzID0gc2VsZjpBZGRJbnB1dCgiQmFuZCBXaWR0aCIsICJSZWNXaWR0aDMiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTbGlkZXJDb250cm9sIiwKICAgIElOUF9NaW5TY2FsZSA9IDAsCiAgICBJTlBfTWF4U2NhbGUgPSAxLAogICAgSU5QX0RlZmF1bHQgPSAwLjAzLAogICAgSU5QX01pbkFsbG93ZWQgICAgID0gMC4wMywKICAgIElDX1Zpc2libGUgICAgICAgICA9IGZhbHNlLAogIH0pCgogIEluUmVjT2Zmc2V0MyA9IHNlbGY6QWRkSW5wdXQoIkJhbmQgT2Zmc2V0IiwgIlJlY09mZnNldDMiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTbGlkZXJDb250cm9sIiwKICAgIElOUF9NaW5TY2FsZSA9IDAsCiAgICBJTlBfTWF4U2NhbGUgPSAxLAogICAgSU5QX0RlZmF1bHQgPSAwLjIsCiAgICBJTlBfTWluQWxsb3dlZCAgICAgPSAwLAogICAgSU5QX01heEFsbG93ZWQgICAgID0gMSwKICAgIElDX1Zpc2libGUgICAgICAgICA9IGZhbHNlLAogIH0pCgogIEluU3BlY3RydW1ab29tMyA9IHNlbGY6QWRkSW5wdXQoIlpvb20iLCAiU3BlY3RydW1ab29tMyIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIlNjcmV3Q29udHJvbCIsCiAgICBJTlBfRGVmYXVsdCA9IDEsCiAgICBJTlBfTWF4U2NhbGUgPSAyLAogICAgSU5QX01pblNjYWxlID0gMSwKICAgIElOUF9NYXhBbGxvd2VkID0gMiwKICAgIElOUF9NaW5BbGxvd2VkID0gMSwKICAgIElDX1Zpc2libGUgID0gZmFsc2UsCiAgfSkKCiAgSW5FbG9uZ2F0aW9uQW1wbGlmeTMgPSBzZWxmOkFkZElucHV0KCJBbXBsaWZ5IiwgIkVsb25nYXRpb25BbXBsaWZ5MyIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIlNsaWRlckNvbnRyb2wiLAogICAgSU5QX01pblNjYWxlID0gMCwKICAgIElOUF9NYXhTY2FsZSA9IDMsCiAgICBJTlBfRGVmYXVsdCA9IDEsCiAgICBJTlBfTWluQWxsb3dlZCAgICAgPSAwLAogICAgLS1JTlBfTWF4QWxsb3dlZCAgICAgPSAyLAogICAgSUNfVmlzaWJsZSAgPSBmYWxzZSwKICB9KQoKICBJbkVsb25nYXRpb25PZmZzZXQzID0gc2VsZjpBZGRJbnB1dCgiT2Zmc2V0IiwgIkVsb25nYXRpb25PZmZzZXQzIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiU2NyZXdDb250cm9sIiwKICAgIElOUF9EZWZhdWx0ID0gMCwKICAgIElOUF9NYXhTY2FsZSA9IDUsCiAgICBJTlBfTWluU2NhbGUgPSAtNSwKICAgIElOUF9NYXhBbGxvd2VkID0gMTAsCiAgICBJTlBfTWluQWxsb3dlZCA9IC0xMCwKICAgIElDX1Zpc2libGUgID0gZmFsc2UsCiAgfSkKCiAgSW5FbG9uZ2F0aW9uT3BlcmF0aW9uMyA9IHNlbGY6QWRkSW5wdXQoIk9wZXJhdG9yIiwgIkVsb25nYXRpb25PcGVyYXRvcjMiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJDb21ib0NvbnRyb2wiLAogICAgSU5QX0RlZmF1bHQgPSAwLjAsCiAgICBJTlBfSW50ZWdlciA9IHRydWUsCiAgICBJQ0RfV2lkdGggPSAxLAogICAgeyBDQ1NfQWRkU3RyaW5nID0gIk1heCIsIH0sCiAgICB7IENDU19BZGRTdHJpbmcgPSAiQXZlcmFnZSIsIH0sCiAgICB7IENDU19BZGRTdHJpbmcgPSAiTWVkaWFuIiwgfSwKICAgIENDX0xhYmVsUG9zaXRpb24gPSAiSG9yaXpvbnRhbCIsCiAgICBJQ19WaXNpYmxlICAgICAgICAgPSBmYWxzZSwKICB9KQogIC0tUGFyYW1ldGVyc2V0cyBlbmQKCiAgSW5IaWRlU2VsZWN0aW9uVG9vbDIgPSBzZWxmOkFkZElucHV0KCJIaWRlIFNlbGVjdGlvbiBUb29sIiwgIkhpZGVTZWxlY3Rpb25Ub29sMiIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sICAgPSAiQ2hlY2tib3hDb250cm9sIiwKICAgIElOUF9Eb05vdGlmeUNoYW5nZWQgID0gdHJ1ZSwKICAgIElOUF9EZWZhdWx0ICAgICAgICAgID0gMCwKICAgIElDX1Zpc2libGUgICAgICAgICAgID0gZmFsc2UsCiAgfSkKCgotLSBMYXlvdXQgLS0Kc2VsZjpBZGRDb250cm9sUGFnZSgiRWxvbmdhdGlvbiIpCgogIERpc3BsYXlOb3RlID0gc2VsZjpBZGRJbnB1dCgiTm90IGF2YWlsYWJsZSAtIEVsb25nYXRpb24gb2ZmIiwgIk5vdGUiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiVGV4dCIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiTGFiZWxDb250cm9sIiwKICAgIElOUF9FeHRlcm5hbCA9IGZhbHNlLAogICAgSU5QX1Bhc3NpdmUgPSB0cnVlLAogICAgSUNEX1dpZHRoID0gMSwKICB9KQoKICBJbkh5c3RlcmVzZSA9IHNlbGY6QWRkSW5wdXQoIkh5c3RlcmVzZSIsICJIeXN0ZXJlc2UiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJDaGVja2JveENvbnRyb2wiLAogICAgSU5QX0RvTm90aWZ5Q2hhbmdlZCA9IHRydWUsCiAgICBJQ19WaXNpYmxlICAgICAgICAgID0gdHJ1ZSwKICAgIElOUF9EZWZhdWx0ICAgICAgICAgPSAwLAogICAgSU5QX0V4dGVybmFsICAgICAgICA9IGZhbHNlLAogICAgSU5QX0Rpc2FibGVkICAgICAgICA9IHRydWUsICAtLSBwcmV2ZW50IHVzZXIgZnJvbSBkcmFnZ2luZyBwcmV2aWV3IGNvbnRyb2wgLSBvbmx5IGlmIEVsb25nYXRpb24gaXMgYWN0aXYKICB9KQoKICBJblN3aXRjaE9uID0gc2VsZjpBZGRJbnB1dCgiU3dpdGNoLU9uIFZhbHVlIiwgIlN3aXRjaE9uIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiU2NyZXdDb250cm9sIiwKICAgIElOUF9EZWZhdWx0ID0gMSwKICAgIElOUF9NYXhTY2FsZSA9IDUsCiAgICBJTlBfTWluU2NhbGUgPSAtNSwKICAgIElOUF9NYXhBbGxvd2VkID0gMzYwLAogICAgSU5QX01pbkFsbG93ZWQgPSAtMzYwLAogICAgLS1JTlBfSW50ZWdlciA9IHRydWUsCiAgfSkKCiAgSW5Td2l0Y2hPZmYgPSBzZWxmOkFkZElucHV0KCJTd2l0Y2gtT2ZmIFZhbHVlIiwgIlN3aXRjaE9mZiIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIlNjcmV3Q29udHJvbCIsCiAgICBJTlBfRGVmYXVsdCA9IDAsCiAgICBJTlBfTWF4U2NhbGUgPSA1LAogICAgSU5QX01pblNjYWxlID0gLTUsCiAgICBJTlBfTWF4QWxsb3dlZCA9IDM2MCwKICAgIElOUF9NaW5BbGxvd2VkID0gLTM2MCwKICAgIC0tSU5QX0ludGVnZXIgPSB0cnVlLAogIH0pCgogIEluRWxvbmdhdGlvbkRpc3BsYXkgPSBzZWxmOkFkZElucHV0KCJFbG9uZ2F0aW9uIiwgIkRpc3BsYXlFbG9uIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIlRleHQiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIkxhYmVsQ29udHJvbCIsCiAgICBJTlBfRXh0ZXJuYWwgPSBmYWxzZSwKICAgIElOUF9QYXNzaXZlID0gdHJ1ZSwKICAgIElDRF9XaWR0aCA9IDEsCiAgfSkKCiAgSW5Td2l0Y2hPblRociA9IHNlbGY6QWRkSW5wdXQoIlN3aXRjaC1PbiBUaHJlc2hvbGQiLCAiU3dpdGNoT25UaHIiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTbGlkZXJDb250cm9sIiwKICAgIElOUF9EZWZhdWx0ID0gMC41LAogICAgSU5QX01heFNjYWxlID0gNSwKICAgIElOUF9NaW5TY2FsZSA9IDAsCiAgICBJTlBfTWF4QWxsb3dlZCA9IDEwLAogICAgSU5QX01pbkFsbG93ZWQgPSAwLAogICAgLS1JTlBfSW50ZWdlciA9IHRydWUsCiAgfSkKCiAgSW5Td2l0Y2hPZmZUaHIgPSBzZWxmOkFkZElucHV0KCJTd2l0Y2gtT2ZmIFRocmVzaG9sZCIsICJTd2l0Y2hPZmZUaHIiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJTbGlkZXJDb250cm9sIiwKICAgIElOUF9EZWZhdWx0ID0gMC4zLAogICAgSU5QX01heFNjYWxlID0gNSwKICAgIElOUF9NaW5TY2FsZSA9IDAsCiAgICBJTlBfTWF4QWxsb3dlZCA9IDEwLAogICAgSU5QX01pbkFsbG93ZWQgPSAwLAogICAgLS1JTlBfSW50ZWdlciA9IHRydWUsCiAgfSkKCiAgRGlzcGxheU1pbk1heCA9IHNlbGY6QWRkSW5wdXQoIk1pbk1heCIsICJNaW5NYXgiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiVGV4dCIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiTGFiZWxDb250cm9sIiwKICAgIElOUF9FeHRlcm5hbCA9IGZhbHNlLAogICAgSU5QX1Bhc3NpdmUgPSB0cnVlLAogICAgSUNEX1dpZHRoID0gMSwKICB9KQoKICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLS0gRm9yIFRleHRTY3JlZW4KICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgSW5Gb250ID0gc2VsZjpBZGRJbnB1dCgiRm9udCIsICJGb250IiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIlRleHQiLAogICAgSU5QSURfSW5wdXRDb250cm9sID0gIkZvbnRGaWxlQ29udHJvbCIsCiAgICBJQ19Db250cm9sR3JvdXAgPSAyLAogICAgSUNfQ29udHJvbElEID0gMCwKICAgIElOUF9MZXZlbCA9IDEsCiAgICBJTlBfRG9Ob3RpZnlDaGFuZ2VkID0gdHJ1ZSwKICAgIElDX1Zpc2libGUgICAgICAgICA9IGZhbHNlLAogIH0pCgogIEluRm9udFN0eWxlID0gc2VsZjpBZGRJbnB1dCgiU3R5bGUiLCAiU3R5bGUiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiVGV4dCIsCiAgICBJTlBJRF9JbnB1dENvbnRyb2wgPSAiRm9udEZpbGVDb250cm9sIiwKICAgIElDX0NvbnRyb2xHcm91cCA9IDIsCiAgICBJQ19Db250cm9sSUQgPSAxLAogICAgSU5QX0xldmVsID0gMSwKICAgIElOUF9Eb05vdGlmeUNoYW5nZWQgPSB0cnVlLAogICAgSUNfVmlzaWJsZSAgICAgICAgID0gZmFsc2UsCiAgfSkKCiAgSW5Qb3NpdGlvbiA9IHNlbGY6QWRkSW5wdXQoIlBvc2l0aW9uIiwgIlBvc2l0aW9uIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIlBvaW50IiwKICAgIElOUElEX0lucHV0Q29udHJvbCA9ICJPZmZzZXRDb250cm9sIiwKICAgIElOUElEX1ByZXZpZXdDb250cm9sID0gIkNyb3NzaGFpckNvbnRyb2wiLAogICAgSU5QX0RvTm90aWZ5Q2hhbmdlZCA9IHRydWUsCiAgICBJQ19WaXNpYmxlICAgICAgICAgPSBmYWxzZSwKICB9KQoKCiAgLS0gSW4vT3V0IC0tCiAgSW5DaGFubmVsMCA9IHNlbGY6QWRkSW5wdXQoImlDaGFubmVsMCIsICJpQ2hhbm5lbDAiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiSW1hZ2UiLAogICAgTElOS19NYWluID0gMSwKICAgIElOUF9SZXF1aXJlZCA9IGZhbHNlCiAgfSkKCiAgT3V0SW1hZ2UgPSBzZWxmOkFkZE91dHB1dCgiT3V0cHV0IiwgIk91dHB1dCIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJJbWFnZSIsCiAgICBMSU5LX01haW4gPSAxLAogICAgLS1JTlBfUmVxdWlyZWQgPSBmYWxzZQogIH0pCgogIC0tQWRkaXRpb25hbCBPdXRwdXQgZm9yIFNoYWRlcnRveQogIE91dEltYWdlMiA9IHNlbGY6QWRkT3V0cHV0KCJPdXRwdXQyIiwgIk91dHB1dDIiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiSW1hZ2UiLAogICAgTElOS19NYWluID0gMiwKICAgIC0tSU5QX1JlcXVpcmVkID0gZmFsc2UKICB9KQoKICBPdXRFbG9uZ2F0aW9uID0gc2VsZjpBZGRPdXRwdXQoIkVsb25nYXRpb24iLCAiRWxvbmdhdGlvbiIsIHsKICAgIExJTktJRF9EYXRhVHlwZSA9ICJOdW1iZXIiLAogIH0pCiAgT3V0RWxvbmdhdGlvbjIgPSBzZWxmOkFkZE91dHB1dCgiRWxvbmdhdGlvbjIiLCAiRWxvbmdhdGlvbjIiLCB7CiAgICBMSU5LSURfRGF0YVR5cGUgPSAiTnVtYmVyIiwKICB9KQogIE91dEVsb25nYXRpb24zID0gc2VsZjpBZGRPdXRwdXQoIkVsb25nYXRpb24zIiwgIkVsb25nYXRpb24zIiwgewogICAgTElOS0lEX0RhdGFUeXBlID0gIk51bWJlciIsCiAgfSkKCmVuZAoKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQotLSAgICAgICBOb3RpZnlDaGFuZ2VkCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KRWxvbiA9IDAKZnVuY3Rpb24gTm90aWZ5Q2hhbmdlZChpbnAsIHBhcmFtLCB0aW1lKQoKICBpZiBpbnAgfj0gbmlsIGFuZCBwYXJhbSB+PSBuaWwgdGhlbgogICAgaWYgaW5wID09IEluRmlsZSB0aGVuCiAgICAgIGxvY2FsIGZpbGVkYXRhID0gcmVhZEFsbChwYXJhbS5WYWx1ZSkKICAgICAgaWYgbm90IGZpbGVkYXRhIHRoZW4KICAgICAgICByZXR1cm4KICAgICAgZWxzZQogICAgICAgIGxvY2FsIGhlYWRlciA9IGdldEhlYWRlcihmaWxlZGF0YSwgMTA0KQogICAgICAgIGlmIGhlYWRlclsxM10gPT0gIjc0IiB0aGVuCiAgICAgICAgICB0ZW1wX2NoYW5uZWwgPSBoZWFkZXJbNTldICAgICAgICAgICAgICAgIC0tIEp1bmstRm9ybWF0CiAgICAgICAgZWxzZQogICAgICAgICAgdGVtcF9jaGFubmVsID0gaGVhZGVyWzIzXSAgICAgICAgICAgICAgICAtLSBXYXZlIEZvcm1hdAogICAgICAgIGVuZAogICAgICAgIHNhbXBsZWRhdGFmaWx0ZXIgPSBuaWwgLS0gRmlsdGVyIGRhdGEgY2xlYXIKICAgICAgICBpZiB0ZW1wX2NoYW5uZWwgPT0gIjIiIHRoZW4KICAgICAgICAgIEluQ2hhbm5lbHM6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgICBlbHNlCiAgICAgICAgICBJbkNoYW5uZWxzOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIGVuZAogICAgICBlbmQKICAgIGVuZAoKICAgIGlmIGlucCA9PSBJbkVxdWlDdXRzIHRoZW4KICAgICAgaWYgcGFyYW0uVmFsdWUgPT0gMSB0aGVuCiAgICAgICAgSW5TdGVwczpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICBlbHNlCiAgICAgICAgSW5TdGVwczpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgZW5kCiAgICBlbmQKCiAgICBpZiBpbnAgPT0gSW5MaW1pdCB0aGVuCiAgICAgIGlmIHBhcmFtLlZhbHVlID09IDEgdGhlbgogICAgICAgIEluTGltaXRUaHJlc2hvbGQ6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgICBJbkxpbWl0Q29tcHJlc3Npb246U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgZWxzZQogICAgICAgIEluTGltaXRUaHJlc2hvbGQ6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5MaW1pdENvbXByZXNzaW9uOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICBlbmQKICAgIGVuZAoKICAgIC0tIEVsb25nYXRpb24KICAgIGlmIGlucCA9PSBJbkVsb25nYXRpb25PbiB0aGVuCiAgICAgIGlmIHBhcmFtLlZhbHVlID09IDEgdGhlbgogICAgICAgIC0tIFNob3cgQ29udHJvbHMKICAgICAgICBJbkxhYmVsRWxvbmdhdGlvbjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIC0tSW5FbG9uZ2F0aW9uOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgICAgSW5SZWNXaWR0aDpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEluUmVjT2Zmc2V0OlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgICAgLS1JblNwZWN0cnVtWm9vbTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEluRWxvbmdhdGlvbk9wZXJhdGlvbjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEluRWxvbmdhdGlvbkFtcGxpZnk6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgICBJbkVsb25nYXRpb25PZmZzZXQ6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgICBJbkhpZGVTZWxlY3Rpb25Ub29sMjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEluRWxvblNlbGVjdGlvbjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEVsb24gPSAxCiAgICAgICAgLS1JbkVPbjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQoKICAgICAgICBJbkh5c3RlcmVzZTpTZXRBdHRycyh7SU5QX0Rpc2FibGVkID0gZmFsc2V9KQogICAgICAgIERpc3BsYXlOb3RlOlNldEF0dHJzKHtMSU5LU19OYW1lID0gIkVsb25nYXRpb24gU3BlY3RydW0iLExCTENfTGFiZWxDb2xvciA9IDMsfSkKCiAgICAgICAgSW5GcmVxdWVuY3lWaXN1YWxpemF0aW9uOlNldEF0dHJzKHtJTlBfRGlzYWJsZWQgPSB0cnVlfSkKICAgICAgZWxzZQogICAgICAgIC0tIEhpZGUgQ29udHJvbHMKICAgICAgICBJbkxhYmVsRWxvbmdhdGlvbjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICAtLUluRWxvbmdhdGlvbjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJblJlY1dpZHRoOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluUmVjT2Zmc2V0OlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluU3BlY3RydW1ab29tOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluRWxvbmdhdGlvbk9wZXJhdGlvbjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJbkVsb25nYXRpb25BbXBsaWZ5OlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluRWxvbmdhdGlvbk9mZnNldDpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKCiAgICAgICAgSW5SZWNXaWR0aDI6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5SZWNPZmZzZXQyOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluU3BlY3RydW1ab29tMjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJbkVsb25nYXRpb25PcGVyYXRpb24yOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluRWxvbmdhdGlvbkFtcGxpZnkyOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluRWxvbmdhdGlvbk9mZnNldDI6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCgogICAgICAgIEluUmVjV2lkdGgzOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluUmVjT2Zmc2V0MzpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJblNwZWN0cnVtWm9vbTM6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5FbG9uZ2F0aW9uT3BlcmF0aW9uMzpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJbkVsb25nYXRpb25BbXBsaWZ5MzpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJbkVsb25nYXRpb25PZmZzZXQzOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQoKICAgICAgICBJbkhpZGVTZWxlY3Rpb25Ub29sMjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJbkVsb25TZWxlY3Rpb246U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgRWxvbiA9IDAKICAgICAgICBJbkVPbjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJbkVPbjI6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5FT24zOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQoKICAgICAgICAtLVRvRG8KCiAgICAgICAgSW5IeXN0ZXJlc2U6U2V0U291cmNlKE51bWJlcigwKSx0aW1lKQogICAgICAgIEluSHlzdGVyZXNlOlNldEF0dHJzKHtJTlBfRGlzYWJsZWQgPSB0cnVlfSkKICAgICAgICBEaXNwbGF5Tm90ZTpTZXRBdHRycyh7TElOS1NfTmFtZSA9ICJOb3QgYXZhaWxhYmxlIC0gRWxvbmdhdGlvbiBvZmYiLExCTENfTGFiZWxDb2xvciA9IDIsfSkKCiAgICAgICAgSW5GcmVxdWVuY3lWaXN1YWxpemF0aW9uOlNldEF0dHJzKHtJTlBfRGlzYWJsZWQgPSBmYWxzZX0pCiAgICAgIGVuZAogICAgZW5kCgogICAgaWYgaW5wID09IEluRnJlcXVlbmN5VmlzdWFsaXphdGlvbiB0aGVuCiAgICAgIGlmIHBhcmFtLlZhbHVlID09IDEgdGhlbgogICAgICAgIEluRlZTY2FsZTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEluRlZTbW9vdGg6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgICBJbkZWQ0Q6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgICBJbkVsb25nYXRpb25PbjpTZXRBdHRycyh7SU5QX0Rpc2FibGVkID0gdHJ1ZX0pCiAgICAgICAgSW5GVk1lcmdlOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgICAgSW5Ca2dBbHBoYTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEluRlZBbHBoYTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICBlbHNlCiAgICAgICAgSW5GVlNjYWxlOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluRlZTbW9vdGg6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5GVkNEOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluRWxvbmdhdGlvbk9uOlNldEF0dHJzKHtJTlBfRGlzYWJsZWQgPSBmYWxzZX0pCiAgICAgICAgSW5GVk1lcmdlOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluQmtnQWxwaGE6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5GVkFscGhhOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICBlbmQKICAgIGVuZAoKICAgIGlmIGlucCA9PSBJblNwZWN0cnVtIHRoZW4KICAgICAgaWYgcGFyYW0uVmFsdWUgPT0gMSB0aGVuCiAgICAgICAgSW5GRlQ6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgICBJblNtb290aGZhY3RvcjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEluRWxvbmdhdGlvbk9uOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgICAgSW5GRlRTY2FsZTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEluTG9nSzpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEluQXBwZWFyYW5jZTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEluRXF1aUN1dHM6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgICBJbkxpbWl0OlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgICAgSW5EZWNvbXByZXNzOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCgogICAgICAgIGlmIChJbkRlY29tcHJlc3M6R2V0U291cmNlKHRpbWUpLlZhbHVlID09IDEpIHRoZW4KICAgICAgICAgICBJbkRDVGhyZXNob2xkOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgICAgICAgSW5EQ1NjYWxlOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgICAgICAgSW5EQ0hpZ2hMaW5lOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgICAgZWxzZQogICAgICAgICAgIEluRENUaHJlc2hvbGQ6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgICAgSW5EQ1NjYWxlOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgICAgIEluRENIaWdoTGluZTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBlbmQKCiAgICAgICAgSW5TbG9wZTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIGlmIChJblNsb3BlOkdldFNvdXJjZSh0aW1lKS5WYWx1ZSA9PSAxKSB0aGVuCiAgICAgICAgICAgSW5Db25lckZyZXE6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgICAgICBJblNsb3BlVmFsdWU6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgICBlbHNlCiAgICAgICAgICAgSW5Db25lckZyZXE6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgICAgSW5TbG9wZVZhbHVlOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIGVuZAoKCiAgICAgICAgSW5GcmVxdWVuY3lWaXN1YWxpemF0aW9uOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCi0tICAgICAgICBJbkZWTWVyZ2U6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKLS0gICAgICAgIEluQmtnQWxwaGE6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKLS0gICAgICAgIEluRlZBbHBoYTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIFNlcDI6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKCiAgICAgICAgLS0gU2V0IFN0YW5kYXJkdmFsdWVzIGZvciByZWFsIFNwZWN0cnVtCiAgICAgICAgSW5Qcm94eTpTZXRTb3VyY2UoTnVtYmVyKDEpLHRpbWUpCiAgICAgICAgSW5ab29tOlNldFNvdXJjZShOdW1iZXIoMSksdGltZSkKICAgICAgICBJblJlc29sdXRpb246U2V0U291cmNlKE51bWJlcigxKSx0aW1lKQoKICAgICAgICAtLSBoaWRlIEVsb25nYXRpb24gb2YgV2F2ZWZvcm0KICAgICAgICBJbkVsb25nYXRpb25XRk9uOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluRWxvbmdhdGlvbldGT246U2V0U291cmNlKE51bWJlcigwKSx0aW1lKQoKICAgICAgZWxzZQogICAgICAgIEluRkZUOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluU21vb3RoZmFjdG9yOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluRWxvbmdhdGlvbk9uOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluRkZUU2NhbGU6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5Mb2dLOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluQXBwZWFyYW5jZTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJbkVxdWlDdXRzOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluTGltaXQ6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5EZWNvbXByZXNzOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluRENUaHJlc2hvbGQ6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5EQ1NjYWxlOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluRENIaWdoTGluZTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJblNsb3BlOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluQ29uZXJGcmVxOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluU2xvcGVWYWx1ZTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKCiAgICAgICAgSW5GcmVxdWVuY3lWaXN1YWxpemF0aW9uOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluRnJlcXVlbmN5VmlzdWFsaXphdGlvbjpTZXRTb3VyY2UoTnVtYmVyKDApLHRpbWUpCi0tICAgICAgICBJbkZWTWVyZ2U6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCi0tICAgICAgICBJbkJrZ0FscGhhOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQotLSAgICAgICAgSW5GVkFscGhhOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIFNlcDI6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCgogICAgICAgIEluRXF1aUN1dHM6U2V0U291cmNlKE51bWJlcigwKSx0aW1lKQogICAgICAgIEluTGltaXQ6U2V0U291cmNlKE51bWJlcigwKSx0aW1lKQogICAgICAgIEluRWxvbmdhdGlvbk9uOlNldFNvdXJjZShOdW1iZXIoMCksdGltZSkKCiAgICAgICAgLS0gc2hvdyBFbG9uZ2F0aW9uIG9mIFdhdmVmb3JtCiAgICAgICAgSW5FbG9uZ2F0aW9uV0ZPbjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQoKICAgICAgICBJblNoYWRlcnRveUF1ZGlvOlNldFNvdXJjZShOdW1iZXIoMCksdGltZSkKCiAgICAgIGVuZAogICAgZW5kCgoKICAgIGlmIGlucCA9PSBJbkRlY29tcHJlc3MgdGhlbgogICAgICBpZiBwYXJhbS5WYWx1ZSA9PSAxIHRoZW4KICAgICAgICAgICBJbkRDVGhyZXNob2xkOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgICAgICAgSW5EQ1NjYWxlOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgICAgICAgSW5EQ0hpZ2hMaW5lOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgIGVsc2UKICAgICAgICAgICBJbkRDVGhyZXNob2xkOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgICAgIEluRENTY2FsZTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICAgICBJbkRDSGlnaExpbmU6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgIGVuZAogICAgZW5kCgogICAgaWYgaW5wID09IEluU2xvcGUgdGhlbgogICAgICBpZiBwYXJhbS5WYWx1ZSA9PSAxIHRoZW4KICAgICAgICBJbkNvbmVyRnJlcTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEluU2xvcGVWYWx1ZTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICBlbHNlCiAgICAgICAgSW5Db25lckZyZXE6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5TbG9wZVZhbHVlOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICBlbmQKICAgIGVuZAoKCiAgICBpZiBpbnAgPT0gSW5FbG9uU2VsZWN0aW9uIGFuZCBFbG9uID09IDEgdGhlbgogICAgICBpZiBwYXJhbS5WYWx1ZSA9PSAiRTEiIHRoZW4KICAgICAgICBJbkVPbjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEluUmVjV2lkdGg6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgICBJblJlY09mZnNldDpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIC0tSW5TcGVjdHJ1bVpvb206U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgICBJbkVsb25nYXRpb25BbXBsaWZ5OlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgICAgSW5FbG9uZ2F0aW9uT2Zmc2V0OlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgICAgSW5FbG9uZ2F0aW9uT3BlcmF0aW9uOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCgogICAgICAgIEluRU9uMjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJblJlY1dpZHRoMjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJblJlY09mZnNldDI6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5TcGVjdHJ1bVpvb20yOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluRWxvbmdhdGlvbkFtcGxpZnkyOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluRWxvbmdhdGlvbk9mZnNldDI6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5FbG9uZ2F0aW9uT3BlcmF0aW9uMjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKCiAgICAgICAgSW5FT24zOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluUmVjV2lkdGgzOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluUmVjT2Zmc2V0MzpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJblNwZWN0cnVtWm9vbTM6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5FbG9uZ2F0aW9uQW1wbGlmeTM6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5FbG9uZ2F0aW9uT2Zmc2V0MzpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJbkVsb25nYXRpb25PcGVyYXRpb24zOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQoKICAgICAgZWxzZWlmIHBhcmFtLlZhbHVlID09ICJFMiIgdGhlbgogICAgICAgIEluRU9uMjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEluUmVjV2lkdGgyOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgICAgSW5SZWNPZmZzZXQyOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgICAgLS1JblNwZWN0cnVtWm9vbTI6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgICBJbkVsb25nYXRpb25BbXBsaWZ5MjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEluRWxvbmdhdGlvbk9mZnNldDI6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgICBJbkVsb25nYXRpb25PcGVyYXRpb24yOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCgogICAgICAgIEluRU9uOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluUmVjV2lkdGg6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5SZWNPZmZzZXQ6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5TcGVjdHJ1bVpvb206U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5FbG9uZ2F0aW9uQW1wbGlmeTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJbkVsb25nYXRpb25PZmZzZXQ6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5FbG9uZ2F0aW9uT3BlcmF0aW9uOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQoKICAgICAgICBJbkVPbjM6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5SZWNXaWR0aDM6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5SZWNPZmZzZXQzOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluU3BlY3RydW1ab29tMzpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJbkVsb25nYXRpb25BbXBsaWZ5MzpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJbkVsb25nYXRpb25PZmZzZXQzOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluRWxvbmdhdGlvbk9wZXJhdGlvbjM6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCgogICAgICBlbHNlIC0tIEUzCiAgICAgICAgSW5FT24zOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgICAgSW5SZWNXaWR0aDM6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgICBJblJlY09mZnNldDM6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgICAtLUluU3BlY3RydW1ab29tMzpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEluRWxvbmdhdGlvbkFtcGxpZnkzOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgICAgSW5FbG9uZ2F0aW9uT2Zmc2V0MzpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEluRWxvbmdhdGlvbk9wZXJhdGlvbjM6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKCiAgICAgICAgSW5FT246U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5SZWNXaWR0aDpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJblJlY09mZnNldDpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJblNwZWN0cnVtWm9vbTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJbkVsb25nYXRpb25BbXBsaWZ5OlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluRWxvbmdhdGlvbk9mZnNldDpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJbkVsb25nYXRpb25PcGVyYXRpb246U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCgogICAgICAgIEluRU9uMjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJbkVPbjI6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5SZWNXaWR0aDI6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5SZWNPZmZzZXQyOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluU3BlY3RydW1ab29tMjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJbkVsb25nYXRpb25BbXBsaWZ5MjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBJbkVsb25nYXRpb25PZmZzZXQyOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICAgIEluRWxvbmdhdGlvbk9wZXJhdGlvbjI6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgIGVuZAogICAgZW5kCgogICAgLS0gRWxvbmdhdGlvbiBXYXZlZm9ybQogICAgaWYgaW5wID09IEluRWxvbmdhdGlvbldGT24gdGhlbgogICAgICBpZiBwYXJhbS5WYWx1ZSA9PSAxIHRoZW4KICAgICAgICAtLSBTaG93IENvbnRyb2xzCiAgICAgICAgSW5MYWJlbEVsb25nYXRpb25XRjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQoKICAgICAgICBJbkVsb25nYXRpb25XRkFtcGxpZnk6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSB0cnVlfSkKICAgICAgICBJbkVsb25nYXRpb25XRk9wZXJhdGlvbjpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIEluRWxvbmdhdGlvbldGT2Zmc2V0OlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCiAgICAgICAgSW5IaWRlU2VsZWN0aW9uVG9vbDpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQoKICAgICAgICBJbkh5c3RlcmVzZTpTZXRBdHRycyh7SU5QX0Rpc2FibGVkID0gZmFsc2V9KQogICAgICAgIERpc3BsYXlOb3RlOlNldEF0dHJzKHtMSU5LU19OYW1lID0gIkVsb25nYXRpb24gV2F2ZWZvcm0iLExCTENfTGFiZWxDb2xvciA9IDUsfSkKICAgICAgZWxzZQogICAgICAgIC0tIEhpZGUKICAgICAgICBJbkxhYmVsRWxvbmdhdGlvbldGOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQoKICAgICAgICBJbkVsb25nYXRpb25XRkFtcGxpZnk6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5FbG9uZ2F0aW9uV0ZPcGVyYXRpb246U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5FbG9uZ2F0aW9uV0ZPZmZzZXQ6U2V0QXR0cnMoe0lDX1Zpc2libGUgPSBmYWxzZX0pCiAgICAgICAgSW5IaWRlU2VsZWN0aW9uVG9vbDpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKCiAgICAgICAgSW5IeXN0ZXJlc2U6U2V0U291cmNlKE51bWJlcigwKSx0aW1lKQogICAgICAgIEluSHlzdGVyZXNlOlNldEF0dHJzKHtJTlBfRGlzYWJsZWQgPSB0cnVlfSkKICAgICAgICBEaXNwbGF5Tm90ZTpTZXRBdHRycyh7TElOS1NfTmFtZSA9ICJOb3QgYXZhaWxhYmxlIC0gRWxvbmdhdGlvbiBvZmYiLExCTENfTGFiZWxDb2xvciA9IDIsfSkKICAgICAgZW5kCiAgICBlbmQKCiAgICAtLSBTdGVhZHkgV2F2ZWZvcm0KICAgIGlmIGlucCA9PSBJblN0ZWFkeVdhdmUgdGhlbgogICAgICBpZiBwYXJhbS5WYWx1ZSA9PSAxIHRoZW4KICAgICAgICAtLSBTaG93IENvbnRyb2xzCiAgICAgICAgSW5GcmFtZUNvdW50OlNldEF0dHJzKHtJQ19WaXNpYmxlID0gdHJ1ZX0pCgogICAgICAgIC0tRGlzYWJsZSBvciBzZXQgSW5wdXRzCiAgICAgICAgSW5Qcm94eTpTZXRTb3VyY2UoTnVtYmVyKDEpLHRpbWUpCiAgICAgICAgSW5Qcm94eTpTZXRBdHRycyh7SU5QX0Rpc2FibGVkID0gdHJ1ZX0pCiAgICAgICAgSW5ab29tOlNldFNvdXJjZShOdW1iZXIoMSksdGltZSkKICAgICAgICBJblpvb206U2V0QXR0cnMoe0lOUF9EaXNhYmxlZCA9IHRydWV9KQogICAgICAgIEluUmVzb2x1dGlvbjpTZXRTb3VyY2UoTnVtYmVyKDEpLHRpbWUpCiAgICAgICAgSW5SZXNvbHV0aW9uOlNldEF0dHJzKHtJTlBfRGlzYWJsZWQgPSB0cnVlfSkKCiAgICAgICAgLS0gSW5BbXBsaXR1ZGVTY2FsZTpTZXRBdHRycyh7SU5QX0Rpc2FibGVkID0gdHJ1ZX0pCiAgICAgICAgSW5FbnZlbG9wZVNlbDpTZXRBdHRycyh7SU5QX0Rpc2FibGVkID0gdHJ1ZX0pCgogICAgICBlbHNlCiAgICAgICAgLS0gSGlkZQogICAgICAgIEluRnJhbWVDb3VudDpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKCiAgICAgICAgLS1lbmFibGUgSW5wdXRzCiAgICAgICAgSW5Qcm94eTpTZXRBdHRycyh7SU5QX0Rpc2FibGVkID0gZmFsc2V9KQogICAgICAgIEluWm9vbTpTZXRBdHRycyh7SU5QX0Rpc2FibGVkID0gZmFsc2V9KQogICAgICAgIEluUmVzb2x1dGlvbjpTZXRBdHRycyh7SU5QX0Rpc2FibGVkID0gZmFsc2V9KQoKICAgICAgICAtLSBJbkFtcGxpdHVkZVNjYWxlOlNldEF0dHJzKHtJTlBfRGlzYWJsZWQgPSBmYWxzZX0pCiAgICAgICAgSW5FbnZlbG9wZVNlbDpTZXRBdHRycyh7SU5QX0Rpc2FibGVkID0gZmFsc2V9KQogICAgICBlbmQKICAgIGVuZAoKICAgIGlmIGlucCA9PSBHZW5lcmF0ZUJ1ZmZlciB0aGVuCiAgICAgIGlmIChwYXJhbS5WYWx1ZSA9PSAxKSB0aGVuCiAgICAgICAgLS0gR2VuZXJhdGUgQnVmZmVyCiAgICAgICAgLS10YWJsZS5pbnNlcnQoRkZUX0J1ZmZlciwgMCkKICAgICAgICAtLXRhYmxlLmluc2VydChGRlRfQnVmZmVyWzFdLCAwLjk3ODIpCiAgICAgICAgRkZUX0J1ZmZlclswXSA9ICAwLjk3ODIKICAgICAgICByZUNhbGNGb290YWdlID0gdHJ1ZQogICAgICBlbmQKICAgIGVuZAoKICAgIGlmIGlucCA9PSBJbkZpbHRlcnNPRkYgdGhlbgogICAgICBpZiBwYXJhbS5WYWx1ZSA9PSAiTm9GaWx0ZXIiIHRoZW4KICAgICAgICBJbkZpbHRlcnM6U2V0U291cmNlKFRleHQoIk5vRmlsdGVyIiksdGltZSkKICAgICAgZW5kCiAgICBlbmQKICAgIGlmIGlucCA9PSBJbkZpbHRlcnMgdGhlbgogICAgICBpZiBwYXJhbS5WYWx1ZSA9PSAiTFAiIG9yIHBhcmFtLlZhbHVlID09ICJCUCIgb3IgcGFyYW0uVmFsdWUgPT0gIkhQIiB0aGVuCiAgICAgICAgSW5GaWx0ZXJzT0ZGOlNldFNvdXJjZShUZXh0KCJGaWx0ZXIiKSx0aW1lKQogICAgICBlbmQKICAgIGVuZAoKCiAgICBpZiBpbnAgPT0gSW5TaGFkZXJ0b3lBdWRpbyB0aGVuCiAgICAgIGlmIHBhcmFtLlZhbHVlID09IDEgdGhlbgogICAgICAgIEluU3BlY3RydW06U2V0U291cmNlKE51bWJlcigxKSx0aW1lKQogICAgICAgIEluU21vb3RoZmFjdG9yOlNldFNvdXJjZShOdW1iZXIoNyksdGltZSkKICAgICAgICBJbkxvZ0s6U2V0U291cmNlKE51bWJlcigxKSx0aW1lKQogICAgICAgIEluU2hhZGVyQXVkaW9TY2FsZTpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICBlbHNlCiAgICAgICAgSW5TaGFkZXJBdWRpb1NjYWxlOlNldEF0dHJzKHtJQ19WaXNpYmxlID0gZmFsc2V9KQogICAgICBlbmQKICAgIGVuZAoKCgogICAgaWYgKExvZ29fT24pIHRoZW4KICAgICAgaWYgaW5wID09IEluTG9nb1N3IHRoZW4KICAgICAgICBpZiBwYXJhbS5WYWx1ZSA9PSAxIHRoZW4KICAgICAgICAgIEluTG9nbzpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IHRydWV9KQogICAgICAgIGVsc2UKICAgICAgICAgIEluTG9nbzpTZXRBdHRycyh7SUNfVmlzaWJsZSA9IGZhbHNlfSkKICAgICAgICBlbmQKICAgICAgZW5kCiAgICBlbmQKICBlbmQKCiAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIEZPTlQgU1RZTEUgLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgaWYgaW5wID09IEluRm9udCB0aGVuCiAgICBsb2NhbCBmID0gcGFyYW0uVmFsdWUKCiAgICBpZiBmID09IG5pbCBvciBzdHJpbmcubGVuKGYpID09IDAgdGhlbgogICAgICBJbkZvbnQ6U2V0U291cmNlKFRleHQoIk9wZW4gU2FucyIpLCB0aW1lKQogICAgZW5kCiAgZWxzZWlmIGlucCA9PSBJbkZvbnRTdHlsZSB0aGVuCiAgICBsb2NhbCBmID0gcGFyYW0uVmFsdWUKCiAgICBpZiBmID09IG5pbCBvciBzdHJpbmcubGVuKGYpID09IDAgdGhlbgogICAgICBJbkZvbnRTdHlsZTpTZXRTb3VyY2UoVGV4dCgiUmVndWxhciIpLCB0aW1lKQogICAgZW5kCiAgZW5kCmVuZAoKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQotLSAgICAgICBQcmVDYWxjUHJvY2VzcwotLSBJZiBub3QgaW1wbGVtZW50ZWQsIG9ubHkgdGhlIG1haW4gb3V0cHV0IHdpbGwgYmUgaGFuZGxlZCwKLS0gd2hpY2ggd291bGQgY2F1c2UgdG9vbHMgY29ubmVjdGVkIHRvIHRoZSBFbG9uZ2F0aW9uIG91dHB1dCB0byBmYWlsCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KZnVuY3Rpb24gUHJlQ2FsY1Byb2Nlc3MocmVxKQogIC0tIEF0dHJpYnV0ZXMgZm9yIG5ldyBpbWFnZXMKICBsb2NhbCBpbWdhdHRycyA9IHsKICAgIElNR19Eb2N1bWVudCA9IHNlbGYuQ29tcCwKICAgIHsgSU1HX0NoYW5uZWwgPSAiUmVkIiwgfSwKICAgIHsgSU1HX0NoYW5uZWwgPSAiR3JlZW4iLCB9LAogICAgeyBJTUdfQ2hhbm5lbCA9ICJCbHVlIiwgfSwKICAgIHsgSU1HX0NoYW5uZWwgPSAiQWxwaGEiLCB9LAogICAgSU1HX1dpZHRoID0gV2lkdGgsCiAgICBJTUdfSGVpZ2h0ID0gSGVpZ2h0LAogICAgSU1HX1hTY2FsZSA9IFhBc3BlY3QsCiAgICBJTUdfWVNjYWxlID0gWUFzcGVjdCwKICAgIElNQVRfT3JpZ2luYWxXaWR0aCA9IHJlYWx3aWR0aCwKICAgIElNQVRfT3JpZ2luYWxIZWlnaHQgPSByZWFsaGVpZ2h0LAogICAgSU1HX1F1YWxpdHkgPSBub3QgcmVxOklzUXVpY2soKSwKICAgIElNR19Nb3Rpb25CbHVyUXVhbGl0eSA9IG5vdCByZXE6SXNOb01vdGlvbkJsdXIoKSwKICB9CgogIC0tIEluaXRpYWxpemUgdGhlIGltYWdlcwogIGxvY2FsIGltZyA9IEltYWdlKGltZ2F0dHJzKQoKICBQcm9jZXNzKHJlcSkKCi0tSW5FbG9uZ2F0aW9uQW1wbGlmeTpTZXRTb3VyY2UoTnVtYmVyKDApLHJlcS50aW1lLDApCgogIC0tIFRoZSBhdHRlbXB0IHRvIHRyYW5zZmVyIGRhdGEgdG8gb3RoZXIgZnVzZXMgdmlhIGFuIGlucHV0IC0gdW5mb3J0dW5hdGVseSBubyBjYWxjdWxhdGlvbiBpZiBBV1cgaXMgbm90IGFjdGl2ZSBhbmQgbm8gdGltZS1kaXNjcmV0ZSB2YWx1ZXMgKG5vIEdldFZhbHVlKSAtPiBmYWlsZWQKICBJbkVsb25nYXRpb246U2V0QXR0cnMoe0lOUF9EaXNhYmxlZCA9IGZhbHNlfSkgICAgICAgICAgIC0tIGxldCBpbiBhbnl3YXkgOi0pCiAgSW5FbG9uZ2F0aW9uOlNldFNvdXJjZShOdW1iZXIoZWxvbmdhdGlvbikscmVxLlRpbWUsMCkKICBJbkVsb25nYXRpb246U2V0QXR0cnMoe0lOUF9EaXNhYmxlZCA9IHRydWV9KQoKICAtLSBzZXQgYXV4aWxsaWFyeSBvdXRwdXQgZmlyc3QKICBpZiBJbkVPbjpHZXRWYWx1ZShyZXEpLlZhbHVlID09IDEgdGhlbgogICAgT3V0RWxvbmdhdGlvbjpTZXQocmVxLCBlbG9uZ2F0aW9uKQogIGVuZAogIGlmIEluRU9uMjpHZXRWYWx1ZShyZXEpLlZhbHVlID09IDEgdGhlbgogICAgT3V0RWxvbmdhdGlvbjI6U2V0KHJlcSwgZWxvbmdhdGlvbjIpCiAgZW5kCiAgaWYgSW5FT24zOkdldFZhbHVlKHJlcSkuVmFsdWUgPT0gMSB0aGVuCiAgICBPdXRFbG9uZ2F0aW9uMzpTZXQocmVxLCBlbG9uZ2F0aW9uMykKICBlbmQKCiAgLS0gb3V0cHV0IGltYWdlIHdpdGggbm8gZGF0YQogIGxvY2FsIG91dCA9IEltYWdlKHtJTUdfTGlrZSA9IGltZywgSU1HX05vRGF0YSA9IHRydWV9KQogIE91dEltYWdlOlNldChyZXEsIG91dCkKICBPdXRJbWFnZTI6U2V0KHJlcSwgb3V0KQoKZW5kCgoKLS1bWy0tCmZ1bmN0aW9uIE9uQ29ubmVjdGVkKGxpbmssIG9sZCwgbmV3KQogICBpZiBsaW5rID09IEluQ2hhbm5lbDAgdGhlbgogICAgICAgcHJpbnQoInBvb3AiLCBvbGQsIG5ldykKICAgZW5kCmVuZAotLV1dLS0KCi0tIEZvciBnZW5lcmF0aW5nIEZGVCBCdWZmZXIgdGhlIFVzZXIgaXMgaW5mb3JtZWQgdG8gd2FpdApOb3RlV2luZG93ID0gWz1bCnVpID0gZnUuVUlNYW5hZ2VyCmRpc3AgPSBibWQuVUlEaXNwYXRjaGVyKHVpKQpkaXNwbWFpbiA9IGJtZC5VSURpc3BhdGNoZXIodWkpCgptc2dib3ggPSBkaXNwOkFkZFdpbmRvdygKICB7CiAgICBJRCA9ICJOb3RlIiwKICAgIFdpbmRvd1RpdGxlID0gIldvcmtpbmcuLi4iLAogICAgR2VvbWV0cnkgPSB7IDIwMCwxNTAsNDAwLDEwMCB9LAogICAgQ29tcG9zaXRpb24gPSBjb21wLAogICAgdWk6Vkdyb3VwCiAgICB7CiAgICAgIElEID0gInJvb3QiLAogICAgICB1aTpIR3JvdXAKICAgICAgewogICAgICAgIFdlaWdodCA9IDEsCiAgICAgICAgdWk6TGFiZWx7IElEPSJNZXNzYWdlIiwgVGV4dCA9ICIiLCBBbGlnbm1lbnQgPSB7IEFsaWduSENlbnRlciA9IHRydWUsIEFsaWduVG9wID0gdHJ1ZSB9IH0KICAgICAgfSwKICAgICAgdWk6SEdyb3VwCiAgICAgIHsKICAgICAgICBXZWlnaHQgPSAwLAogICAgICAgIHVpOkJ1dHRvbnsgSUQgPSAiQ2xvc2UiLCBUZXh0ID0gIk9rYXkiIH0sCiAgICAgIH0sCiAgICB9LAogIH0pCm1zZ2JveGl0bSA9IG1zZ2JveDpHZXRJdGVtcygpCmZ1bmN0aW9uIG1zZ2JveC5Pbi5DbG9zZS5DbGlja2VkKGV2KQogIGRpc3A6RXhpdExvb3AoKQplbmQKZnVuY3Rpb24gbXNnYm94Lk9uLk5vdGUuQ2xvc2UoZXYpCiAgZGlzcDpFeGl0TG9vcCgpCmVuZAoKZnVuY3Rpb24gc2hvd01lc3NhZ2Uoc3RyKQogIG1zZ2JveGl0bS5NZXNzYWdlLlRleHQgPSBzdHIKICBtc2dib3g6U2hvdygpCiAgZGlzcDpSdW5Mb29wKCkKICBtc2dib3g6SGlkZSgpCmVuZAoKc2hvd01lc3NhZ2UoIlBsZWFzZSBiZSBwYXRpZW50IC1cbiAgU3VjY2Vzc2Z1bCBjcmVhdGlvbiBpcyBzaG93biBpbiB0aGUgdG9vbCBpbnNwZWN0b3IiKQpdPV0KCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi0tICAgICAgIEZ1bmN0aW9ucwotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi0tIEdldCB0aGUgYmFzZSBmaWxlbmFtZSBmcm9tIGEgZmlsZXBhdGgKZnVuY3Rpb24gR2V0RmlsZW5hbWUobWVkaWFEaXJOYW1lKQogICAgbG9jYWwgcGF0aCwgYmFzZW5hbWUgPSBzdHJpbmcubWF0Y2gobWVkaWFEaXJOYW1lLCAiXiguK1svXFxdKSguKykiKQogICAgcmV0dXJuIGJhc2VuYW1lCmVuZAoKLS0gZnVuY3Rpb24gZm9yIHJlYWRpbmcgaW4gYSBiaW5hcnkgZmlsZQpmdW5jdGlvbiByZWFkQWxsKGZpbGUpCgogIGZpbGUgPSBzZWxmLkNvbXA6TWFwUGF0aChmaWxlKQogIGxvY2FsIGYgPSBpby5vcGVuKGZpbGUsICJyYiIpCiAgaWYgbm90IGYgdGhlbgogICAgaWYgZmlsZSB+PSAiIiB0aGVuCiAgICAgIGVycm9yX3R4dCA9ICJTcGVjaWFsIENoYXJhY3RlcnMgaW4gRmlsZW5hbWUiCiAgICBlbmQKICAgIHJldHVybgogIGVuZAogIGxvY2FsIGNvbnRlbnQgPSBmOnJlYWQoIiphbGwiKQogIGxvY2FsIHNpemUgPSBmOnNlZWsoImVuZCIpCiAgZjpjbG9zZSgpCiAgaWYgKHNpemUgPiAyMDk3MTUyMDApIHRoZW4gICAgLS0gRmlsZSBiaWdnZXIgdGhhbiAyMDBNQiAtPiByZXR1cm4gbmlsIC0gNTI0Mjg4MDAKICAgIGVycm9yX3R4dCA9ICJGaWxlc2l6ZSB0b28gbGFyZ2UgKDIwMCBNQikiCiAgICByZXR1cm4gbmlsCiAgZWxzZQogICAgaWYgKHNpemUgPCAxMDQpIHRoZW4KICAgICAgZXJyb3JfdHh0ID0gIlVuc3VwcG9ydGVkIFdBVi1GaWxlIGZvcm1hdCIKICAgICAgcmV0dXJuIG5pbAogICAgZWxzZQogICAgICByZXR1cm4gY29udGVudAogICAgZW5kCiAgZW5kCmVuZAoKLS0gZnVuY3Rpb24gZm9yIGNyZWF0aW5nIHRoZSBoZWFkZXIgdGFibGUsIHJldHVybnMgYSB0YWJsZQpmdW5jdGlvbiBnZXRIZWFkZXIoZGF0YSwgbGVuZ3RoKQogIGxvY2FsIGhlYWRlciA9IHt9CiAgZm9yIHBvcyA9IDEsIGxlbmd0aCBkbwogICAgYiA9IHN0cmluZy5ieXRlKGRhdGEsIHBvcykgLS0gY3JlYXRlIGEgc3RyaW5nIG9uZSBieXRlIGxvbmcKICAgIHRhYmxlLmluc2VydChoZWFkZXIsIHN0cmluZy5mb3JtYXQoIiVpIiwgYikpCiAgZW5kCiAgcmV0dXJuIGhlYWRlcgplbmQKCgotLWZ1bmN0aW9uIHRvIHJlYWQgYSBwYWlyIG9mIGJ5dGVzIGFuZCBwdXQgdGhlbSB0b2dldGhlciB0byBmb3JtIGEgMTYgYml0IHR3bydzIGNvbXBsZW1lbnQgc2FtcGxlLCB0aGVuIHJldHVybiB0aGUgcmVzdWx0IGNvbnZlcnRlZCB0byBkZWNpbWFsIG51bWJlcnMKZnVuY3Rpb24gc2FtcGxlUmVhZChkYXRhLCBwb2ludGVyKQogIGJsID0gc3RyaW5nLmJ5dGUoZGF0YSwgcG9pbnRlcikgLS0gY3JlYXRlIGEgc3RyaW5nIG9uZSBieXRlIGxvbmcKICBiaCA9IHN0cmluZy5ieXRlKGRhdGEsIHBvaW50ZXIrMSkgLS0gY3JlYXRlIGEgc3RyaW5nIG9uZSBieXRlIGxvbmcKCiAgaWYgYmwgPT0gbmlsIG9yIGJoID09IG5pbCB0aGVuCiAgICBibCA9IDAKICAgIGJoID0gMAogIGVuZAogIG51bWJlcl9pbnQgPSB0b251bWJlcihiaCkgKiAyNTYgKyB0b251bWJlcihibCkKICBpZiAoIG51bWJlcl9pbnQgPiAzMjc2NyApICB0aGVuIC0tIGJhc2ljYWxseSwgaWYgdGhlIGJ5dGVsb25nIGJpbmFyeSBzdGFydHMgd2l0aCAxCiAgICBzYW1wbGUgPSBudW1iZXJfaW50IC0gNjU1MzYKICBlbHNlCiAgICBzYW1wbGUgPSBudW1iZXJfaW50CiAgZW5kCiAgcmV0dXJuIHNhbXBsZQplbmQKCi0tICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwotLSBmdW5jdGlvbiBmb3IgcmVhZGluZyBhbGwgdGhlIHJlcXVpcmVkIHNhbXBsZSBkYXRhIGZvciBhIGdpdmVuIGZyYW1lLCB0YWtpbmcgaW50byBhY2NvdW50IGJpdHJhdGUgYW5kIGNoYW5uZWxzIChtb25vLHN0ZXJlbykgYW5kIHJldHVybmluZyB0aGUgcmVzdWx0IGluIGEgdGFibGUKLS0gIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCmZ1bmN0aW9uIGdldFNhbXBsZURhdGEoZmlsZWRhdGEsIGZyYW1lcmF0ZSwgY3VycmVudHRpbWUsIHN0YXJ0ZnJhbWUsIHByb3h5LCB6b29tLCBiaXRyYXRlLCByZXNvbHV0aW9uLCB3aW5kb3d3aWR0aCwgbm9pc2V0aHJlc2hvbGQpCgogIC0tIEluaXRpYWxpemUgdGFibGVzIG5lZWRlZCBmb3IgV0FWRSBkYXRhLgogIGxvY2FsIHNhbXBsZWRhdGEgPSB7fQogIGxvY2FsIHNwZiA9IG1hdGguZmxvb3IoYml0cmF0ZS9mcmFtZXJhdGUpIC0tIGNhbGN1bGF0ZSB0aGUgYW1vdW50IG9mIHNhbXBsZXMgcGVyIGZyYW1lCiAgLS0gY3JlYXRlIHNhbXBsZWRhdGEgdGFibGUgZm9yIE1TIFdBViAobGl0dGxlIGVuZGlhbikKICBmb3IgcG9zID0gKChjdXJyZW50dGltZStzdGFydGZyYW1lKSpzcGYpLSh3aW5kb3d3aWR0aCp6b29tKnByb3h5KS9yZXNvbHV0aW9uLCAoKGN1cnJlbnR0aW1lK3N0YXJ0ZnJhbWUpKnNwZikrKHdpbmRvd3dpZHRoKnpvb20qcHJveHkpL3Jlc29sdXRpb24tMSwgem9vbSpwcm94eSBkbwogICAgaWYgKHBvcyA8IDEpIHRoZW4KICAgICAgdGFibGUuaW5zZXJ0KHNhbXBsZWRhdGEsIDApICAgLS0gRGF0YSBiZWZvcmUgU3RhcnRwb2ludAogICAgZWxzZQogICAgICB6b29tZGF0YSA9IHt9CgogICAgICBmb3IgaiA9IDEsem9vbSwxIGRvCiAgICAgICAgdGFibGUuaW5zZXJ0KHpvb21kYXRhLCBmaWxlZGF0YVtwb3Mral0pCgogICAgICBlbmQKICAgICAgaWYgKG1hdGguYWJzKGdldE1heCh6b29tZGF0YSkpIDw9IG5vaXNldGhyZXNob2xkICkgdGhlbgogICAgICAgIHRhYmxlLmluc2VydChzYW1wbGVkYXRhLDApCiAgICAgIGVsc2UKICAgICAgICB0YWJsZS5pbnNlcnQoc2FtcGxlZGF0YSwgZ2V0TWF4KHpvb21kYXRhKSApCiAgICAgIGVuZAogICAgZW5kCiAgZW5kCiAgcmV0dXJuIHNhbXBsZWRhdGEKZW5kCgotLSBnZXRTYW1wbGVEYXRhIGZvciBEaXNwbGF5IFN0ZWFkeVdhdmUKZnVuY3Rpb24gZ2V0U2FtcGxlRGF0YVN0ZWFkeVdhdmUoZmlsZWRhdGEsIGZyYW1lcmF0ZSwgY3VycmVudHRpbWUsIHN0YXJ0ZnJhbWUsIHByb3h5LCB6b29tLCBiaXRyYXRlLCByZXNvbHV0aW9uLCB3aW5kb3d3aWR0aCwgZnJhbWVjb3VudCkKCiAgLS0gSW5pdGlhbGl6ZSB0YWJsZXMgbmVlZGVkIGZvciBXQVZFIGRhdGEuCiAgbG9jYWwgc2FtcGxlZGF0YSA9IHt9CiAgbG9jYWwgc3BmID0gbWF0aC5mbG9vcihiaXRyYXRlL2ZyYW1lcmF0ZSkgLS0gY2FsY3VsYXRlIHRoZSBhbW91bnQgb2Ygc2FtcGxlcyBwZXIgZnJhbWUKCiAgLS0gY3JlYXRlIHNhbXBsZWRhdGEgdGFibGUgZm9yIE1TIFdBViAobGl0dGxlIGVuZGlhbikKICBmb3IgcG9zID0gKCgoY3VycmVudHRpbWUrc3RhcnRmcmFtZSkqc3BmKS0od2luZG93d2lkdGgpKSpmcmFtZWNvdW50L3Jlc29sdXRpb24sICgoKGN1cnJlbnR0aW1lK3N0YXJ0ZnJhbWUpKnNwZikrKHdpbmRvd3dpZHRoKSkqZnJhbWVjb3VudC9yZXNvbHV0aW9uLTEsIGZyYW1lY291bnQgIGRvCiAgICBsb2NhbCB0bXBfZGF0YSA9IHt9CiAgICBmb3IgaiA9IDAsIGZyYW1lY291bnQtMSBkbwogICAgICBpZiAocG9zIDwgMSkgdGhlbgogICAgICAgIHRhYmxlLmluc2VydCh0bXBfZGF0YSwgMCkgICAtLSBEYXRhIGJlZm9yZSBTdGFydHBvaW50CiAgICAgIGVsc2UKICAgICAgICB0YWJsZS5pbnNlcnQodG1wX2RhdGEsIGZpbGVkYXRhW3BvcytqXSkKICAgICAgZW5kCiAgICBlbmQKCiAgdGFibGUuaW5zZXJ0KHNhbXBsZWRhdGEsIGdldE1heCh0bXBfZGF0YSkgKQogIGVuZAogIHJldHVybiBzYW1wbGVkYXRhCmVuZAoKLS0gIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKCi0tIGZ1bmN0aW9uIGZvciByZXR1cm5pbmcgdGhlIHNpZ25lZCBtYXhpbXVtIG9mIGEgdGFibGUKZnVuY3Rpb24gZ2V0TWF4KGRhdGEpCiAgbG9jYWwgbWF4ID0gMAogIGZvciBpLHYgaW4gaXBhaXJzKGRhdGEpIGRvCiAgICBpZiBtYXRoLmFicyh2KSA+IG1hdGguYWJzKG1heCkgdGhlbgogICAgICBtYXggPSB2CiAgICBlbmQKICBlbmQKICByZXR1cm4gbWF4CmVuZAoKLS0gZnVuY3Rpb24gZm9yIHJldHVybmluZyB0aGUgdW5zaWduZWQgbWF4aW11bSBvZiBhIHRhYmxlCmZ1bmN0aW9uIGdldFVuc2lnbmVkTWF4KGRhdGEpCiAgbG9jYWwgbWF4ID0gMAogIGZvciBpLHYgaW4gaXBhaXJzKGRhdGEpIGRvCiAgICBtYXggPSBtYXRoLm1heChtYXgsbWF0aC5hYnModikpCiAgZW5kCiAgcmV0dXJuIG1heAplbmQKCi0tIGZ1bmN0aW9uIGZvciByZXR1cm5pbmcgdGhlIHNpZ25lZCBtaW5pbXVtIG9mIGEgdGFibGUKZnVuY3Rpb24gZ2V0TWluKGRhdGEpCiAgbG9jYWwgbWluID0gMzI3NjcKICBmb3IgaSx2IGluIGlwYWlycyhkYXRhKSBkbwogICAgaWYgbWF0aC5hYnModikgPCBtYXRoLmFicyhtaW4pIHRoZW4KICAgICAgbWluID0gdgogICAgZW5kCiAgZW5kCiAgcmV0dXJuIG1pbgplbmQKCi0tIGZ1bmN0aW9uIGZvciByZXR1cm5pbmcgdGhlIHVuc2lnbmVkIG1pbmltdW0gb2YgYSB0YWJsZQpmdW5jdGlvbiBnZXRVbnNpZ25lZE1pbihkYXRhKQogIGxvY2FsIG1pbiA9IDMyNzY3CiAgZm9yIGksdiBpbiBpcGFpcnMoZGF0YSkgZG8KICAgIG1pbiA9IG1hdGgubWluKG1pbix2KQogIGVuZAogIHJldHVybiBtaW4KZW5kCgotLSBmdW5jdGlvbiBmb3IgcmV0dXJuaW5nIHRoZSBhdmVyYWdlIG9mIGEgdGFibGUKZnVuY3Rpb24gZ2V0QXZlcmFnZShkYXRhKQogIGxvY2FsIHN1bSA9IDAKICBsb2NhbCBpbmRpY2VzID0gMAogIGZvciBpLHYgaW4gaXBhaXJzKGRhdGEpIGRvCiAgICBzdW0gPSBzdW0gKyB2CiAgICBpbmRpY2VzID0gaW5kaWNlcyArIDEKICBlbmQKICByZXR1cm4gc3VtL2luZGljZXMKZW5kCgotLSBmdW5jdGlvbiBmb3IgcmV0dXJuaW5nIHRoZSB1bnNpZ25lZCBhdmVyYWdlIG9mIGEgdGFibGUKZnVuY3Rpb24gZ2V0VW5zaWduZWRBdmVyYWdlKGRhdGEpCiAgbG9jYWwgc3VtID0gMAogIGxvY2FsIGluZGljZXMgPSAwCiAgZm9yIGksdiBpbiBpcGFpcnMoZGF0YSkgZG8KICAgIHN1bSA9IHN1bSArIG1hdGguYWJzKHYpCiAgICBpbmRpY2VzID0gaW5kaWNlcyArIDEKICBlbmQKICByZXR1cm4gc3VtL2luZGljZXMKZW5kCgotLSBmdW5jdGlvbiBmb3IgcmV0dXJuaW5nIHRoZSBtZWRpYW4gb2YgYSB0YWJsZQpmdW5jdGlvbiBnZXRNZWRpYW4oZGF0YSkKICB0YWJsZS5zb3J0KGRhdGEpCiAgaWYgI2RhdGEgJTIgPT0gMCB0aGVuIHJldHVybiAoZGF0YVsjZGF0YS8yXSArIGRhdGFbI2RhdGEvMisxXSkgLyAyIGVuZAogIHJldHVybiBkYXRhW21hdGguY2VpbCgjZGF0YS8yKV0KZW5kCgotLSBmdW5jdGlvbiBmb3IgcmV0dXJuaW5nIHRoZSB1bnNpZ25lZCBtZWRpYW4gb2YgYSB0YWJsZQpmdW5jdGlvbiBnZXRVbnNpZ25lZE1lZGlhbihkYXRhKQogIGxvY2FsIHVuc2RhdGEgPSB7fQogIGZvciBpLHYgaW4gaXBhaXJzKGRhdGEpIGRvCiAgICB1bnNkYXRhW2ldID0gbWF0aC5hYnMoZGF0YVtpXSkKICBlbmQKICB0YWJsZS5zb3J0KHVuc2RhdGEpCiAgaWYgI3Vuc2RhdGEgJTIgPT0gMCB0aGVuIHJldHVybiAodW5zZGF0YVsjdW5zZGF0YS8yXSArIHVuc2RhdGFbI3Vuc2RhdGEvMisxXSkgLyAyIGVuZAogIHJldHVybiB1bnNkYXRhW21hdGguY2VpbCgjdW5zZGF0YS8yKV0KZW5kCgoKLS0tIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIEZGVDIgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKLS0gQ29vbGV5llR1a2V5IEZGVCBhbGdvcml0aG0gKGluLXBsYWNlLCBkaXZpZGUtYW5kLWNvbnF1ZXIpCi0tICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCmxvY2FsIGtvbXBsZXggPSB7CiAgX190b3N0cmluZyA9IGZ1bmN0aW9uKHNlbGYpIHJldHVybiAoIiglIC41ZiAlIC41ZmkpIik6Zm9ybWF0KHNlbGZbMV0sIHNlbGZbMl0pIGVuZAp9CmxvY2FsIEEgPSAtMiAqIG1hdGgucGkKbG9jYWwgZnVuY3Rpb24gQyh0KSByZXR1cm4gc2V0bWV0YXRhYmxlKHQsIGtvbXBsZXgpIGVuZAoKbG9jYWwgZnVuY3Rpb24gY2V4cCh4KQogIGxvY2FsIGVyID0gbWF0aC5leHAoeFsxXSkKICByZXR1cm4gQ3sgZXIqbWF0aC5jb3MoeFsyXSksIGVyKm1hdGguc2luKHhbMl0pIH0KZW5kCgpsb2NhbCBmdW5jdGlvbiBjbXVsKHgsIHkpIHJldHVybiBDeyB4WzFdKnlbMV0teFsyXSp5WzJdLCB4WzFdKnlbMl0reFsyXSp5WzFdIH0gZW5kCmxvY2FsIGZ1bmN0aW9uIGNhZGQoeCwgeSkgcmV0dXJuIEN7IHhbMV0reVsxXSwgeFsyXSt5WzJdIH0gZW5kCmxvY2FsIGZ1bmN0aW9uIGNzdWIoeCwgeSkgcmV0dXJuIEN7IHhbMV0teVsxXSwgeFsyXS15WzJdIH0gZW5kCgpsb2NhbCBmdW5jdGlvbiBzbGljZShsaXN0KSAtLSBldmVucy9vZGRzIHNlbWFudGljcyBhcmUgd2VpcmQuCiAgbG9jYWwgZXZlbiwgb2RkID0ge30sIHt9CiAgZm9yIGkgPSAxLCAjbGlzdCwgMiBkbyBldmVuWyNldmVuKzFdID0gbGlzdFtpXSBlbmQKICBmb3IgaSA9IDIsICNsaXN0LCAyIGRvIG9kZFsjb2RkKzFdID0gbGlzdFtpXSBlbmQKICByZXR1cm4gZXZlbiwgb2RkCmVuZAoKbG9jYWwgZnVuY3Rpb24gRkZUMih4KQogIGxvY2FsIE4sIEggPSAjeCwgbWF0aC5mbG9vcigjeC8yKQogIGxvY2FsIHkgPSB7fQogIGZvciBpID0gMSwgTiBkbwogICAgeVtpXSA9IHR5cGUoeFtpXSkgfj0gInRhYmxlIiBhbmQgQ3t4W2ldLCAwfSBvciB4W2ldCiAgZW5kCiAgaWYgTiA8PSAxIHRoZW4gcmV0dXJuIHkgZW5kCiAgbG9jYWwgZXZlbnMsIG9kZHMgPSBzbGljZSh5KQogIGV2ZW5zID0gRkZUMihldmVucykKICBvZGRzID0gRkZUMihvZGRzKQogIGxvY2FsIHJlc3VsdHMgPSB7fQogIGZvciBrID0gMSwgSCBkbwogICAgbG9jYWwgVCA9IGNleHB7MCwgQSooKGstMSkvTil9CiAgICByZXN1bHRzW2tdID0gY2FkZChldmVuc1trXSwgY211bChULCBvZGRzW2tdKSkKICAgIHJlc3VsdHNbSCtrXSA9IGNzdWIoZXZlbnNba10sIGNtdWwoVCwgb2Rkc1trXSkpCiAgZW5kCiAgcmV0dXJuIHJlc3VsdHMKZW5kCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi0tIFRleHRzY3JlZW4KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpmdW5jdGlvbiBkcmF3c3RyaW5nKGZvbnQsIHN0eWxlLCBzaXplLCBqdXN0aWZ5LCBxdWFsaXR5LCB0ZXh0LHgseSkKCiAgbG9jYWwgZm9udCA9IFRleHRTdHlsZUZvbnQoZm9udCwgc3R5bGUpCiAgbG9jYWwgdGZtID0gVGV4dFN0eWxlRm9udE1ldHJpY3MoZm9udCkKICBsb2NhbCBsaW5lX2hlaWdodCA9ICh0Zm0uVGV4dEFzY2VudCArIHRmbS5UZXh0RGVzY2VudCArIHRmbS5UZXh0RXh0ZXJuYWxMZWFkaW5nKSAqIDEwICogc2l6ZQogIGxvY2FsIG1hdCA9IE1hdHJpeDQoKQogIG1hdDpTY2FsZSgxLjAvdGZtLlNjYWxlLCAxLjAvdGZtLlNjYWxlLCAxLjApCiAgbWF0OlNjYWxlKHNpemUsIHNpemUsIDEpCgogIGxvY2FsICBjaCwgcHJldmNoCiAgbG9jYWwgc2hhcGUgPSBTaGFwZSgpCiAgbG9jYWwgc2hoID0gU2hhcGUoKQogIGxvY2FsIHhfbW92ZSA9IDAKICBtYXQ6TW92ZSh4LHksIDApCgogIGZvciBsaW5lIGluIHN0cmluZy5nbWF0Y2godGV4dCwgIiVDKyIpIGRvCiAgICBsb2NhbCBsaW5lX3dpZHRoID0gMAogICAgZm9yIGk9MSwjbGluZSBkbwogICAgICBjaCA9IGxpbmU6c3ViKGksaSk6Ynl0ZSgpCiAgICAgIGxpbmVfd2lkdGggPSBsaW5lX3dpZHRoICsgdGZtOkNoYXJhY3RlcldpZHRoKGNoKSoxMCpzaXplCiAgICBlbmQKCiAgICBpZiBqdXN0aWZ5ID09IDAgdGhlbgogICAgZWxzZWlmIGp1c3RpZnkgPT0gMSB0aGVuCiAgICAgIG1hdDpNb3ZlKC1saW5lX3dpZHRoLzIsIDAsIDApCiAgICBlbHNlaWYganVzdGlmeSA9PSAyIHRoZW4KICAgICAgbWF0Ok1vdmUoLWxpbmVfd2lkdGgsIDAsIDApCiAgICBlbmQKCiAgICBmb3IgaT0xLCNsaW5lIGRvCiAgICAgIHByZXZjaCA9IGNoCiAgICAgIGNoID0gbGluZTpzdWIoaSxpKTpieXRlKCkKICAgICAgbG9jYWwgY3cgPSB0Zm06Q2hhcmFjdGVyV2lkdGgoY2gpKjEwKnNpemUKCiAgICAgIGlmIHByZXZjaCB0aGVuCiAgICAgICAgeF9vZmZzZXQgPSB0Zm06Q2hhcmFjdGVyS2VybmluZyhwcmV2Y2gsIGNoKSoxMCpzaXplCiAgICAgICAgeF9tb3ZlID0geF9tb3ZlICsgeF9vZmZzZXQKICAgICAgICBtYXQ6TW92ZSh4X29mZnNldCwgMCwgMCkKICAgICAgZW5kCgogICAgICBtYXQ6TW92ZShjdy8yLCAoLXNpemUvMikvMiwgMCkKICAgICAgeF9tb3ZlID0geF9tb3ZlICsgY3cKICAgICAgc2hoID0gdGZtOkdldENoYXJhY3RlclNoYXBlKGNoLCBmYWxzZSkKICAgICAgc2hoID0gc2hoOlRyYW5zZm9ybU9mU2hhcGUobWF0KQogICAgICBzaGFwZTpBZGRTaGFwZShzaGgpCiAgICAgIG1hdDpNb3ZlKGN3LzIsIChzaXplLzIpLzIsIDApCiAgICBlbmQKICBlbmQKICByZXR1cm4gc2hhcGUKZW5kCgoKZnVuY3Rpb24gbm90ZShmb250LHN0eWxlKQogICAgICBsb2NhbCBwID0gUGl4ZWwoe1I9MCxHPTAsQj0wLEE9MX0pCiAgICAgIG91dDpGaWxsKHApCgogICAgICAtLSBQaWN0dXJlIHdpdGggVGV4dAogICAgICBsb2NhbCBpYyA9IEltYWdlQ2hhbm5lbChvdXQsIDgpCiAgICAgIGxvY2FsIGZzID0gRmlsbFN0eWxlKCkKICAgICAgbG9jYWwgY3MgPSBDaGFubmVsU3R5bGUoKQogICAgICBpYzpTZXRTdHlsZUZpbGwoZnMpCgogICAgICAtLWxvY2FsIHNoID0gU2hhcGUoKQogICAgICBsb2NhbCBzaGFwZSA9IHt9CiAgICAgIHNoYXBlID0gZHJhd3N0cmluZyhmb250LCBzdHlsZSwgMC4xNSwgMSwgMzIsICJBdWRpb1dhdmVmb3JtIiwwLjUsMC40KQogICAgICBzaGFwZTIgPSBkcmF3c3RyaW5nKGZvbnQsIHN0eWxlLCAwLjEsIDEsIDMyLCAiUGxlYXNlIGxvYWQgQXVkaW9maWxlIiwwLjUsMC4yKQogICAgICBzaGFwZTpBZGRTaGFwZShzaGFwZTIpCgogICAgICBpYzpTaGFwZUZpbGwoc2hhcGUpCiAgICAgIGlmIHNlbGYuU3RhdHVzID09ICJPSyIgdGhlbgogICAgICAgIGljOlB1dFRvSW1hZ2UoIkNNX01lcmdlIiwgY3MpCiAgICAgIGVuZAogICAgICBzaGFwZTMgPSBkcmF3c3RyaW5nKGZvbnQsIHN0eWxlLCAwLjEsIDEsIDMyLCBlcnJvcl90eHQsMC41LDAuMSkKICAgICAgY3MuQ29sb3IgPSBQaXhlbCh7UiA9IDEsIEcgPSAwLCBCID0gMCwgQSA9IDF9KSAtLSBFcnJvcnMgYXJlIGFsd2F5cyByZWQKICAgICAgaWM6U2hhcGVGaWxsKHNoYXBlMykKICAgICAgaWYgc2VsZi5TdGF0dXMgPT0gIk9LIiB0aGVuCiAgICAgICAgIGljOlB1dFRvSW1hZ2UoIkNNX01lcmdlIiwgY3MpCiAgICAgIGVuZAogICAgICBzaGFwZTQgPSBkcmF3c3RyaW5nKGZvbnQsIHN0eWxlLCAwLjA1LCAxLCAzMiwgImh0dHBzOi8vd3d3LnN0ZWFrdW5kZXJ3YXRlci5jb20iLDAuNSwwLjMyKQogICAgICBjcy5Db2xvciA9IFBpeGVsKHtSID0gMSwgRyA9IDAuNTE3NjQ3MDg3NTc0LCBCID0gMCwgQSA9IDF9KSAtLSBPcmFuZ2Ugb2YgV2VTdWNrTGVzcwogICAgICBpYzpTaGFwZUZpbGwoc2hhcGU0KQogICAgICBpZiBzZWxmLlN0YXR1cyA9PSAiT0siIHRoZW4KICAgICAgICBpYzpQdXRUb0ltYWdlKCJDTV9NZXJnZSIsIGNzKQogICAgICBlbmQKICAgICAgLS1PdXRJbWFnZTpTZXQocmVxLCBvdXQpCiAgICAgIHJldHVybiBvdXQKZW5kCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIEZpbHRlcnBhcmFtZXRlciAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KQUNvZWZfTFAyMDAgPSB7CiAgICAgICAgMC4wMDAwMDAwMDAzMjkyMjYxMTY1OSwKICAgICAgICAwLjAwMDAwMDAwMTY0NjEzMDU4MjkzLAogICAgICAgIDAuMDAwMDAwMDAzMjkyMjYxMTY1ODYsCiAgICAgICAgMC4wMDAwMDAwMDMyOTIyNjExNjU4NiwKICAgICAgICAwLjAwMDAwMDAwMTY0NjEzMDU4MjkzLAogICAgICAgIDAuMDAwMDAwMDAwMzI5MjI2MTE2NTkKICAgIH07CkJDb2VmX0xQMjAwID0gewogICAgICAgIDEuMDAwMDAwMDAwMDAwMDAwMDAwMDAsCiAgICAgICAgLTQuOTE1MjgwNjQ0MjkwMTMyNTAwMDAsCiAgICAgICAgOS42NjQ3MDAxNzMyOTAzMDY0MDAwMCwKICAgICAgICAtOS41MDIzMjM2MzgwODI4MjA5MDAwMCwKICAgICAgICA0LjY3MTY3MDgyMDM4NTE0ODAwMDAwLAogICAgICAgIC0wLjkxODc2NjY5OTUxMDk3OTMzMDAwCiAgICB9OwotLSBMUCAzMDBIeiA3Lk9yZCBTRjQ4a0h6CkFDb2VmX0xQID0gewogICAgICAgIDAuMDAwMDAwMDAwMDY3MDM1MTg4MTQsCiAgICAgICAgMC4wMDAwMDAwMDA0MDIyMTExMjg4NiwKICAgICAgICAwLjAwMDAwMDAwMTAwNTUyNzgyMjE0LAogICAgICAgIDAuMDAwMDAwMDAxMzQwNzAzNzYyODUsCiAgICAgICAgMC4wMDAwMDAwMDEwMDU1Mjc4MjIxNCwKICAgICAgICAwLjAwMDAwMDAwMDQwMjIxMTEyODg2LAogICAgICAgIDAuMDAwMDAwMDAwMDY3MDM1MTg4MTQKICAgIH07CgpCQ29lZl9MUCA9IHsKICAgICAgICAxLjAwMDAwMDAwMDAwMDAwMDAwMDAwLAogICAgICAgIC01Ljg0ODI3NDYzNzU1OTM4ODQwMDAwLAogICAgICAgIDE0LjI1Mjg0MDY2NjQ4NTIwNDAwMDAwLAogICAgICAgIC0xOC41MjgwNjkxNjI0MTcyMDAwMDAwMCwKICAgICAgICAxMy41NDk5MjcxNzU2OTcwNjQwMDAwMCwKICAgICAgICAtNS4yODU2MzU5OTczOTgxMTE3MDAwMCwKICAgICAgICAwLjg1OTIxMTk1ODU5NDUwODgzMDAwCiAgICB9OwotLSBMUCAzMDBIeiA3Lk9yZCBTRjQ0LDFrSHoKQUNvZWZfTFBfU0Y0NDEgPSB7CiAgICAgICAgMC4wMDAwMDAwMDAwMDI1OTk4MDA2NCwKICAgICAgICAwLjAwMDAwMDAwMDAxODE5ODYwNDQ4LAogICAgICAgIDAuMDAwMDAwMDAwMDU0NTk1ODEzNDQsCiAgICAgICAgMC4wMDAwMDAwMDAwOTA5OTMwMjI0MCwKICAgICAgICAwLjAwMDAwMDAwMDA5MDk5MzAyMjQwLAogICAgICAgIDAuMDAwMDAwMDAwMDU0NTk1ODEzNDQsCiAgICAgICAgMC4wMDAwMDAwMDAwMTgxOTg2MDQ0OCwKICAgICAgICAwLjAwMDAwMDAwMDAwMjU5OTgwMDY0CiAgICB9OwpCQ29lZl9MUF9TRjQ0MSA9IHsKICAgICAgICAxLjAwMDAwMDAwMDAwMDAwMDAwMDAwLAogICAgICAgIC02LjgwNzkxNzg1OTAxMTM0NjMwMDAwLAogICAgICAgIDE5Ljg2NTg5MjMxNzMwMjAxMzAwMDAwLAogICAgICAgIC0zMi4yMDk1NjYyNTMyMTQyODQwMDAwMCwKICAgICAgICAzMS4zMzc3NDY2NTg1OTAwNDYwMDAwMCwKICAgICAgICAtMTguMjk1OTk2MzU4Njg1NTcxMDAwMDAsCiAgICAgICAgNS45MzUwNjMzNDc3NjIxOTE5MDAwMCwKICAgICAgICAtMC44MjUyMjE4NTI1MDYwMzAyMDAwMAogICAgfTsKLS0gTG93cGFzcyAzNTBIeiAzLk9yZAogIEFDb2VmID0geyAwLjAwMDQ5NzEzNTY5NjkzNDAwNjQ5LAogICAgICAgICAgICAwLjAwMDk5NDI3MTM5Mzg2ODAxMjk5LAogICAgICAgICAgICAwLjAwMDQ5NzEzNTY5NjkzNDAwNjQ5CiAgICAgICAgfQoKICBCQ29lZiA9IHsgMS4wMDAwMDAwMDAwMDAwMDAwMDAwMCwKICAgICAgICAgICAgLTEuOTM1MjI5NTU0NzA2Njk1MzAwMDAsCiAgICAgICAgICAgIDAuOTM3MjYyMzYwMjE0MDQ2NjMwMDAKICAgICAgICB9Ci0tIEJhbmRwYXNzIDMwMCBIeiAtIDMga0h6IFNGNDhrSHoKQUNvZWZfQlAgPSB7CiAgICAgICAgMC4wMDA5MDgyOTU2OTY1MDk5MTg1OCwKICAgICAgICAwLjAwMDAwMDAwMDAwMDAwMDAwMDAwLAogICAgICAgIC0wLjAwMzYzMzE4Mjc4NjAzOTY3NDMwLAogICAgICAgIDAuMDAwMDAwMDAwMDAwMDAwMDAwMDAsCiAgICAgICAgMC4wMDU0NDk3NzQxNzkwNTk1MTEzMCwKICAgICAgICAwLjAwMDAwMDAwMDAwMDAwMDAwMDAwLAogICAgICAgIC0wLjAwMzYzMzE4Mjc4NjAzOTY3NDMwLAogICAgICAgIDAuMDAwMDAwMDAwMDAwMDAwMDAwMDAsCiAgICAgICAgMC4wMDA5MDgyOTU2OTY1MDk5MTg1OAogICAgfTsKQkNvZWZfQlAgPSB7CiAgICAgICAgMS4wMDAwMDAwMDAwMDAwMDAwMDAwMCwKICAgICAgICAtNi45MzI5ODk0ODI3NDEwNDQ1MDAwMCwKICAgICAgICAyMS4xMTY1MzkxNDYxODM5NTMwMDAwMCwKICAgICAgICAtMzYuOTIwODE5NjY1NTc1NDc5MDAwMDAsCiAgICAgICAgNDAuNTQzNTQ5NjQ5MTQ1NjYwMDAwMDAsCiAgICAgICAgLTI4LjYzOTQyMzQ0NjkxNTkwOTAwMDAwLAogICAgICAgIDEyLjcwOTk5NjY4NjY2ODU1MzAwMDAwLAogICAgICAgIC0zLjI0MDEyNzY1MzM4NjYxOTIwMDAwLAogICAgICAgIDAuMzYzMjc0ODM2NzYyNDE4MTIwMDAKICAgIH07Ci0tIEJhbmRwYXNzIDMwMCBIeiAtIDMga0h6IFNGNDQsMWtIegpBQ29lZl9CUF9TRjQ0MSA9IHsKICAgICAgICAwLjAwMDY5Nzk3NDY3NjcxNzYwNTk3LAogICAgICAgIDAuMDAwMDAwMDAwMDAwMDAwMDAwMDAsCiAgICAgICAgLTAuMDAyNzkxODk4NzA2ODcwNDIzOTAsCiAgICAgICAgMC4wMDAwMDAwMDAwMDAwMDAwMDAwMCwKICAgICAgICAwLjAwNDE4Nzg0ODA2MDMwNTYzNTYwLAogICAgICAgIDAuMDAwMDAwMDAwMDAwMDAwMDAwMDAsCiAgICAgICAgLTAuMDAyNzkxODk4NzA2ODcwNDIzOTAsCiAgICAgICAgMC4wMDAwMDAwMDAwMDAwMDAwMDAwMCwKICAgICAgICAwLjAwMDY5Nzk3NDY3NjcxNzYwNTk3CiAgICB9OwpCQ29lZl9CUF9TRjQ0MSA9IHsKICAgICAgICAxLjAwMDAwMDAwMDAwMDAwMDAwMDAwLAogICAgICAgIC03LjAyMzU4MjM0OTA2MTgyMDYwMDAwLAogICAgICAgIDIxLjY1OTI5MDMyOTIwOTE5MjAwMDAwLAogICAgICAgIC0zOC4zMTU0Mjg4NDc4NTU2ODUwMDAwMCwKICAgICAgICA0Mi41MzcwNTMyNzYwOTA1NDYwMDAwMCwKICAgICAgICAtMzAuMzUyNTIxMTQ4MjU4MjM0MDAwMDAsCiAgICAgICAgMTMuNTk1NDkwMzg0MDU4NjY2MDAwMDAsCiAgICAgICAgLTMuNDk1MTQ5MzYxODQyMDU5NTAwMDAsCiAgICAgICAgMC4zOTQ4NDc3NTQ1MjkyOTk4MjAwMAogICAgfTsKLS1Ib2NocGFzcyAza0h6LTIwa0h6CkFDb2VmX0hQID0gewogICAgICAgIDAuNDE0NjU0NTEzMzM4Njc5MDkwMDAsCiAgICAgICAgLTIuOTAyNTgxNTkzMzcwNzUzNTAwMDAsCiAgICAgICAgOC43MDc3NDQ3ODAxMTIyNjA5MDAwMCwKICAgICAgICAtMTQuNTEyOTA3OTY2ODUzNzY5MDAwMDAsCiAgICAgICAgMTQuNTEyOTA3OTY2ODUzNzY5MDAwMDAsCiAgICAgICAgLTguNzA3NzQ0NzgwMTEyMjYwOTAwMDAsCiAgICAgICAgMi45MDI1ODE1OTMzNzA3NTM1MDAwMCwKICAgICAgICAtMC40MTQ2NTQ1MTMzMzg2NzkwOTAwMAogICAgfTsKQkNvZWZfSFAgPSB7CiAgICAgICAgMS4wMDAwMDAwMDAwMDAwMDAwMDAwMCwKICAgICAgICAtNS4yMzY3Njk4NjM0NjYwODY5MDAwMCwKICAgICAgICAxMS45MjcyNDM0MTM3OTU2ODYwMDAwMCwKICAgICAgICAtMTUuMjg0MDEzMTk5OTQwMTQ2MDAwMDAsCiAgICAgICAgMTEuODgyNzQyMDU4Mzk5MTEwMDAwMDAsCiAgICAgICAgLTUuNTk4MzQ5NzY2MDI1NzIzNTAwMDAsCiAgICAgICAgMS40Nzg1MTI5MzI5NTc1NTI0MDAwMCwKICAgICAgICAtMC4xNjg3MTc4MDI1OTE2MjkzMDAwMAogICAgfTsKLS1Ib2NocGFzcyAza0h6LTIwa0h6CkFDb2VmX0hQX1NGNDQxID0gewogICAgICAgIDAuMzgxMzI0MTk5MzE5OTg0NzQwMDAsCiAgICAgICAgLTIuNjY5MjY5Mzk1MjM5ODkzMjAwMDAsCiAgICAgICAgOC4wMDc4MDgxODU3MTk2ODAzMDAwMCwKICAgICAgICAtMTMuMzQ2MzQ2OTc2MTk5NDY3MDAwMDAsCiAgICAgICAgMTMuMzQ2MzQ2OTc2MTk5NDY3MDAwMDAsCiAgICAgICAgLTguMDA3ODA4MTg1NzE5NjgwMzAwMDAsCiAgICAgICAgMi42NjkyNjkzOTUyMzk4OTMyMDAwMCwKICAgICAgICAtMC4zODEzMjQxOTkzMTk5ODQ3NDAwMAogICAgfTsKQkNvZWZfSFBfU0Y0NDEgPSB7CiAgICAgICAgMS4wMDAwMDAwMDAwMDAwMDAwMDAwMCwKICAgICAgICAtNS4wODExMzQ1MTc0MzQ3NjA0MDAwMCwKICAgICAgICAxMS4yNjYyNjkwNzMzNjAxNzQwMDAwMCwKICAgICAgICAtMTQuMDkwODkyOTExODkwODc0MDAwMDAsCiAgICAgICAgMTAuNzE0OTIwOTk5ODQ0MjMwMDAwMDAsCiAgICAgICAgLTQuOTQ2MTM5NDkzMTUyNjY3NzAwMDAsCiAgICAgICAgMS4yODE3OTQ1MjkwNDE5OTMyMDAwMCwKICAgICAgICAtMC4xNDM3MTcyMTcxMTQ0NzE1NTAwMAogICAgfTsKCgoKZnVuY3Rpb24gaWlyKGRhdGEsQXBhcmFtLEJwYXJhbSkKCiAgbG9jYWwgZGF0YWZpbHRlciA9IHt9CiAgbG9jYWwgb3JkZXIgPSAjQXBhcmFtCgogIGxvY2FsIHggPSB7fQogIGxvY2FsIHkgPSB7fQoKICBmb3IgaT0gMSAsI0FwYXJhbSwxIGRvCiAgICB4W2ldID0gMAogICAgeVtpXSA9IDAKICBlbmQKCiAgZm9yIGkgPSAxLCAjZGF0YSwxIGRvCiAgICAtLXNoaWZ0IHRoZSBvbGQgc2FtcGxlcwogICAgZm9yIG4gPSBvcmRlciwyLCAtMSBkbwogICAgICB4W25dID0geFtuLTFdCiAgICAgIHlbbl0gPSB5W24tMV0KICAgIGVuZAoKICAgIC0tQ2FsY3VsYXRlIHRoZSBuZXcgb3V0cHV0CiAgICB4WzFdID0gZGF0YVtpXQogICAgeVsxXSA9IEFwYXJhbVsxXSAqIHhbMV0KCiAgICBmb3Igbj0yLCBvcmRlciwgMSBkbwogICAgICB5WzFdID0geVsxXSArIEFwYXJhbVtuXSAqIHhbbl0gLSBCcGFyYW1bbl0gKiB5W25dCiAgICBlbmQKICAgIHRhYmxlLmluc2VydChkYXRhZmlsdGVyLHlbMV0pCiAgZW5kCiAgcmV0dXJuIGRhdGFmaWx0ZXIKZW5kCgpsb2NhbCBmdW5jdGlvbiBzcGxpbmVfY3ViaWMoeTAseTEseTIseTMsbXUpCiAgbG9jYWwgbXUyID0gbXUgKiBtdQogIGxvY2FsIGEwID0geTMgLSB5MiAtIHkwICsgeTEKICBsb2NhbCBhMSA9IHkwIC0geTEgLSBhMAogIGxvY2FsIGEyID0geTIgLSB5MAogIGxvY2FsIGEzID0geTEKICByZXR1cm4gKGEwKm11Km11MithMSptdTIrYTIqbXUrYTMpCmVuZAoKbG9jYWwgZnVuY3Rpb24gc3BsaW5lX2NhdG11bGxfcm9tKHkwLHkxLHkyLHkzLG11KQogIGxvY2FsIG11MiA9IG11ICogbXUKICBsb2NhbCBhMCA9IC0wLjUqeTAgKyAxLjUqeTEgLSAxLjUqeTIgKyAwLjUqeTMKICBsb2NhbCBhMSA9IHkwIC0gMi41KnkxICsgMip5MiAtIDAuNSp5MwogIGxvY2FsIGEyID0gLTAuNSp5MCArIDAuNSp5MgogIGxvY2FsIGEzID0geTEKICByZXR1cm4gKGEwKm11Km11MithMSptdTIrYTIqbXUrYTMpCmVuZAoKCi0tIENhbGN1bGF0ZSBFbG9uZ2F0aW9uCmZ1bmN0aW9uIGNhbGNfZWxvbih3aW5kb3d3aWR0aCxyZWNfb2Zmc2V0LHJlY193aWR0aCxkYXRhX3NwZWt0cnVtLEZGVHNjYWxlLGxpbWl0LGxpbWl0X3RocmVzaG9sZCxsaW1pdF9jb21wcmVzc2lvbixlbG9uZ2F0aW9ub3BlcmF0aW9uKQogIGxvY2FsIGJhbmRfZGF0YSA9IHt9CgogIGZvciBpID0gbWF0aC5mbG9vcihyZWNfb2Zmc2V0KndpbmRvd3dpZHRoKSsxLCBtYXRoLmZsb29yKHJlY19vZmZzZXQqd2luZG93d2lkdGgpICsgbWF0aC5mbG9vcihyZWNfd2lkdGgqd2luZG93d2lkdGgpIGRvCiAgICBsb2NhbCBrID0gbWF0aC5mbG9vcigoKG1hdGgucG93KDEwLGkvd2luZG93d2lkdGgtMSktLjEpLzAuOSkqd2luZG93d2lkdGgpICAgICAgLS0gbG9nYXJpdGhtaWMgZ3JhcGhzIGludmVycwogICAgaWYgayB+PSAwIHRoZW4KICAgICAgLS10YWJsZS5pbnNlcnQoYmFuZF9kYXRhLCBkYXRhX3NwZWt0cnVtW2tdLzEwKQogICAgICBsb2NhbCB5ID0gbWF0aC5sb2cxMChkYXRhX3NwZWt0cnVtW2tdKiBGRlRzY2FsZSsxKQoKICAgICAgaWYgbGltaXQgPT0gMSB0aGVuCiAgICAgICAgaWYgeSA+IGxpbWl0X3RocmVzaG9sZCB0aGVuCiAgICAgICAgICBsb2NhbCBkaWZmID0geSAtIGxpbWl0X3RocmVzaG9sZAogICAgICAgICAgeSA9IGxpbWl0X3RocmVzaG9sZCArIGRpZmYgLyBsaW1pdF9jb21wcmVzc2lvbgogICAgICAgIGVuZAogICAgICBlbmQKICAgICAgdGFibGUuaW5zZXJ0KGJhbmRfZGF0YSwgeSApCiAgICBlbmQKICBlbmQKCiAgaWYgZWxvbmdhdGlvbm9wZXJhdGlvbiA9PSAwIHRoZW4gIC0tIE1heAogICAgZWxvbmdhdGlvblByZSA9IGdldE1heChiYW5kX2RhdGEpCiAgZWxzZQogICAgaWYgZWxvbmdhdGlvbm9wZXJhdGlvbiA9PSAxIHRoZW4gIC0tIEF2ZXJhZ2UKICAgICAgZWxvbmdhdGlvblByZSA9IGdldEF2ZXJhZ2UoYmFuZF9kYXRhKQogICAgZWxzZQogICAgICBpZiBlbG9uZ2F0aW9ub3BlcmF0aW9uID09IDIgdGhlbiAgLS0gTWVkaWFuCiAgICAgICAgZWxvbmdhdGlvblByZSA9IGdldE1lZGlhbihiYW5kX2RhdGEpCiAgICAgIGVuZAogICAgZW5kCiAgZW5kCiAgcmV0dXJuIGVsb25nYXRpb25QcmUKZW5kCi0tICQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJAotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi0tICAgICAgIFByb2Nlc3MKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpsb2NhbCBsYXN0cmVxdGltZSA9IC0yCmxvY2FsIGxhc3R0aW1lID0gMApsb2NhbCBsYXN0X2Rpc3BsYXlfZGF0YSA9IHt9CmxvY2FsIGxhc3RfZWxvbjFfZGF0YSA9IDAKbG9jYWwgbGFzdF9lbG9uMl9kYXRhID0gMApsb2NhbCBsYXN0X2Vsb24zX2RhdGEgPSAwCgoKZnVuY3Rpb24gUHJvY2VzcyhyZXEpCiAgLS0gVkFSSUFCTEVTCiAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAtLSBCdWlsZCB0aGUgSW1hZ2UKICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogIGxvY2FsIHJlYWx3aWR0aCA9IFdpZHRoOwogIGxvY2FsIHJlYWxoZWlnaHQgPSBIZWlnaHQ7CgogIC0tIFdlJ2xsIGhhbmRsZSBwcm94eSBvdXJzZWx2ZXMKICBXaWR0aCA9IFdpZHRoIC8gU2NhbGUKICBIZWlnaHQgPSBIZWlnaHQgLyBTY2FsZQogIFNjYWxlID0gMQoKICAtLSBBdHRyaWJ1dGVzIGZvciBuZXcgaW1hZ2VzCiAgbG9jYWwgaW1nYXR0cnMgPSB7CiAgICBJTUdfRG9jdW1lbnQgPSBzZWxmLkNvbXAsCiAgICB7IElNR19DaGFubmVsID0gIlJlZCIsIH0sCiAgICB7IElNR19DaGFubmVsID0gIkdyZWVuIiwgfSwKICAgIHsgSU1HX0NoYW5uZWwgPSAiQmx1ZSIsIH0sCiAgICB7IElNR19DaGFubmVsID0gIkFscGhhIiwgfSwKICAgIElNR19XaWR0aCA9IFdpZHRoLAogICAgSU1HX0hlaWdodCA9IEhlaWdodCwKICAgIElNR19YU2NhbGUgPSBYQXNwZWN0LAogICAgSU1HX1lTY2FsZSA9IFlBc3BlY3QsCiAgICBJTUFUX09yaWdpbmFsV2lkdGggPSByZWFsd2lkdGgsCiAgICBJTUFUX09yaWdpbmFsSGVpZ2h0ID0gcmVhbGhlaWdodCwKICAgIElNR19RdWFsaXR5ID0gbm90IHJlcTpJc1F1aWNrKCksCiAgICBJTUdfTW90aW9uQmx1clF1YWxpdHkgPSBub3QgcmVxOklzTm9Nb3Rpb25CbHVyKCksCiAgfQoKICAtLSBTZWNvbmQgT3V0cHV0IGZvciBTaGFkZXJ0b3kgNTEyKjIKICBsb2NhbCBpbWdhdHRyczIgPSB7CiAgICBJTUdfRG9jdW1lbnQgPSBzZWxmLkNvbXAsCiAgICB7IElNR19DaGFubmVsID0gIlJlZCIsIH0sCiAgICB7IElNR19DaGFubmVsID0gIkdyZWVuIiwgfSwKICAgIHsgSU1HX0NoYW5uZWwgPSAiQmx1ZSIsIH0sCiAgICB7IElNR19DaGFubmVsID0gIkFscGhhIiwgfSwKICAgIElNR19XaWR0aCA9IDUxMiwKICAgIElNR19IZWlnaHQgPSAyLAogICAgSU1HX0RlcHRoICA9IDgsCiAgICBJTUdfWFNjYWxlID0gWEFzcGVjdCwKICAgIElNR19ZU2NhbGUgPSBZQXNwZWN0LAogICAgSU1BVF9PcmlnaW5hbFdpZHRoID0gNTEyLAogICAgSU1BVF9PcmlnaW5hbEhlaWdodCA9IDIsCiAgICBJTUdfUXVhbGl0eSA9IG5vdCByZXE6SXNRdWljaygpLAogICAgSU1HX01vdGlvbkJsdXJRdWFsaXR5ID0gbm90IHJlcTpJc05vTW90aW9uQmx1cigpLAogIH0KCiAgb3V0MiA9IEltYWdlKGltZ2F0dHJzMikKCiAgLS0gSW5pdGlhbGl6ZSB0aGUgaW1hZ2VzCiAgbG9jYWwgaW1nID0gSW1hZ2UoaW1nYXR0cnMpCiAgbG9jYWwgcCA9IFBpeGVsKHtSPTAsRz0wLEI9MCxBPTB9KQogIGltZzpGaWxsKHApIC0tIENsZWFyIHRoZSBpbWFnZSBzbyB0aGUgbmV4dCBmcmFtZSBkb2Vzbid0IGNvbnRhaW4gdGhlIHByZXZpb3VzIG9uZS4KCiAgLS0gSW5JbWFnZQogIGlmIEluQ2hhbm5lbDA6R2V0VmFsdWUocmVxKSB+PSBuaWwgdGhlbgogICAgbG9jYWwgaWltZyA9IEluQ2hhbm5lbDA6R2V0VmFsdWUocmVxKQogICAgb3V0ID0gaWltZzpDb3B5T2YoKSAgICAgLS1Db3B5T2YoKSBvZGVyIENvcHkoKSA/Ci0tICAgIG91dCA9IEltYWdlKGltZ2F0dHJzKQogIGVsc2UKICAgIG91dCA9IEltYWdlKGltZ2F0dHJzKQogICAgbG9jYWwgcCA9IFBpeGVsKHtSPTAsRz0wLEI9MCxBPTB9KQogICAgb3V0OkZpbGwocCkKICBlbmQKCiAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogIC0tc2FtcGxlIDEgcHJvY2Vzc2luZyBzZXR0aW5ncwogIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgbG9jYWwgaW5maWxlID0gSW5GaWxlOkdldFZhbHVlKHJlcSkuVmFsdWUKICBsb2NhbCBjaGFubmVsY2hvaWNlID0gSW5DaGFubmVsczpHZXRWYWx1ZShyZXEpLlZhbHVlCiAgbG9jYWwgcHJveHkgPSBJblByb3h5OkdldFZhbHVlKHJlcSkuVmFsdWUKICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogIGxvY2FsIHNjYWxlID0gSW5BbXBsaXR1ZGVTY2FsZTpHZXRWYWx1ZShyZXEpLlZhbHVlCiAgbG9jYWwgc3RhcnRmcmFtZSA9IEluU2FtcGxlU3RhcnRGcmFtZTpHZXRWYWx1ZShyZXEpLlZhbHVlCiAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICBsb2NhbCB6b29tID0gSW5ab29tOkdldFZhbHVlKHJlcSkuVmFsdWUKICBsb2NhbCByZXNvbHV0aW9uID0gSW5SZXNvbHV0aW9uOkdldFZhbHVlKHJlcSkuVmFsdWUKICBsb2NhbCBjcm9zc2hhaXIgPSBJbkNyb3NzaGFpcjpHZXRWYWx1ZShyZXEpLlZhbHVlCiAgbG9jYWwgZW52ZWxvcGVzZWwgPSBJbkVudmVsb3BlU2VsOkdldFZhbHVlKHJlcSkuVmFsdWUKICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogIGxvY2FsIGRhdGFfcG9zID0gNDUKCiAgbG9jYWwgY3VycmVudHRpbWUgPSByZXEuVGltZSAtLSBnZXQgdGhlIGN1cnJlbnQgZnJhbWUgb2YgdGhlIGNvbXAKICBsb2NhbCBmcmFtZXJhdGUgPSBzZWxmLkNvbXA6R2V0UHJlZnMoIkNvbXAuRnJhbWVGb3JtYXQuUmF0ZSIpIC0tIGdldCB0aGUgZnJhbWUgcmF0ZSBvZiB0aGUgY29tcCBzZXQgaW4gdGhlIHByZWZlcmVuY2VzCgogIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgbG9jYWwgZm9udCAgICAgID0gSW5Gb250OkdldFZhbHVlKHJlcSkuVmFsdWUKICBsb2NhbCBzdHlsZSAgICAgPSBJbkZvbnRTdHlsZTpHZXRWYWx1ZShyZXEpLlZhbHVlCgogIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgbG9jYWwgc3BlY3RydW0gICAgID0gSW5TcGVjdHJ1bTpHZXRWYWx1ZShyZXEpLlZhbHVlCiAgbG9jYWwgc3BGRlQgICAgICAgID0gKEluRkZUOkdldFZhbHVlKHJlcSkuVmFsdWUgKyAxKSAgIC0tIFN1cHBvcnRwb2ludHMgRkZUCiAgbG9jYWwgYXBwZWFyYW5jZSAgID0gSW5BcHBlYXJhbmNlOkdldFZhbHVlKHJlcSkuVmFsdWUKICBsb2NhbCBlcXVpY3V0cyAgICAgPSBJbkVxdWlDdXRzOkdldFZhbHVlKHJlcSkuVmFsdWUKCiAgbG9jYWwgRkZUc2NhbGUgICAgID0gSW5GRlRTY2FsZTpHZXRWYWx1ZShyZXEpLlZhbHVlCiAgbG9jYWwgc3RlcHMgICAgICAgID0gbWF0aC5wb3coMixJblN0ZXBzOkdldFZhbHVlKHJlcSkuVmFsdWUpCgogIGxvY2FsIGxpbWl0ICAgICAgICA9IEluTGltaXQ6R2V0VmFsdWUocmVxKS5WYWx1ZQogIGxvY2FsIGxpbWl0X3RocmVzaG9sZCA9IEluTGltaXRUaHJlc2hvbGQ6R2V0VmFsdWUocmVxKS5WYWx1ZQogIGxvY2FsIGxpbWl0X2NvbXByZXNzaW9uID0gSW5MaW1pdENvbXByZXNzaW9uOkdldFZhbHVlKHJlcSkuVmFsdWUKCiAgbG9jYWwgd2luZG93d2lkdGggPSA5NjAKCiAgbG9jYWwgZW9uID0gSW5FbG9uZ2F0aW9uT246R2V0VmFsdWUocmVxKS5WYWx1ZSA9PSAxCiAgbG9jYWwgZW9uV0YgPSBJbkVsb25nYXRpb25XRk9uOkdldFZhbHVlKHJlcSkuVmFsdWUgPT0gMQoKCiAgLS1EZWJ1Z2dpbmcKICBsb2NhbCB2YXIxID1JblZhcjE6R2V0VmFsdWUocmVxKS5WYWx1ZQogIGxvY2FsIHZhcjIgPUluVmFyMjpHZXRWYWx1ZShyZXEpLlZhbHVlCiAgbG9jYWwgdmFyMyA9SW5WYXIzOkdldFZhbHVlKHJlcSkuVmFsdWUKICBsb2NhbCB2YXI0ID1JblZhcjQ6R2V0VmFsdWUocmVxKS5WYWx1ZQoKICBsb2NhbCBpcGMgPSByZXE6SXNQcmVDYWxjKCkgICAtLSBQcmVDYWxjIC0+IFByb2Nlc3Mgd2l0aCBOb0RhdGEgSW1hZ2UKCiAgbG9jYWwgc3RlYWR5d2F2ZSA9IEluU3RlYWR5V2F2ZTpHZXRWYWx1ZShyZXEpLlZhbHVlID09IDEKCiAgbG9jYWwgbm9pc2V0aHJlc2hvbGQgPSBJbk5vaXNlVGhyZXNob2xkOkdldFZhbHVlKHJlcSkuVmFsdWUKCiAgbG9jYWwgZmZ0X2RhdGEgPSB7fSAgICAtLSDcYmVyZ2FiZWFycmF5IGFuIERDVEwKCiAgLS0gUHJlY2FsYyBvbmx5IGlmIHNwZWN0cnVtIG9yIFdhdmVmb3JtIHdpdGggZWxvbmdhdGlvbgogIGlmIChpcGMgYW5kICBub3QoZW9uIG9yIGVvbldGKSkgdGhlbgotLSAgICBpZihpcGMpIHRoZW4KICAgIC0tcHJpbnQoIlByb2Nlc3Mgbm8gQ2FsY3VsYXRpb24iKQogICAgcmV0dXJuCiAgZW5kCiAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAtLS0tLS0tLS0tIElucHV0IFdBVi1EYXRhIC0tLS0tLS0tLS0tLQogIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgaWYgbm90IGZpbGVkYXRhIG9yIGluZmlsZWR1cCB+PSBpbmZpbGUgdGhlbiAtLSBnb3QgdG8gbG9hZCBzb21lIGF1ZGlvIGZpbGVzIHRvIHBsYXkgd2l0aCA6KQogICAgICAgIC0tcHJpbnQgKCJsb2FkaW5nIikKICAgIGZpbGVkYXRhID0gcmVhZEFsbChpbmZpbGUpCgogICAgaWYgbm90IGZpbGVkYXRhICB0aGVuCiAgICAgIHByaW50KCJQbGVhc2UgbG9hZCBhbiBhdWRpbyBXQVYtRmlsZS4gU2l6ZSBsZXNzIHRoYW4gMjAwIE1CIikKICAgICAgb3V0ID0gbm90ZShmb250LHN0eWxlKQogICAgICBPdXRJbWFnZTpTZXQocmVxLCBvdXQpCiAgICAgIEluRmlsZU5hbWU6U2V0QXR0cnMoe0xJTktTX05hbWUgPSAiTm8gQXVkaW8gbG9hZGVkIixMQkxDX0xhYmVsQ29sb3IgPSAyLH0pCiAgICAgIHJldHVybgogICAgZWxzZQogICAgICBpbmZpbGVkdXAgPSBpbmZpbGUKCiAgICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgIC0tIFJlYWQgSGVhZGVyCiAgICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgIC0tIGNyZWF0ZSBhIHRhYmxlIGNvbnRhaW5pbmcgdGhlIGhlYWRlciBvZiB0aGUgZmlsZS4gVGhpcyB3aWxsIHRoZW4gYmUgdXNlZCB0byBnZXQgZmlsZSB0eXBlLCBzYW1wbGUgcmF0ZSBldGMuIEluIHdhdmUgZmlsZSB0aGUgaGVhZGVyIGlzIHN0b3JlZCBpbiB0aGUgZmlyc3QgNDQvMTA0IGJ5dGVzIG9mIHRoZSBmaWxlLgogICAgICBsb2NhbCBoZWFkZXIgPSBnZXRIZWFkZXIoZmlsZWRhdGEsIDEwNCkgLS0gT3JnIDQ0IC0gSnVuayAxMDQKCiAgICAgIC0tZ2V0IHNvbWUgdml0YWwgaW5mb3JtYXRpb24gb3V0IG9mIHRoZSBoZWFkZXIsIHRvIGRvIHNvbWUgZm9ybSBvZiBmaWxlIGZvcm1hdCBjaGVja2luZwogICAgICBpZiBoZWFkZXJbM10gPT0gaGVhZGVyWzRdIGFuZCBoZWFkZXJbMTddID09ICIxNiIgdGhlbgoKICAgICAgICBiaXRyYXRlID0gdG9udW1iZXIoaGVhZGVyWzI2XSkgKiAyNTYgKyB0b251bWJlcihoZWFkZXJbMjVdKQogICAgICAgIGNoYW5uZWxzID0gdG9udW1iZXIoaGVhZGVyWzIzXSkKICAgICAgICBiaXRkZXB0aCA9IHRvbnVtYmVyKGhlYWRlclszNV0pCiAgICAgIGVsc2UKICAgICAgICAtLSBKdW5rLUZvcm1hdCA/CiAgICAgICAgZGF0YV9wb3MgPSBzdHJpbmcuZmluZChmaWxlZGF0YSwgImRhdGEiKSAtLSA0IGJ5dGVzICJkYXRhIiB1bmQgNCBieXRlIFNpemUKCiAgICAgICAgaWYgaGVhZGVyWzEzXSA9PSAiNzQiIGFuZCBkYXRhX3BvcyB+PSBuaWwgdGhlbgogICAgICAgICAgLS0gSnVuay1Gb3JtYXQKCiAgICAgICAgICBkYXRhX3BvcyA9IGRhdGFfcG9zICsgOAogICAgICAgICAgYml0cmF0ZSA9IHRvbnVtYmVyKGhlYWRlcls2Ml0pICogMjU2ICsgdG9udW1iZXIoaGVhZGVyWzYxXSkKICAgICAgICAgIGNoYW5uZWxzID0gdG9udW1iZXIoaGVhZGVyWzU5XSkKICAgICAgICAgIGJpdGRlcHRoID0gdG9udW1iZXIoaGVhZGVyWzcxXSkKICAgICAgICBlbHNlCiAgICAgICAgICBwcmludCAoIlVuc3VwcG9ydGVkIGZpbGUgdHlwZS5cblBsZWFzZSBvbmx5IGxvYWQgb2YgdHlwZSBXQVYgKE1pY3Jvc29mdCkgc2lnbmVkIDE2LWJpdCBQQ00uIikKICAgICAgICAgIGVycm9yX3R4dCA9ICJVbnN1cHBvcnRlZCBmaWxlIHR5cGUiCiAgICAgICAgICBJbkZpbGVJbmZvOlNldEF0dHJzKHtMSU5LU19OYW1lID0gdmVyc2lvbixMQkxDX0xhYmVsQ29sb3IgPSAzLH0pCiAgICAgICAgICBpbmZpbGUgPSAiIgoKICAgICAgICAgIG91dCA9IG5vdGUoZm9udCxzdHlsZSkKICAgICAgICAgIE91dEltYWdlOlNldChyZXEsIG91dCkKICAgICAgICAgIHJldHVybgogICAgICAgIGVuZAogICAgICBlbmQKCiAgICAgIGlmIGJpdGRlcHRoIH49IDE2IHRoZW4KICAgICAgICBwcmludCAoIlBsZWFzZSBvbmx5IGxvYWQgb2YgdHlwZSBXQVYgKE1pY3Jvc29mdCkgc2lnbmVkIDE2LWJpdCBQQ00uIikKICAgICAgICBlcnJvcl90eHQgPSAiV3JvbmcgYml0LWRlcHRoIC0gb25seSAxNi1iaXQiCiAgICAgICAgSW5GaWxlOlNldEF0dHJzKHtMSU5LU19OYW1lID0gdmVyc2lvbixMQkxDX0xhYmVsQ29sb3IgPSAzLH0pCiAgICAgICAgaW5maWxlID0gIiIKCiAgICAgICAgb3V0ID0gbm90ZShmb250LHN0eWxlKQogICAgICAgIE91dEltYWdlOlNldChyZXEsIG91dCkKICAgICAgICByZXR1cm4KICAgICAgZW5kCgogICAgICBJbkZpbGVOYW1lOlNldEF0dHJzKHtMSU5LU19OYW1lID0gR2V0RmlsZW5hbWUoaW5maWxlZHVwKSxMQkxDX0xhYmVsQ29sb3IgPSAzLH0pCgogICAgICAtLSBBdWRpb2ZpbGUgc3VjY2Vzc2Z1bGwgbG9hZGVkCiAgICAgIGZyYW1lX251bWJlciA9ICgoI2ZpbGVkYXRhLzIvY2hhbm5lbHMpL2JpdHJhdGUpICogc2VsZi5Db21wOkdldFByZWZzKCJDb21wLkZyYW1lRm9ybWF0LlJhdGUiKQogICAgICBmbl9zdHIgPSBzdHJpbmcuZm9ybWF0KCJBdWRpbyglZyBrSHopICVkIGZyYW1lcyIsIGJpdHJhdGUvMTAwMCwgZnJhbWVfbnVtYmVyKQogICAgICBJbkZpbGVJbmZvOlNldEF0dHJzKHtMSU5LU19OYW1lID0gZm5fc3RyLExCTENfTGFiZWxDb2xvciA9IDMsfSkKCiAgICAgIGVycm9yX3R4dCA9ICIiCiAgICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgIC0tIEZpbGwgdGhlIHNhbXBsZWRhdGEgYXJyYXkgd2l0aCB0aGUgYXVkaW9kYXRhIGZyb20gRmlsZQogICAgICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgICAtLSBDbGVhciBTYW1wbGVhcnJheXMKICAgICAgc2FtcGxlZGF0YSA9IHt9ICAgLS0gTW9ubyBhbmQgYm90aCBjaGFubmVscwogICAgICBzYW1wbGVkYXRhbGVmdCA9IHt9CiAgICAgIHNhbXBsZWRhdGFyaWdodCA9IHt9CgogICAgICBzYW1wbGVkYXRhTFAgID0ge30KICAgICAgc2FtcGxlZGF0YUJQICA9IHt9CiAgICAgIHNhbXBsZWRhdGFIUCAgPSB7fQoKICAgICAgY29sbGVjdGdhcmJhZ2UoKQoKICAgIGlmIChjaGFubmVscyA9PSAxKSB0aGVuIC0tIE1vbm9maWxlCiAgICAgICAgZm9yIHggPSBkYXRhX3BvcywgbWF0aC5taW4oI2ZpbGVkYXRhLDIwOTcxNTIwMCksIDIgZG8gICAgICAgLS0yMDk3MTUyMDAgICAgLS01MjQyODgwMAogICAgICAgICAgdGFibGUuaW5zZXJ0KHNhbXBsZWRhdGEsIHNhbXBsZVJlYWQoZmlsZWRhdGEsIHgpLzY1NTM1KQogICAgICAgIGVuZAogICAgZWxzZQogICAgICAgIGZvciB4ID0gZGF0YV9wb3MsIG1hdGgubWluKCNmaWxlZGF0YSwyMDk3MTUyMDApLTIsIDQgZG8KICAgICAgICAgIGxlZnQgPSBzYW1wbGVSZWFkKGZpbGVkYXRhLHgpLzY1NTM1CiAgICAgICAgICByaWdodCA9IHNhbXBsZVJlYWQoZmlsZWRhdGEsIHgrMikvNjU1MzUKICAgICAgICAgIHRhYmxlLmluc2VydChzYW1wbGVkYXRhbGVmdCwgbGVmdCApCiAgICAgICAgICB0YWJsZS5pbnNlcnQoc2FtcGxlZGF0YXJpZ2h0LCByaWdodCApCgogICAgICBpZiB4IDw9IGRhdGFfcG9zICsgNTAgdGhlbgogICAgICAgICAtLXByaW50KCAibGVmdCIsIHNhbXBsZVJlYWQoZmlsZWRhdGEseCksICJyaWdodCIsIHNhbXBsZVJlYWQoZmlsZWRhdGEseCsyKSkKICAgICAgZW5kCgogICAgICAgICAgaWYgbWF0aC5hYnMobGVmdCkgPiBtYXRoLmFicyhyaWdodCkgdGhlbiAgLS0gU3RlcmVvKEJvdGgpIGdldCBNYXhpbXVtCiAgICAgICAgICAgIHRhYmxlLmluc2VydChzYW1wbGVkYXRhLGxlZnQpCiAgICAgICAgICBlbHNlCiAgICAgICAgICAgIHRhYmxlLmluc2VydChzYW1wbGVkYXRhLHJpZ2h0KQogICAgICAgICAgZW5kCiAgICAgICAgZW5kCiAgICAgIGVuZAogICAgZW5kCiAgZW5kIC0tbm90IGZpbGVkYXRhIG9yIGluZmlsZWR1cAogIC0tcHJpbnQgKCJGaWxlbORuZ2UiLCAjZmlsZWRhdGEtZGF0YV9wb3MpCiAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLS1zYW1wbGUgMSBwcm9jZXNzaW5nCiAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICB3YXZlZm9ybSA9IHt9ICAgIC0tIEF1ZGlvZGF0ZW4gZm9yIG9uZSBGcmFtZQogIGRhdGFfdGVtcCA9IHt9ICAgLS0gUGFyYW1ldGVyYXJyYXkKCiAgaWYgY2hhbm5lbHMgPT0gMSBvciBjaGFubmVsY2hvaWNlID09ICJCb3RoIiB0aGVuCiAgICBkYXRhX3RlbXAgPSBzYW1wbGVkYXRhCiAgZWxzZQogICAgaWYgY2hhbm5lbGNob2ljZSA9PSAiUmlnaHQiIHRoZW4KICAgICAgZGF0YV90ZW1wID0gc2FtcGxlZGF0YWxlZnQKICAgIGVsc2UKICAgICAgZGF0YV90ZW1wID0gc2FtcGxlZGF0YXJpZ2h0CiAgICBlbmQKICBlbmQKCiAgLS0gRmlsdGVyCiAgaWYgSW5GaWx0ZXJzOkdldFZhbHVlKHJlcSkuVmFsdWUgPT0gIkxQIiB0aGVuCiAgICBpZiAjc2FtcGxlZGF0YUxQID09IDAgdGhlbgogICAgICBpZiBiaXRyYXRlID09IDQ4MDAwIHRoZW4KICAgICAgICBzYW1wbGVkYXRhTFAgPSBpaXIoc2FtcGxlZGF0YSxBQ29lZl9MUCxCQ29lZl9MUCkKICAgICAgZWxzZQogICAgICAgIHNhbXBsZWRhdGFMUCA9IGlpcihzYW1wbGVkYXRhLEFDb2VmX0xQX1NGNDQxLEJDb2VmX0xQX1NGNDQxKQogICAgICBlbmQKICAgIGVuZAogICAgZGF0YV90ZW1wID0gc2FtcGxlZGF0YUxQCgogICAgLS1bdGZpcl9pbmkoZ3cyMSldCiAgICAtLXNhbXBsZWRhdGFmaWx0ZXIgPSAgdGZpcihzYW1wbGVkYXRhLGd3MjEpCiAgZWxzZQogICAgaWYgSW5GaWx0ZXJzOkdldFZhbHVlKHJlcSkuVmFsdWUgPT0gIkJQIiB0aGVuCiAgICAgIGlmICNzYW1wbGVkYXRhQlAgPT0gMCB0aGVuCiAgICAgICAgaWYgYml0cmF0ZSA9PSA0ODAwMCB0aGVuCiAgICAgICAgICBzYW1wbGVkYXRhQlAgPSBpaXIoc2FtcGxlZGF0YSxBQ29lZl9CUCxCQ29lZl9CUCkKICAgICAgICBlbHNlCiAgICAgICAgICBzYW1wbGVkYXRhQlAgPSBpaXIoc2FtcGxlZGF0YSxBQ29lZl9CUF9TRjQ0MSxCQ29lZl9CUF9TRjQ0MSkKICAgICAgICBlbmQKICAgICAgZW5kCiAgICAgIGRhdGFfdGVtcCA9IHNhbXBsZWRhdGFCUAogICAgZWxzZQogICAgICBpZiBJbkZpbHRlcnM6R2V0VmFsdWUocmVxKS5WYWx1ZSA9PSAiSFAiIHRoZW4KICAgICAgICBpZiAjc2FtcGxlZGF0YUhQID09IDAgdGhlbgogICAgICAgICAgaWYgYml0cmF0ZSA9PSA0ODAwMCB0aGVuCiAgICAgICAgICAgIHNhbXBsZWRhdGFIUCA9IGlpcihzYW1wbGVkYXRhLEFDb2VmX0hQLEJDb2VmX0hQKQogICAgICAgICAgZWxzZQogICAgICAgICAgICBzYW1wbGVkYXRhSFAgPSBpaXIoc2FtcGxlZGF0YSxBQ29lZl9IUF9TRjQ0MSxCQ29lZl9IUF9TRjQ0MSkKICAgICAgICAgIGVuZAogICAgICAgIGVuZAogICAgICAgIGRhdGFfdGVtcCA9IHNhbXBsZWRhdGFIUAogICAgICBlbmQKICAgIGVuZAogIGVuZAoKICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gR2V0IERhdGEgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICBpZiBzcGVjdHJ1bSA9PSAxIHRoZW4KICAgIHdpbmRvd3dpZHRoID0gbWF0aC5wb3coMixzcEZGVCkgKiA2NAogICAgcmVzb2x1dGlvbiA9IDEKICBlbmQKCgogIGlmIHN0ZWFkeXdhdmUgdGhlbgogICAgd2F2ZWZvcm0yID0ge30KCiAgICBmcmFtZWNvdW50ID0gSW5GcmFtZUNvdW50OkdldFZhbHVlKHJlcSkuVmFsdWUKICAgIHNlZWRmcmFtZSwgc3ViZnJhbWUgPSBtYXRoLm1vZGYgKGN1cnJlbnR0aW1lL2ZyYW1lY291bnQpCgogICAgd2F2ZWZvcm0gPSBnZXRTYW1wbGVEYXRhU3RlYWR5V2F2ZShkYXRhX3RlbXAsIGZyYW1lcmF0ZSwgc2VlZGZyYW1lLCBzdGFydGZyYW1lLCBwcm94eSwgem9vbSwgYml0cmF0ZSwgcmVzb2x1dGlvbiwgd2luZG93d2lkdGgsIGZyYW1lY291bnQpCgogICAgaWYgKHN1YmZyYW1lIH49IDApIHRoZW4KCiAgICAgIHdhdmVmb3JtMiA9IGdldFNhbXBsZURhdGFTdGVhZHlXYXZlKGRhdGFfdGVtcCwgZnJhbWVyYXRlLCBzZWVkZnJhbWUrMSwgc3RhcnRmcmFtZSwgcHJveHksIHpvb20sIGJpdHJhdGUsIHJlc29sdXRpb24sIHdpbmRvd3dpZHRoLCBmcmFtZWNvdW50KQogICAgICBmb3IgaSA9IDEsICN3YXZlZm9ybSBkbwogICAgICAgIHdhdmVmb3JtW2ldID0gKHdhdmVmb3JtW2ldICogKDEtc3ViZnJhbWUpKSArICh3YXZlZm9ybTJbaV0gKiAoc3ViZnJhbWUpKSAgLS0gVHJhbnNmZXIgZnJvbSBvbmUgU2VlZGZyYW1lIHRvIHRoZSBuZXh0CiAgICAgIGVuZAogICAgZW5kCiAgZWxzZQogICAgLS0gU3RhbmRhcmQgZGF0YSBmb3IgV2F2ZWZvcm0KICAgIHdhdmVmb3JtID0gZ2V0U2FtcGxlRGF0YShkYXRhX3RlbXAsIGZyYW1lcmF0ZSwgY3VycmVudHRpbWUsIHN0YXJ0ZnJhbWUsIHByb3h5LCB6b29tLCBiaXRyYXRlLHJlc29sdXRpb24sIHdpbmRvd3dpZHRoLCBub2lzZXRocmVzaG9sZCkKICBlbmQKCiAgaWYgd2F2ZWZvcm0gPT0gbmlsIHRoZW4KICAgIFByaW50ICgiTm8gRGF0YSAyIikgICAgIC0tIE1heWJlIG5ldmVyIGhpdAogICAgcmV0dXJuCiAgZW5kCgogIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLS0gQnVpbGQgdGhlIEltYWdlCiAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAtLSBQYXJhbWV0ZXIgb2YgdGhlIGltYWdlCgogIC0tIFNoYWRlcnRveS1BdWRpbwogIHBXID0gUGl4ZWwoe1IgPSAwLjEsIEcgPSAwLjIsIEIgPSAwLjMsIEEgPSAxfSkgLS1XYXZlcGl4ZWwKICBwUyA9IFBpeGVsKHtSID0gMC4xLCBHID0gMC4yLCBCID0gMC4zLCBBID0gMX0pIC0tU3Bla3RydW1waXhlbAogIHNoYWRlcnRveVNwZWMgPSB7fQoKICBsb2NhbCB0aGlja25lc3MgICA9IEluVGhpY2tuZXNzOkdldFZhbHVlKHJlcSkuVmFsdWUgICAtLTAuMDAyIC0tIG1heWJlIGFkanVzdGFibGUKCiAgbG9jYWwgZ2Fpbl9yICAgICA9IEluUmVkOkdldFZhbHVlKHJlcSkuVmFsdWUKICBsb2NhbCBnYWluX2cgICAgID0gSW5HcmVlbjpHZXRWYWx1ZShyZXEpLlZhbHVlCiAgbG9jYWwgZ2Fpbl9iICAgICA9IEluQmx1ZTpHZXRWYWx1ZShyZXEpLlZhbHVlCiAgbG9jYWwgZ2Fpbl9hICAgICA9IEluQWxwaGE6R2V0VmFsdWUocmVxKS5WYWx1ZQogIC0tIENyb3NzaGFpcgogIGxvY2FsIHRoaWNrbmVzc0NIICA9IEluVGhpY2tuZXNzQ0g6R2V0VmFsdWUocmVxKS5WYWx1ZQogIGxvY2FsIGdhaW5DSF9yICAgPSBJblJlZENIOkdldFZhbHVlKHJlcSkuVmFsdWUKICBsb2NhbCBnYWluQ0hfZyAgICAgPSBJbkdyZWVuQ0g6R2V0VmFsdWUocmVxKS5WYWx1ZQogIGxvY2FsIGdhaW5DSF9iICAgICA9IEluQmx1ZUNIOkdldFZhbHVlKHJlcSkuVmFsdWUKICBsb2NhbCBnYWluQ0hfYSAgICAgPSBJbkFscGhhQ0g6R2V0VmFsdWUocmVxKS5WYWx1ZQoKICBsb2NhbCBpYyA9IEltYWdlQ2hhbm5lbChvdXQsIDgpCiAgbG9jYWwgZnMgPSBGaWxsU3R5bGUoKQogIGxvY2FsIGNzID0gQ2hhbm5lbFN0eWxlKCkKCiAgY3MuVHlwZSA9ICJDVF9JbWFnZSIgIC0tPz8KICBpYzpTZXRTdHlsZUZpbGwoZnMpCgogIGxvY2FsIHggPSAwCiAgbG9jYWwgeSA9IDAuNSAqIChvdXQuSGVpZ2h0ICogb3V0LllTY2FsZSkgLyAob3V0LldpZHRoICogb3V0LlhTY2FsZSkKCiAgbG9jYWwgc2ggPSBTaGFwZSgpCgogIGxvY2FsIHAgPSBQaXhlbCh7QT0xfSkKCiAgbG9jYWwgcmdiID0gMQogIGxvY2FsIHJ6ID0gMQogIGxvY2FsIGd6ID0gMAogIGxvY2FsIGJ6ID0gMAoKICBsb2NhbCBjbnQgPSAwCiAgLS0uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4KICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIERpc3BsYXkgU3BlY3RydW0gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogIGlmIChzcGVjdHJ1bSA9PSAxKSB0aGVuCi0tdGltZXN0YW1wID0gb3MuY2xvY2soKQotLXByaW50ICgiVGltZUZGVDoiLCBvcy5jbG9jaygpLXRpbWVzdGFtcCkKICAgIC0tIERhdGFhY3F1aXNlCiAgICBzZGF0YSA9IHt9CiAgICBkYXRhX2ZmdCA9IHt9CgogICAgLS1GcmVxdWVuY3lWaXN1YWxpemF0aW9uCiAgICBsb2NhbCByZWYgPSAgd2luZG93d2lkdGgvc3RlcHMvMjYKICAgIGxvY2FsIHlfbWF4ID0gMDsKCiAgICBmb3IgaT0gMSwgd2luZG93d2lkdGgqMiBkbwogICAgICAtLSBXaW5kb3cgZnVuY3Rpb24KICAgICAgayA9IChpIC0gd2luZG93d2lkdGgpLygod2luZG93d2lkdGgqMikvbWF0aC5waSkgICAgICAgIC0tIDI1Ni9QaQogICAgICB0YWJsZS5pbnNlcnQoc2RhdGEsIChtYXRoLmNvcyhrKSptYXRoLmNvcyhrKSkqd2F2ZWZvcm1baV0pCiAgICBlbmQKCiAgICBkYXRhX2ZmdCA9IEZGVDIoc2RhdGEpCiAgICBkYXRhX3NwZWt0cnVtID0ge30KCi0tcHJpbnQgKCJUaW1lRkZUOiIsIG9zLmNsb2NrKCktdGltZXN0YW1wKQoKICAgIHk9MAogICAgc2g6TW92ZVRvKDEsLTEpCiAgICBzaDpMaW5lVG8oMCwwKQogICAgbG9jYWwgeF9vbGQgPSAwICAtLSBTbW9vdGhmdW5jdGlvbgogICAgbG9jYWwgeV9vbGQgPSAwCgogICAgZGlzcGxheV9kYXRhID0ge30KICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBFcXVpZGlzdGFudCBDdXRzCiAgICBpZiBlcXVpY3V0cyA9PSAxIHRoZW4KICAgICAgbG9jYWwgaiA9IDEKCiAgICAgIGRhdGFfc3Bla3RydW1fbWF4ID0gMAoKICAgICAgLS0gQW1wbGl0dWRlbnNwZWt0cnVtCiAgICAgIHkgPSBtYXRoLnNxcnQoIG1hdGgucG93KCBkYXRhX2ZmdFsxXVsxXSwgMikgKyBtYXRoLnBvdyAoZGF0YV9mZnRbMV1bMl0sIDIpICkKCiAgICAgIGZvciBpPTEsIHdpbmRvd3dpZHRoKzEgIGRvCiAgICAgICAgeCA9IGkgLyB3aW5kb3d3aWR0aAoKICAgICAgICBsb2NhbCB4bG9nID0gaiAvIHdpbmRvd3dpZHRoCiAgICAgICAgbG9jYWwgeGxvZyAgPSBtYXRoLmxvZzEwICh4bG9nKjAuOSswLjEpKzEgICAtLSBsb2dhcml0aG1pYyBncmFwaHMKCiAgICAgICAgZGF0YV9zcGVrdHJ1bVtpXSA9IG1hdGguc3FydCggbWF0aC5wb3coIGRhdGFfZmZ0W2ldWzFdLCAyKSArIG1hdGgucG93IChkYXRhX2ZmdFtpXVsyXSwgMikgKSAtLUFtcGxpdHVkZW5zcGVrdHJ1bQoKICAgICAgICBpZiBub3QgaXBjIHRoZW4KICAgICAgICAgIGRhdGFfc3Bla3RydW1fbWF4ID0gMAogICAgICAgICAgZGlzcGxheV9kYXRhW2ldID0geQoKCiAgICAgICAgICAtLSMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiAgICAgICAgICAtLSBTbW9vdGhidWZmZXIKICAgICAgICAgIGlmIGxhc3R0aW1lID09IGN1cnJlbnR0aW1lIC0gMSB0aGVuICAgLS0gbPxja2VubG9zIGxldHp0ZXIgZnJhbWUgaW0gQnVmZmVyICEKICAgICAgICAgICAgLS0gQWJzZW5rdW5nIHZlcmxhbmdzYW1lbgogICAgICAgICAgICBpZiAoeSA8IGxhc3RfZGlzcGxheV9kYXRhW2ldKSB0aGVuCiAgICAgICAgICAgICAgLS1kaXNwbGF5X2RhdGFbaV0gPSAobGFzdF9kaXNwbGF5X2RhdGFbaV0gLSB2YXIxKSAgLS0gVmFyaWFudGUxOiBrb25zdGFudGUgYWJ0cmFnCiAgICAgICAgICAgICAgZGlzcGxheV9kYXRhW2ldID0gKCBsYXN0X2Rpc3BsYXlfZGF0YVtpXSAtICggbGFzdF9kaXNwbGF5X2RhdGFbaV0gLSB5ICkgLyBJblNtb290aGZhY3RvcjpHZXRWYWx1ZShyZXEpLlZhbHVlICkKICAgICAgICAgICAgZW5kCiAgICAgICAgICBlbmQKICAgICAgICAgIGxhc3RfZGlzcGxheV9kYXRhW2ldID0gZGlzcGxheV9kYXRhW2ldICAtLSBhbHRlbiBXZXJ0IHNwZWljaGVybgoKICAgICAgICAgIHdoaWxlIHggPj0geGxvZyBkbwogICAgICAgICAgICBqID0gaiArIDEKICAgICAgICAgICAgZGF0YV9zcGVrdHJ1bV9tYXggPSBtYXRoLm1heChtYXRoLnNxcnQoIG1hdGgucG93KCBkYXRhX2ZmdFtqXVsxXSwgMikgKyBtYXRoLnBvdyAoZGF0YV9mZnRbal1bMl0sIDIpICksZGF0YV9zcGVrdHJ1bV9tYXgpCgogICAgICAgICAgICB4bG9nID0gaiAvIHdpbmRvd3dpZHRoCiAgICAgICAgICAgIHhsb2cgID0gbWF0aC5sb2cxMCAoeGxvZyowLjkrMC4xKSsxCiAgICAgICAgICAgIHkgPSBkYXRhX3NwZWt0cnVtX21heAogICAgICAgICAgZW5kCiAgICAgICAgZW5kCiAgICAgIGVuZAoKICAgICAgaWYgbm90IGlwYyB0aGVuCiAgICAgICAgbG9jYWwgbWF4ZGF0YSA9IDAKCiAgICAgICAgZm9yIGkgPSAxLCB3aW5kb3d3aWR0aCsxLCBzdGVwcyBkbwogICAgICAgICAgeCA9IGkvd2luZG93d2lkdGggLS0gMS93aW5kb3d3aWR0aAoKICAgICAgICAgIGlmIGFwcGVhcmFuY2UgPT0gMCB0aGVuICAgLS0gcm91Z2gKICAgICAgICAgICAgLS1zaDpMaW5lVG8oeCx5KQogICAgICAgICAgZW5kCgogICAgICAgICAgbWF4ZGF0YSA9IDAKCiAgICAgICAgICBpZiAoaTx3aW5kb3d3aWR0aCkgdGhlbgogICAgICAgICAgICBmb3IgayA9IDAsIHN0ZXBzLTEgZG8KICAgICAgICAgICAgICBtYXhkYXRhID0gbWF0aC5tYXgoZGlzcGxheV9kYXRhW2kra10sIG1heGRhdGEpCiAgICAgICAgICAgIGVuZAogICAgICAgICAgZWxzZQogICAgICAgICAgICBtYXhkYXRhID0gZGlzcGxheV9kYXRhW2ldCiAgICAgICAgICBlbmQKCiAgICAgICAgICB5ID0gKG1heGRhdGEgKiBGRlRzY2FsZS8xMCkgKiAob3V0LkhlaWdodCAqIG91dC5ZU2NhbGUpIC8gKG91dC5XaWR0aCAqIG91dC5YU2NhbGUpCgogICAgICAgICAgaWYgbGltaXQgPT0gMSB0aGVuCiAgICAgICAgICAgIGlmIHkgPiBsaW1pdF90aHJlc2hvbGQgdGhlbgogICAgICAgICAgICAgIGRpZmYgPSB5IC0gbGltaXRfdGhyZXNob2xkCiAgICAgICAgICAgICAgeSA9IGxpbWl0X3RocmVzaG9sZCArIGRpZmYgLyBsaW1pdF9jb21wcmVzc2lvbgogICAgICAgICAgICBlbmQKICAgICAgICAgIGVuZAoKICAgICAgICAgIC0tU2xvcGUtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgICAgICBpZiAoSW5TbG9wZTpHZXRWYWx1ZShyZXEpLlZhbHVlID09IDEpIHRoZW4KICAgICAgICAgICAgLS1wcmludCgiV2luZG93d2lkdGgiLHdpbmRvd3dpZHRoLHNwRkZULAogICAgICAgICAgICBpZiAoeCA+IEluQ29uZXJGcmVxOkdldFZhbHVlKHJlcSkuVmFsdWUpIHRoZW4KICAgICAgICAgICAgICB5ID0geSAqICgxKyh4IC0gSW5Db25lckZyZXE6R2V0VmFsdWUocmVxKS5WYWx1ZSkgKiBJblNsb3BlVmFsdWU6R2V0VmFsdWUocmVxKS5WYWx1ZSkKICAgICAgICAgICAgZW5kCiAgICAgICAgICBlbmQKCiAgICAgICAgICAtLURlY29tcHJlc3MtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgICAgICAgaWYgKEluRGVjb21wcmVzczpHZXRWYWx1ZShyZXEpLlZhbHVlID09IDEpIHRoZW4KICAgICAgICAgICAgbG9jYWwgZGN0ID0gSW5EQ1RocmVzaG9sZDpHZXRWYWx1ZShyZXEpLlZhbHVlCiAgICAgICAgICAgIGlmICh5PGRjdCkgdGhlbgogICAgICAgICAgICAgIHkgPSBtYXRoLm1heCgwLCB5LShkY3QteSkgKiBJbkRDU2NhbGU6R2V0VmFsdWUocmVxKS5WYWx1ZSkKICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgIGlmICh5IDwgSW5EQ0hpZ2hMaW5lOkdldFZhbHVlKHJlcSkuVmFsdWUpIHRoZW4KICAgICAgICAgICAgICAgIHkgPSBtYXRoLm1pbigxLjAsIHkrKHktZGN0KSAqIEluRENTY2FsZTpHZXRWYWx1ZShyZXEpLlZhbHVlICkKICAgICAgICAgICAgICBlbmQKICAgICAgICAgICAgZW5kCiAgICAgICAgICBlbmQKCiAgICAgICAgICBpZiBhcHBlYXJhbmNlID09IDAgdGhlbiAgIC0tIHJvdWdoCiAgICAgICAgICAgIHNoOkxpbmVUbyh4LHkpCiAgICAgICAgICBlbHNlCiAgICAgICAgICAgIGlmIGFwcGVhcmFuY2UgPT0gNCB0aGVuIC0tIE5lZWRsZXMKICAgICAgICAgICAgICBzaDpMaW5lVG8oeC0oMS8xOTIwKSwwKQogICAgICAgICAgICAgIHNoOkxpbmVUbyh4LHkpCiAgICAgICAgICAgICAgc2g6TGluZVRvKHgrKDEvMTkyMCksMCkKICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgIGlmIGFwcGVhcmFuY2UgPT0gMSB0aGVuIC0tIEJhcnMKICAgICAgICAgICAgICAgIGxvY2FsIHJlYyA9IFNoYXBlKCkKCiAgICAgICAgICAgICAgICByZWM6QWRkUmVjdGFuZ2xlKHgseCtzdGVwcy93aW5kb3d3aWR0aCwwLHksMCwxKQogICAgICAgICAgICAgICAgY3MuQ29sb3IgPSBQaXhlbCh7UiA9IGdhaW5fciwgRyA9IGdhaW5fZywgQiA9IGdhaW5fYiwgQSA9IGdhaW5fYX0pCiAgICAgICAgICAgICAgICBpYzpTaGFwZUZpbGwocmVjKQogICAgICAgICAgICAgICAgaWYgc2VsZi5TdGF0dXMgPT0gIk9LIiB0aGVuCiAgICAgICAgICAgICAgICAgIGljOlB1dFRvSW1hZ2UoIkNNX01lcmdlIiwgY3MpCiAgICAgICAgICAgICAgICBlbmQKICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICBpZiBhcHBlYXJhbmNlID09IDIgb3IgYXBwZWFyYW5jZSA9PSAzIHRoZW4gICAtLSBzbW9vdGgKICAgICAgICAgICAgICAgICAgZm9yIGogPSB4X29sZCwgeCwgMS8xOTIwIGRvICAgICAtLSBIRCAhIC0gSW50ZXJwb2xhdGUgYmV0d2VlbiB0aGUgc3VwcG9ydCBwb2ludHMKICAgICAgICAgICAgICAgICAgICBxID0gKGoteF9vbGQpLyh4LXhfb2xkKSAgICAgICAtLSBCZXppZXJ2YXJpYWJsZQoKICAgICAgICAgICAgICAgICAgICBpZiB5X29sZCA8IHkgdGhlbgogICAgICAgICAgICAgICAgICAgICAgLS0gUmlzaW5nIFZhbHVlcwogICAgICAgICAgICAgICAgICAgICAgaWYgKGoteF9vbGQpIDwgKHgteF9vbGQpLzIgdGhlbgogICAgICAgICAgICAgICAgICAgICAgICB5X3RtcCA9IHlfb2xkICsgKHkteV9vbGQpICogKDQgKiBtYXRoLnBvdyhxLDMpKQogICAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgICAgICB5X3RtcCA9IHlfb2xkICsgKHkteV9vbGQpICogKDEgLSBtYXRoLnBvdygtMiAqIHEgKyAyLCAzKSAvIDIpCiAgICAgICAgICAgICAgICAgICAgICBlbmQKICAgICAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgICAtLSBGYWxsaW5nIFZhbHVlcwogICAgICAgICAgICAgICAgICAgICAgaWYgKGoteF9vbGQpIDwgKHgteF9vbGQpLzIgdGhlbgogICAgICAgICAgICAgICAgICAgICAgICB5X3RtcCA9IHlfb2xkIC0gKHlfb2xkLXkpICogKDQgKiBtYXRoLnBvdyhxLDMpKQogICAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgICAgICB5X3RtcCA9IHlfb2xkIC0gKHlfb2xkLXkpICogKDEgLSBtYXRoLnBvdygtMiAqIHEgKyAyLCAzKSAvIDIpCiAgICAgICAgICAgICAgICAgICAgICBlbmQKICAgICAgICAgICAgICAgICAgICBlbmQKICAgICAgICAgICAgICAgICAgICBzaDpMaW5lVG8oaix5X3RtcCkKICAgICAgICAgICAgICAgICAgICBpZiBhcHBlYXJhbmNlID09IDMgdGhlbiAgICAtLVNtb290aCBGaWxsZWQKICAgICAgICAgICAgICAgICAgICAgIHNoOkxpbmVUbyhqLDApCiAgICAgICAgICAgICAgICAgICAgICAtLXNoOk1vdmVUbyhqLHlfdG1wKQogICAgICAgICAgICAgICAgICAgIGVuZAogICAgICAgICAgICAgICAgICBlbmQKICAgICAgICAgICAgICAgICAgeF9vbGQgPSB4CiAgICAgICAgICAgICAgICAgIHlfb2xkID0geQogICAgICAgICAgICAgICAgZW5kCiAgICAgICAgICAgICAgZW5kCiAgICAgICAgICAgIGVuZAogICAgICAgICAgZW5kCiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgICAgICBpZiAoSW5GcmVxdWVuY3lWaXN1YWxpemF0aW9uOkdldFZhbHVlKHJlcSkuVmFsdWUgPT0gMSkgdGhlbgogICAgICAgICAgICAtLSBCZWb8bGxlbiBkZXMgRkZUX2RhdGEgYXJyYXkKICAgICAgICAgICAgbnIgPSAwCiAgICAgICAgICAgIGNudCA9IGNudCArIDEKICAgICAgICAgICAgeV9tYXggPSBtYXRoLm1heCh5X21heCx5KTsKCiAgICAgICAgICAgIGlmIGNudCA+IHJlZiB0aGVuCiAgICAgICAgICAgICAgICB0YWJsZS5pbnNlcnQoZmZ0X2RhdGEsIHkpCiAgICAgICAgICAgICAgICBjbnQgPSAwCiAgICAgICAgICAgICAgICB5X21heCA9IDAKICAgICAgICAgICAgICAgIGlmIG5yPT0wIHRoZW4KICAgICAgICAgICAgICAgICAgLS1wcmludCgiQXJyYXkwIix5KQogICAgICAgICAgICAgICAgICAtLW5yID0gMQogICAgICAgICAgICAgICAgZW5kCiAgICAgICAgICAgIGVuZAogICAgICAgICAgZW5kCgogICAgICAgIGVuZCAgLS0gRm9yIGk9MSB0byB3aW5kb3d3aWR0aAogICAgICAgIGlmIGFwcGVhcmFuY2UgPT0gNCB0aGVuIC0tIE5lZWRsZXMKICAgICAgICAgIHNoOkxpbmVUbygoMS0oMS93aW5kb3d3aWR0aCkpLDApCiAgICAgICAgICBzaDpMaW5lVG8oKDEtKDEvd2luZG93d2lkdGgpKSx5KQogICAgICAgIGVuZAogICAgICBlbmQgLS1pcGMKICAgIC0tKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKICAgIGVsc2UgLS0gZXF1aWRpc3RhbnQKICAgICAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBMb2dhcml0aG1pYwogICAgICBzaDpNb3ZlVG8oMSwtMSkKICAgICAgc2g6TGluZVRvKDAsMCkKCiAgICAgIHN4PTAKCiAgICAgIGZvciBpPTEsIHdpbmRvd3dpZHRoIGRvICAgICAgICAgICAtLSBTaG93IFNwZWN0cnVtCiAgICAgICAgZGF0YV9zcGVrdHJ1bVtpXSA9IG1hdGguc3FydCggbWF0aC5wb3coIGRhdGFfZmZ0W2ldWzFdLCAyKSArIG1hdGgucG93IChkYXRhX2ZmdFtpXVsyXSwgMikgKSAtLUFtcGxpdHVkZW5zcGVrdHJ1bQogICAgICAgIGlmIG5vdCBpcGMgdGhlbgogICAgICAgICAgeCA9IGkgLyB3aW5kb3d3aWR0aAogICAgICAgICAgeCAgPSBtYXRoLmxvZzEwICh4KjAuOSswLjEpKzEgICAtLSBsb2dhcml0aG1pYyBncmFwaHMKCiAgICAgICAgICAtLSBBcHBlYXJhbmNlIG9mIHRoZSBTcGVjdHJ1bQogICAgICAgICAgaWYgYXBwZWFyYW5jZSA9PSAxIHRoZW4gICAtLSBiYXJzCiAgICAgICAgICAgIHNoOkxpbmVUbyh4LHkpCiAgICAgICAgICBlbmQKCiAgICAgICAgICAtLU9yaWdpbmFsCiAgICAgICAgICAtLXkgPSAobWF0aC5sb2cxMChkYXRhX3NwZWt0cnVtW2ldICogRkZUc2NhbGUrMSkpICogKG91dC5IZWlnaHQgKiBvdXQuWVNjYWxlKSAvIChvdXQuV2lkdGggKiBvdXQuWFNjYWxlKQoKICAgICAgICAgIC0tIExvZ2FyaXRobWljCiAgICAgICAgICBMb2dLID0gbWF0aC5wb3coMTAsSW5Mb2dLOkdldFZhbHVlKHJlcSkuVmFsdWUpCiAgICAgICAgICAtLXByaW50KCJSb2h3ZXJ0ZTogIixkYXRhX3NwZWt0cnVtW2ldLCBtYXRoLmxvZzEwKGRhdGFfc3Bla3RydW1baV0qIEZGVHNjYWxlKzEpKQoKICAgICAgICAgIGlmIChJbkxvZ0s6R2V0VmFsdWUocmVxKS5WYWx1ZSA9PSAwKSB0aGVuCiAgICAgICAgICAgIHNwZWNTY2FsZSA9IGRhdGFfc3Bla3RydW1baV0gKiBGRlRzY2FsZSsxCiAgICAgICAgICAgIHNwZWNTY2FsZTIgPSAxLjAKICAgICAgICAgIGVsc2UKICAgICAgICAgICAgc3BlY1NjYWxlID0gZGF0YV9zcGVrdHJ1bVtpXSAqIExvZ0sgKiBGRlRzY2FsZSsxCiAgICAgICAgICAgIHNwZWNTY2FsZTIgPSAxL0luTG9nSzpHZXRWYWx1ZShyZXEpLlZhbHVlLzIKICAgICAgICAgIGVuZAoKICAgICAgICAgIHkgPSBzcGVjU2NhbGUyICogKG1hdGgubG9nMTAoc3BlY1NjYWxlKSkgKiAob3V0LkhlaWdodCAqIG91dC5ZU2NhbGUpIC8gKG91dC5XaWR0aCAqIG91dC5YU2NhbGUpCgogICAgICAtLSMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiAgICAgICAgICAtLSBTbW9vdGhidWZmZXIKICAgICAgICAgIGlmIGxhc3R0aW1lID09IGN1cnJlbnR0aW1lIC0gMSB0aGVuICAgLS0gbPxja2VubG9zIGxldHp0ZXIgZnJhbWUgaW0gQnVmZmVyICEKICAgICAgICAgICAtLSBBYnNlbmt1bmcgdmVybGFuZ3NhbWVuCiAgICAgICAgICAgIGlmICh5IDwgbGFzdF9kaXNwbGF5X2RhdGFbaV0pIHRoZW4KICAgICAgICAgICAgICB5ID0gKCBsYXN0X2Rpc3BsYXlfZGF0YVtpXSAtICggbGFzdF9kaXNwbGF5X2RhdGFbaV0gLSB5ICkgLyBJblNtb290aGZhY3RvcjpHZXRWYWx1ZShyZXEpLlZhbHVlICkKICAgICAgICAgICAgZW5kCiAgICAgICAgICBlbmQKICAgICAgICAgIGxhc3RfZGlzcGxheV9kYXRhW2ldID0geSAgLS0gYWx0ZW4gV2VydCBzcGVpY2hlcm4KCiAgICAgICAgICBpZiBsaW1pdCA9PSAxIHRoZW4KICAgICAgICAgICAgaWYgeSA+IGxpbWl0X3RocmVzaG9sZCB0aGVuCiAgICAgICAgICAgICAgZGlmZiA9IHkgLSBsaW1pdF90aHJlc2hvbGQKICAgICAgICAgICAgICB5ID0gbGltaXRfdGhyZXNob2xkICsgZGlmZiAvIGxpbWl0X2NvbXByZXNzaW9uCiAgICAgICAgICAgIGVuZAogICAgICAgICAgZW5kCgogICAgICAgICAgLS1TbG9wZS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICAgICAgIGlmIChJblNsb3BlOkdldFZhbHVlKHJlcSkuVmFsdWUgPT0gMSkgdGhlbgogICAgICAgICAgICAtLXByaW50KCJXaW5kb3d3aWR0aCIsd2luZG93d2lkdGgsc3BGRlQsCiAgICAgICAgICAgIGlmICh4ID4gSW5Db25lckZyZXE6R2V0VmFsdWUocmVxKS5WYWx1ZSkgdGhlbgogICAgICAgICAgICAgIHkgPSB5ICogKDErKHggLSBJbkNvbmVyRnJlcTpHZXRWYWx1ZShyZXEpLlZhbHVlKSAqIEluU2xvcGVWYWx1ZTpHZXRWYWx1ZShyZXEpLlZhbHVlKQogICAgICAgICAgICBlbmQKICAgICAgICAgIGVuZAoKICAgICAgICAgIC0tRGVjb21wcmVzcy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgICAgICBpZiAoSW5EZWNvbXByZXNzOkdldFZhbHVlKHJlcSkuVmFsdWUgPT0gMSkgdGhlbgogICAgICAgICAgICBsb2NhbCBkY3QgPSBJbkRDVGhyZXNob2xkOkdldFZhbHVlKHJlcSkuVmFsdWUKICAgICAgICAgICAgaWYgKHk8ZGN0KSB0aGVuCiAgICAgICAgICAgICAgeSA9IG1hdGgubWF4KDAsIHktKGRjdC15KSAqIEluRENTY2FsZTpHZXRWYWx1ZShyZXEpLlZhbHVlKQogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgaWYgKHkgPCBJbkRDSGlnaExpbmU6R2V0VmFsdWUocmVxKS5WYWx1ZSkgdGhlbgogICAgICAgICAgICAgICAgeSA9IG1hdGgubWluKDEuMCwgeSsoeS1kY3QpICogSW5EQ1NjYWxlOkdldFZhbHVlKHJlcSkuVmFsdWUgKQogICAgICAgICAgICAgIGVuZAogICAgICAgICAgICBlbmQKICAgICAgICAgIGVuZAoKICAgICAgICAgIC0tU2hhZGVydG95IEF1ZGlvLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgICAgICBmb3Igaj0wLCBtYXRoLmNlaWwoKDUxMi93aW5kb3d3aWR0aCkpLTEgZG8KICAgICAgICAgICAgLS0gcHJpbnQoIlN0YXJ0OiAiLHN4LHksICh3aW5kb3d3aWR0aH49MTAyNCBvciBpJTIpICkKICAgICAgICAgICAgaWYgKHdpbmRvd3dpZHRofj0xMDI0IG9yIChpJTIpID09IDEpIHRoZW4gLS0gUG9vbCBoYWxiaWVyZW4KICAgICAgICAgICAgICBzeCA9IHN4KzEKICAgICAgICAgICAgICBzaGFkZXJ0b3lTcGVjW3N4XSA9IHkKICAgICAgICAgICAgZW5kCiAgICAgICAgICBlbmQKCiAgICAgICAgICBpZiBhcHBlYXJhbmNlID09IDAgb3IgYXBwZWFyYW5jZSA9PSAxIHRoZW4gICAgIC0tIHJvdWdoCiAgICAgICAgICAgIHNoOkxpbmVUbyh4LHkpCiAgICAgICAgICBlbHNlCiAgICAgICAgICAgIGlmIGFwcGVhcmFuY2UgPT0gMiBvciBhcHBlYXJhbmNlID09IDMgdGhlbiAgIC0tIHNtb290aAogICAgICAgICAgICAgIGZvciBqID0geF9vbGQsIHgsIDEvMTkyMCBkbyAgICAgLS0gSEQgISAtIEludGVycG9sYXRlIGJldHdlZW4gdGhlIHN1cHBvcnQgcG9pbnRzCiAgICAgICAgICAgICAgICBxID0gKGoteF9vbGQpLyh4LXhfb2xkKSAgICAgICAtLSBCZXppZXJ2YXJpYWJsZQoKICAgICAgICAgICAgICAgIGlmIHlfb2xkIDwgeSB0aGVuCiAgICAgICAgICAgICAgICAgIC0tIFJpc2luZyBWYWx1ZXMKICAgICAgICAgICAgICAgICAgaWYgKGoteF9vbGQpIDwgKHgteF9vbGQpLzIgdGhlbgogICAgICAgICAgICAgICAgICAgIHlfdG1wID0geV9vbGQgKyAoeS15X29sZCkgKiAoNCAqIG1hdGgucG93KHEsMykpCiAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICB5X3RtcCA9IHlfb2xkICsgKHkteV9vbGQpICogKDEgLSBtYXRoLnBvdygtMiAqIHEgKyAyLCAzKSAvIDIpCiAgICAgICAgICAgICAgICAgIGVuZAogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAtLSBGYWxsaW5nIFZhbHVlcwogICAgICAgICAgICAgICAgICBpZiAoai14X29sZCkgPCAoeC14X29sZCkvMiB0aGVuCiAgICAgICAgICAgICAgICAgICAgeV90bXAgPSB5X29sZCAtICh5X29sZC15KSAqICg0ICogbWF0aC5wb3cocSwzKSkKICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIHlfdG1wID0geV9vbGQgLSAoeV9vbGQteSkgKiAoMSAtIG1hdGgucG93KC0yICogcSArIDIsIDMpIC8gMikKICAgICAgICAgICAgICAgICAgZW5kCiAgICAgICAgICAgICAgICBlbmQKICAgICAgICAgICAgICAgIHNoOkxpbmVUbyhqLHlfdG1wKQogICAgICAgICAgICAgICAgaWYgYXBwZWFyYW5jZSA9PSAzIHRoZW4gICAgLS1TbW9vdGggRmlsbGVkCiAgICAgICAgICAgICAgICAgIHNoOkxpbmVUbyhqLDApCiAgICAgICAgICAgICAgICBlbmQKICAgICAgICAgICAgICBlbmQKICAgICAgICAgICAgICB4X29sZCA9IHgKICAgICAgICAgICAgICB5X29sZCA9IHkKCiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAtLSBOZWVkbGVzCiAgICAgICAgICAgICAgc2g6TGluZVRvKHgtMS8xOTIwLDApCiAgICAgICAgICAgICAgc2g6TGluZVRvKHgseSkKICAgICAgICAgICAgICBzaDpMaW5lVG8oeCsxLzE5MjAsMCkKICAgICAgICAgICAgZW5kCiAgICAgICAgICBlbmQgIC0tIGFwcGVhcmFuY2UgMgogICAgICAgIGVuZCAtLSBpcGMKCiAgICAgICAgICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgICAgICBpZiAoSW5GcmVxdWVuY3lWaXN1YWxpemF0aW9uOkdldFZhbHVlKHJlcSkuVmFsdWUgPT0gMSkgdGhlbgogICAgICAgICAgICAtLSBCZWb8bGxlbiBkZXMgRkZUX2RhdGEgYXJyYXkKICAgICAgICAgICAgY250ID0gY250ICsgMQogICAgICAgICAgICB5X21heCA9IG1hdGgubWF4KHlfbWF4LHkpOwoKICAgICAgICAgICAgaWYgY250ID4gcmVmIHRoZW4KICAgICAgICAgICAgICB0YWJsZS5pbnNlcnQoZmZ0X2RhdGEsIHkpCiAgICAgICAgICAgICAgY250ID0gMAogICAgICAgICAgICAgIHlfbWF4ID0gMAogICAgICAgICAgICBlbmQKICAgICAgICAgIGVuZAogICAgICAgZW5kIC0tIEZvcjogc2hvdyBTcGVjdHJ1bSBMb2dhcml0aG1pYwogICAgZW5kIC0tIHNob3cgU3BlY3RydW0gZXF1aWRpc3RhbnQKCiAgICAtLS0tLS0tLS0tLS0tLS0tLSBFbG9uZ2F0aW9uIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIGlmIGVvbiB0aGVuCgogICAgICBlX3NlbCA9IEluRWxvblNlbGVjdGlvbjpHZXRWYWx1ZShyZXEpLlZhbHVlCiAgICAgIHNtb290aCA9ICAobGFzdHRpbWUgPT0gY3VycmVudHRpbWUgLSAxKQogICAgICAtLXByaW50KGxhc3R0aW1lLGN1cnJlbnR0aW1lLCBzbW9vdGgpCiAgICAgIC0tIENhbGN1bGF0ZSBFbG9uZ2F0aW9uCiAgICAgIGlmIEluRU9uOkdldFZhbHVlKHJlcSkuVmFsdWUgPT0gMSB0aGVuCiAgICAgICAgcmVjX3dpZHRoID0gSW5SZWNXaWR0aDpHZXRWYWx1ZShyZXEpLlZhbHVlCiAgICAgICAgcmVjX29mZnNldCA9IG1hdGgubWluKEluUmVjT2Zmc2V0OkdldFZhbHVlKHJlcSkuVmFsdWUsIDEgLSByZWNfd2lkdGgpCiAgICAgICAgZWxvbmdhdGlvbm9wZXJhdGlvbiA9IEluRWxvbmdhdGlvbk9wZXJhdGlvbjpHZXRWYWx1ZShyZXEpLlZhbHVlCgogICAgICAgIGVsb25nYXRpb25QcmUgPSBjYWxjX2Vsb24od2luZG93d2lkdGgscmVjX29mZnNldCxyZWNfd2lkdGgsZGF0YV9zcGVrdHJ1bSxGRlRzY2FsZSxsaW1pdCxsaW1pdF90aHJlc2hvbGQsbGltaXRfY29tcHJlc3Npb24sZWxvbmdhdGlvbm9wZXJhdGlvbiwgc21vb3RoKQogICAgICAgIGVsb25nYXRpb25QcmUxID0gZWxvbmdhdGlvblByZSAqIEluRWxvbmdhdGlvbkFtcGxpZnk6R2V0VmFsdWUocmVxKS5WYWx1ZSArIEluRWxvbmdhdGlvbk9mZnNldDpHZXRWYWx1ZShyZXEpLlZhbHVlIC0tIHNjYWxlCgogICAgICAtLSBTbW9vdGhidWZmZXIKICAgICAgaWYgc21vb3RoIHRoZW4gICAtLSBs/GNrZW5sb3MgbGV0enRlciBmcmFtZSBpbSBCdWZmZXIgIQogICAgICAgIC0tIEFic2Vua3VuZyB2ZXJsYW5nc2FtZW4KICAgICAgICBpZiAoZWxvbmdhdGlvblByZTEgPCBsYXN0X2Vsb24xX2RhdGEpIHRoZW4KICAgICAgICAgIGVsb25nYXRpb25QcmUxID0gKCBsYXN0X2Vsb24xX2RhdGEgLSAoIGxhc3RfZWxvbjFfZGF0YSAtIGVsb25nYXRpb25QcmUxICkgLyBJblNtb290aGZhY3RvcjpHZXRWYWx1ZShyZXEpLlZhbHVlICkKICAgICAgICAgIC0tcHJpbnQoIlNtb290aCA6IiwgeSwgbGFzdF9kaXNwbGF5X2RhdGFbaV0sIiBkaWZmOiIsIHktbGFzdF9kaXNwbGF5X2RhdGFbaV0pCiAgICAgICAgZW5kCiAgICAgIGVuZAogICAgICBsYXN0X2Vsb24xX2RhdGEgPSBlbG9uZ2F0aW9uUHJlMSAgLS0gYWx0ZW4gV2VydCBzcGVpY2hlcm4KCiAgICAgIGVuZAogICAgICBpZiBJbkVPbjI6R2V0VmFsdWUocmVxKS5WYWx1ZSA9PSAxIHRoZW4KICAgICAgICByZWNfd2lkdGgyID0gSW5SZWNXaWR0aDI6R2V0VmFsdWUocmVxKS5WYWx1ZQogICAgICAgIHJlY19vZmZzZXQyID0gbWF0aC5taW4oSW5SZWNPZmZzZXQyOkdldFZhbHVlKHJlcSkuVmFsdWUsIDEgLSByZWNfd2lkdGgpCiAgICAgICAgZWxvbmdhdGlvbm9wZXJhdGlvbiA9IEluRWxvbmdhdGlvbk9wZXJhdGlvbjI6R2V0VmFsdWUocmVxKS5WYWx1ZQoKICAgICAgICBlbG9uZ2F0aW9uUHJlID0gY2FsY19lbG9uKHdpbmRvd3dpZHRoLHJlY19vZmZzZXQyLHJlY193aWR0aDIsZGF0YV9zcGVrdHJ1bSxGRlRzY2FsZSxsaW1pdCxsaW1pdF90aHJlc2hvbGQsbGltaXRfY29tcHJlc3Npb24sZWxvbmdhdGlvbm9wZXJhdGlvbiwgc21vb3RoKQogICAgICAgIGVsb25nYXRpb24yID0gZWxvbmdhdGlvblByZSAqIEluRWxvbmdhdGlvbkFtcGxpZnkyOkdldFZhbHVlKHJlcSkuVmFsdWUgKyBJbkVsb25nYXRpb25PZmZzZXQyOkdldFZhbHVlKHJlcSkuVmFsdWUgLS0gc2NhbGUKCiAgICAgIC0tIFNtb290aGJ1ZmZlcgogICAgICBpZiBzbW9vdGggdGhlbiAgIC0tIGz8Y2tlbmxvcyBsZXR6dGVyIGZyYW1lIGltIEJ1ZmZlciAhCiAgICAgICAgLS0gQWJzZW5rdW5nIHZlcmxhbmdzYW1lbgogICAgICAgIGlmIChlbG9uZ2F0aW9uMiA8IGxhc3RfZWxvbjJfZGF0YSkgdGhlbgogICAgICAgICAgZWxvbmdhdGlvbjIgPSAoIGxhc3RfZWxvbjJfZGF0YSAtICggbGFzdF9lbG9uMl9kYXRhIC0gZWxvbmdhdGlvbjIgKSAvIEluU21vb3RoZmFjdG9yOkdldFZhbHVlKHJlcSkuVmFsdWUgKQogICAgICAgICAgLS1wcmludCgiU21vb3RoIDoiLCB5LCBsYXN0X2Rpc3BsYXlfZGF0YVtpXSwiIGRpZmY6IiwgeS1sYXN0X2Rpc3BsYXlfZGF0YVtpXSkKICAgICAgICBlbmQKICAgICAgZW5kCiAgICAgIGxhc3RfZWxvbjJfZGF0YSA9IGVsb25nYXRpb24yICAtLSBhbHRlbiBXZXJ0IHNwZWljaGVybgoKCiAgICAgIGVuZAogICAgICBpZiBJbkVPbjM6R2V0VmFsdWUocmVxKS5WYWx1ZSA9PSAxIHRoZW4KICAgICAgICByZWNfd2lkdGgzID0gSW5SZWNXaWR0aDM6R2V0VmFsdWUocmVxKS5WYWx1ZQogICAgICAgIHJlY19vZmZzZXQzID0gbWF0aC5taW4oSW5SZWNPZmZzZXQzOkdldFZhbHVlKHJlcSkuVmFsdWUsIDEgLSByZWNfd2lkdGgpCiAgICAgICAgZWxvbmdhdGlvbm9wZXJhdGlvbiA9IEluRWxvbmdhdGlvbk9wZXJhdGlvbjM6R2V0VmFsdWUocmVxKS5WYWx1ZQoKICAgICAgICBlbG9uZ2F0aW9uUHJlID0gY2FsY19lbG9uKHdpbmRvd3dpZHRoLHJlY19vZmZzZXQzLHJlY193aWR0aDMsZGF0YV9zcGVrdHJ1bSxGRlRzY2FsZSxsaW1pdCxsaW1pdF90aHJlc2hvbGQsbGltaXRfY29tcHJlc3Npb24sZWxvbmdhdGlvbm9wZXJhdGlvbiwgc21vb3RoKQogICAgICAgIGVsb25nYXRpb24zID0gZWxvbmdhdGlvblByZSAqIEluRWxvbmdhdGlvbkFtcGxpZnkzOkdldFZhbHVlKHJlcSkuVmFsdWUgKyBJbkVsb25nYXRpb25PZmZzZXQzOkdldFZhbHVlKHJlcSkuVmFsdWUgLS0gc2NhbGUKCiAgICAgIC0tIFNtb290aGJ1ZmZlcgogICAgICBpZiBzbW9vdGggdGhlbiAgIC0tIGz8Y2tlbmxvcyBsZXR6dGVyIGZyYW1lIGltIEJ1ZmZlciAhCiAgICAgICAgLS0gQWJzZW5rdW5nIHZlcmxhbmdzYW1lbgogICAgICAgIGlmIChlbG9uZ2F0aW9uMyA8IGxhc3RfZWxvbjNfZGF0YSkgdGhlbgogICAgICAgICAgZWxvbmdhdGlvbjMgPSAoIGxhc3RfZWxvbjNfZGF0YSAtICggbGFzdF9lbG9uM19kYXRhIC0gZWxvbmdhdGlvbjMgKSAvIEluU21vb3RoZmFjdG9yOkdldFZhbHVlKHJlcSkuVmFsdWUgKQogICAgICAgICAgLS1wcmludCgiU21vb3RoIDoiLCB5LCBsYXN0X2Rpc3BsYXlfZGF0YVtpXSwiIGRpZmY6IiwgeS1sYXN0X2Rpc3BsYXlfZGF0YVtpXSkKICAgICAgICBlbmQKICAgICAgZW5kCiAgICAgIGxhc3RfZWxvbjNfZGF0YSA9IGVsb25nYXRpb24zICAtLSBhbHRlbiBXZXJ0IHNwZWljaGVybgoKICAgIGVuZAoKICAgIGlmIG5vdCBpcGMgdGhlbgoKICAgICAgLS0gU2hvdyBTZWxlY3Rpb250b29sCiAgICAgIGlmIGVfc2VsID09ICJFMSIgdGhlbgogICAgICAgIGVfY29sID0ge1IgPSAxLCBHID0gMC40MjUsIEIgPSAwLCBBID0gMX0gLS0gbG92bGV5IG9yYW5nZQogICAgICAgIGVsb25fZGlzcGxheSA9IGVsb25nYXRpb25QcmUxCiAgICAgIGVsc2VpZiBlX3NlbCA9PSAiRTIiIHRoZW4KICAgICAgICBlX2NvbCA9IHtSID0gMSwgRyA9IDAuNDI1LCBCID0gMSwgQSA9IDF9ICAtLSBsb3ZsZXkgcGluawogICAgICAgIHJlY193aWR0aCA9IHJlY193aWR0aDIKICAgICAgICByZWNfb2Zmc2V0ID0gcmVjX29mZnNldDIKICAgICAgICBlbG9uX2Rpc3BsYXkgPSBlbG9uZ2F0aW9uMgogICAgICBlbHNlICAgICAgICAgICAgICAtLSBFMwogICAgICAgIGVfY29sID0ge1IgPSAwLjQyNSwgRyA9IDAuNDI1LCBCID0gMCwgQSA9IDF9ICAtLSBsb3ZsZXkgZ3JlZW4KICAgICAgICByZWNfd2lkdGggPSByZWNfd2lkdGgzCiAgICAgICAgcmVjX29mZnNldCA9IHJlY19vZmZzZXQzCiAgICAgICAgZWxvbl9kaXNwbGF5ID0gZWxvbmdhdGlvbjMKICAgICAgZW5kCgogICAgICAtLSBEaXNwbGF5IEVsb25nYXRpb25iYW5kCiAgICAgIGlmIChJbkVPbjpHZXRWYWx1ZShyZXEpLlZhbHVlID09IDEgYW5kIGVfc2VsID09ICJFMSIpIG9yIChJbkVPbjI6R2V0VmFsdWUocmVxKS5WYWx1ZSA9PSAxIGFuZCBlX3NlbCA9PSAiRTIiKSBvciAoSW5FT24zOkdldFZhbHVlKHJlcSkuVmFsdWUgPT0gMSBhbmQgZV9zZWwgPT0gIkUzIikgdGhlbgoKICAgICAgICAgIGlmIEluSGlkZVNlbGVjdGlvblRvb2wyOkdldFZhbHVlKHJlcSkuVmFsdWUgPT0gMCB0aGVuCiAgICAgICAgICAtLXByaW50KCJPZmZzZXQiLHJlY19vZmZzZXQpCiAgICAgICAgICBsb2NhbCByZWM9IFNoYXBlKCkKICAgICAgICAgIHJlYzpBZGRSZWN0YW5nbGUocmVjX29mZnNldCArIHJlY193aWR0aCxyZWNfb2Zmc2V0LDAsMC41NywwLDEpCiAgICAgICAgICBjcy5Db2xvciA9IFBpeGVsKGVfY29sKQogICAgICAgICAgaWM6U2hhcGVGaWxsKHJlYykKICAgICAgICAgIGlmIHNlbGYuU3RhdHVzID09ICJPSyIgdGhlbgogICAgICAgICAgICBpYzpQdXRUb0ltYWdlKCJDTV9NZXJnZSIsIGNzKQogICAgICAgICAgZW5kCgogICAgICAgICAgbG9jYWwgcmVjMj0gU2hhcGUoKQogICAgICAgICAgcmVjMjpBZGRSZWN0YW5nbGUocmVjX29mZnNldCArIHJlY193aWR0aCxyZWNfb2Zmc2V0LDAsZWxvbl9kaXNwbGF5LDAsMSkKICAgICAgICAgIGNzLkNvbG9yID0gUGl4ZWwoe1IgPSAwLjUsIEcgPSAwLjA1LCBCID0gMC4wNSwgQSA9IDF9KSAtLSBsb3ZsZXkgcmVkCiAgICAgICAgICBpYzpTaGFwZUZpbGwocmVjMikKICAgICAgICAgIGlmIHNlbGYuU3RhdHVzID09ICJPSyIgdGhlbgogICAgICAgICAgICBpYzpQdXRUb0ltYWdlKCJDTV9NZXJnZSIsIGNzKQogICAgICAgICAgZW5kCiAgICAgICAgZW5kCgogICAgICAgIGxiX3N0ciA9IChzdHJpbmcuZm9ybWF0KCJFbG9uZ2F0aW9uICAgJWciLGVsb25fZGlzcGxheSkpCiAgICAgICAgSW5MYWJlbEVsb25nYXRpb246U2V0QXR0cnMoe0xJTktTX05hbWUgPSBsYl9zdHIsTEJMQ19MYWJlbENvbG9yID0gMSx9KQogICAgICBlbHNlCiAgICAgICAgbGJfc3RyID0gIk5vIEVsb25nYXRpb24gYWN0aXYiCiAgICAgICAgSW5MYWJlbEVsb25nYXRpb246U2V0QXR0cnMoe0xJTktTX05hbWUgPSBsYl9zdHIsTEJMQ19MYWJlbENvbG9yID0gMix9KQogICAgICBlbmQKCiAgICBlbmQKCiAgICAgIGVsb25nYXRpb25QcmUgPSBlbG9uZ2F0aW9uUHJlMQoKICAgICAgLS0gU2VydmUgdGhlIGFkZGl0aW9uYWwgT3V0cHV0cwogICAgICBpZiBJbkVPbjI6R2V0VmFsdWUocmVxKS5WYWx1ZSA9PSAxIHRoZW4KICAgICAgICBPdXRFbG9uZ2F0aW9uMjpTZXQocmVxLCBlbG9uZ2F0aW9uMikKICAgICAgZW5kCiAgICAgIGlmIEluRU9uMzpHZXRWYWx1ZShyZXEpLlZhbHVlID09IDEgdGhlbgogICAgICAgIE91dEVsb25nYXRpb24zOlNldChyZXEsIGVsb25nYXRpb24zKQogICAgICBlbmQKICAgIGVuZAogIGVsc2UgLS1lbmQgc2hvdyBTcGVjdHJ1bQoKICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIC0tIEVsb25nYXRpb24gV2F2ZWZvcm0KICAgIC0tIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIGxvY2FsIG1vZGVXRiAgICAgPSBJbkVsb25nYXRpb25XRk9wZXJhdGlvbjpHZXRWYWx1ZShyZXEpLlZhbHVlICAtLSBPcGVyYXRpb24KICAgIGxvY2FsIG9mZnNldFdGICAgPSBJbkVsb25nYXRpb25XRk9mZnNldDpHZXRWYWx1ZShyZXEpLlZhbHVlICAgICAtLSBvZmZzZXQKICAgIGxvY2FsIHNjYWxlV0YgICAgPSAyKkluRWxvbmdhdGlvbldGQW1wbGlmeTpHZXRWYWx1ZShyZXEpLlZhbHVlICAtLSBzY2FsZQoKICAgIGludiA9IDEKICAgIGRhdGFfdGVtcCA9IHt9CgogICAgLS0gT25seSB0aGUgaGFsZiBvZiBkaXNwbGF5ZWQgRGF0YSBmb3IgZWxvbmdhdGlvbgogICAgZm9yIGk9I3dhdmVmb3JtLzIgLSAjd2F2ZWZvcm0vNCwgI3dhdmVmb3JtLzIgKyAjd2F2ZWZvcm0vNCBkbwogICAgICB0YWJsZS5pbnNlcnQoZGF0YV90ZW1wLCB3YXZlZm9ybVtpXSkKICAgIGVuZAoKICAgIC0tVG9EbyBmb3IgcGVyZm9ybWFuY2U6IENhbGN1bGF0aW9uIG9mIHZhbHVlcyBjYW4gYmUgZG9uZSBpbiB0aGUgImZvciBsb29wIiB3aXRob3V0IGNhbGxpbmcgYSBmdW5jdGlvbgogICAgaWYgZW9uV0YgdGhlbgogICAgICBpZiBtb2RlV0YgPT0gMCB0aGVuIC0tIE1BWAogICAgICAgIGVsb25nYXRpb25QcmUgPSBtYXRoLm1heChvZmZzZXRXRiArIChpbnYqZ2V0VW5zaWduZWRNYXgoZGF0YV90ZW1wKSkqc2NhbGVXRiwwKQogICAgICBlbHNlaWYgbW9kZVdGID09IDEgdGhlbiAtLSBBdmVyYWdlCiAgICAgICAgZWxvbmdhdGlvblByZSA9IG1hdGgubWF4KG9mZnNldFdGICsgKGludipnZXRVbnNpZ25lZEF2ZXJhZ2UoZGF0YV90ZW1wKSkqc2NhbGVXRiwwKQogICAgICBlbHNlaWYgbW9kZVdGID09IDIgdGhlbiAtLSBNZWRpYW4KICAgICAgICBlbG9uZ2F0aW9uUHJlID0gbWF0aC5tYXgob2Zmc2V0V0YgKyAoaW52KmdldFVuc2lnbmVkTWVkaWFuKGRhdGFfdGVtcCkpKnNjYWxlV0YsMCkKICAgICAgZW5kCgogICAgICBsYl9zdHIgPSAoc3RyaW5nLmZvcm1hdCgiRWxvbmdhdGlvbiAgICVnIixlbG9uZ2F0aW9uUHJlKSkKICAgICAgSW5MYWJlbEVsb25nYXRpb25XRjpTZXRBdHRycyh7TElOS1NfTmFtZSA9IGxiX3N0cixMQkxDX0xhYmVsQ29sb3IgPSAxLH0pCgogICAgICBpZiBub3QgaXBjIGFuZCBJbkhpZGVTZWxlY3Rpb25Ub29sOkdldFZhbHVlKHJlcSkuVmFsdWUgPT0gMCB0aGVuCiAgICAgICAgbG9jYWwgcmVjMz0gU2hhcGUoKQogICAgICAgIGVsb25nYXRpb25fbm9ybSA9IGVsb25nYXRpb24gKiAob3V0LkhlaWdodCAqIG91dC5ZU2NhbGUpIC8gKG91dC5XaWR0aCAqIG91dC5YU2NhbGUpCiAgICAgICAgcmVjMzpBZGRSZWN0YW5nbGUoMC4yNSwwLjc1LDAsZWxvbmdhdGlvbl9ub3JtLDAsMSkgICAgICAtLSBFbG9uZ2F0aW9uIHJlZmVycyB0byBoYWxmIG9mIHRoZSBkaXNwbGF5ZWQgdmFsdWVzLCBpbiB0aGUgbWlkZGxlIG9mIHRoZSBkaXNwbGF5CiAgICAgICAgY3MuQ29sb3IgPSBQaXhlbCh7UiA9IDAuNSwgRyA9IDAuMDUsIEIgPSAwLjA1LCBBID0gMX0pICAtLSBsb3ZsZXkgcmVkCiAgICAgICAgaWM6U2hhcGVGaWxsKHJlYzMpCiAgICAgICAgaWYgc2VsZi5TdGF0dXMgPT0gIk9LIiB0aGVuCiAgICAgICAgICBpYzpQdXRUb0ltYWdlKCJDTV9NZXJnZSIsIGNzKQogICAgICAgIGVuZAogICAgICBlbmQKICAgIGVuZAoKICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIC0tLS0tLS0tLS0tLS0tLS0tLSBXYXZlZm9ybSBEaXNwbGF5dmFyaWF0aW9ucyAtLS0tLS0tLS0tLS0tLS0tLS0KICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIC0tc2g6TGluZVRvKDEuNSwxLjUpICAgLS0gV29ya2Fyb3VuZCBmb3IgRnVzaW9uMTcKICAgIC0tc2g6TGluZVRvKC0wLjEsMS41KQogICAgLS1zaDpNb3ZlVG8oMCwwKQogICAgaWYgbm90IGlwYyB0aGVuCgogICAgICBpZiBlbnZlbG9wZXNlbCA9PSAzIHRoZW4gICAtLSBQb3NpdGl2ZQogICAgICAgIC0tLS0tLS0tLS0tIFN0YW5kYXJkIFdhdmVmb3JtY3VydmUgLS0tLS0tLS0tLS0tCiAgICAgICAgZm9yIGk9MSwoMTkyMC9yZXNvbHV0aW9uKS0xIGRvCiAgICAgICAgICBzaDpNb3ZlVG8oeCx5KSAgLS0gRnVzaW9uMTcgd29ya2Fyb3VuZAogICAgICAgICAgeCA9IChpKS8oMTkyMC9yZXNvbHV0aW9uKQogICAgICAgICAgeSA9IG1hdGguYWJzKCh3YXZlZm9ybVtpXSAqIHNjYWxlKSkgKiAob3V0LkhlaWdodCAqIG91dC5ZU2NhbGUpIC8gKG91dC5XaWR0aCAqIG91dC5YU2NhbGUpCgogICAgICAgICAgc2g6TGluZVRvKHgseSkKICAgICAgICBlbmQKCiAgICAgIGVsc2UKICAgICAgICBpZiBlbnZlbG9wZXNlbCA9PSAxIHRoZW4KICAgICAgICAgIC0tIEVudmVsb3BlY3VydmUgVmFyaWF0aW9uIDE6IEJvbGQKICAgICAgICAgIGZvciBpPTEsKDE5MjAvcmVzb2x1dGlvbiktMSBkbwogICAgICAgICAgICB4ID0gKGkpLygxOTIwL3Jlc29sdXRpb24pCiAgICAgICAgICAgIHkgPSAoMC41ICsgd2F2ZWZvcm1baV0gKiBzY2FsZSkgKiAob3V0LkhlaWdodCAqIG91dC5ZU2NhbGUpIC8gKG91dC5XaWR0aCAqIG91dC5YU2NhbGUpCiAgICAgICAgICAgIHNoOk1vdmVUbyh4LHkpCgogICAgICAgICAgICB5ID0gKDAuNSArIC13YXZlZm9ybVtpXSAqIHNjYWxlKSAqIChvdXQuSGVpZ2h0ICogb3V0LllTY2FsZSkgLyAob3V0LldpZHRoICogb3V0LlhTY2FsZSkKICAgICAgICAgICAgc2g6TGluZVRvKHgseSkKICAgICAgICAgIGVuZAogICAgICAgIGVsc2UKICAgICAgICAgIGlmIGVudmVsb3Blc2VsID09IDIgdGhlbgogICAgICAgICAgICAtLSBFbnZlbG9wZWN1cnZlIFZhcmlhdGlvbiAyOiBTcGVjaWFsCiAgICAgICAgICAgIGZvciBpPTEsKDE5MjAvcmVzb2x1dGlvbiktMSBkbwogICAgICAgICAgICAgIHggPSAoaSkvKDE5MjAvcmVzb2x1dGlvbikKICAgICAgICAgICAgICB5ID0gKDAuNSArIHdhdmVmb3JtW2ldICogd2F2ZWZvcm1baV0gKiB3YXZlZm9ybVtpXSAqIHNjYWxlKSAqIChvdXQuSGVpZ2h0ICogb3V0LllTY2FsZSkgLyAob3V0LldpZHRoICogb3V0LlhTY2FsZSkKCiAgICAgICAgICAgICAgc2g6TW92ZVRvKHgseSkKICAgICAgICAgICAgICB5ID0gKDAuNSAtIHdhdmVmb3JtW2ldICogd2F2ZWZvcm1baV0gKiB3YXZlZm9ybVtpXSAqIHNjYWxlKSAqIChvdXQuSGVpZ2h0ICogb3V0LllTY2FsZSkgLyAob3V0LldpZHRoICogb3V0LlhTY2FsZSkKICAgICAgICAgICAgICBzaDpMaW5lVG8oeCx5KQogICAgICAgICAgICBlbmQKICAgICAgICAgIGVsc2UKICAgICAgICAgICAgaWYgZW52ZWxvcGVzZWwgPT0gMCB0aGVuCiAgICAgICAgICAgICAgLS0tLS0tLS0tLS0gU3RhbmRhcmQgV2F2ZWZvcm1jdXJ2ZSAtLS0tLS0tLS0tLS0KICAgICAgICAgICAgICBmb3IgaT0xLCgxOTIwL3Jlc29sdXRpb24pLTEgZG8KICAgICAgICAgICAgICAgIHNoOk1vdmVUbyh4LHkpICAtLSBGdXNpb24xNyB3b3JrYXJvdW5kCiAgICAgICAgICAgICAgICB4ID0gKGkpLygxOTIwL3Jlc29sdXRpb24pCiAgICAgICAgICAgICAgICB5ID0gKDAuNSArIHdhdmVmb3JtW2ldICogc2NhbGUpICogKG91dC5IZWlnaHQgKiBvdXQuWVNjYWxlKSAvIChvdXQuV2lkdGggKiBvdXQuWFNjYWxlKQogICAgICAgICAgICAgICAgc2g6TGluZVRvKHgseSkKICAgICAgICAgICAgICBlbmQKICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgIC0tIEVyd2VpdGVydW5nZW4KICAgICAgICAgICAgICBwcmludCgibm90IHlldCBpbXBsZW1lbnRlZCIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLSBTdXJwcmlzZQoKICAgICAgICAgICAgZW5kIC0tIFN0YW5kYXJkCiAgICAgICAgICBlbmQgLS0gU3BlY2lhbAogICAgICAgIGVuZCAtLSBCb2xkCiAgICAgIGVuZCAtLSBQb3NpdGl2ZQogICAgZW5kIC0tIElQQyAgICAgLS0gcHJpbnQgKCJXYXZlZm9ybURhdGE6ICIsI3dhdmVmb3JtLCIgeTogIix5LCAiIHg6ICIseCkKICBlbmQgLS1TcGVjdHJ1bS9XYXZlZm9ybQoKICBpZiBub3QgaXBjIHRoZW4KICAgIHNoID0gc2g6T3V0bGluZU9mU2hhcGUodGhpY2tuZXNzLCAiT0xUX1NvbGlkIiwgIk9KVF9Sb3VuZCIsIDgsICJTV01fTm9ybWFsIiwgOCkKICAgIC0tIHB1dCBzaGFwZSB0byBpbWFnZQogICAgY3MuQ29sb3IgPSBQaXhlbCh7UiA9IGdhaW5fciwgRyA9IGdhaW5fZywgQiA9IGdhaW5fYiwgQSA9IGdhaW5fYX0pCiAgICBpYzpTaGFwZUZpbGwoc2gpCiAgIAogICAgaWYgc2VsZi5TdGF0dXMgPT0gIk9LIiB0aGVuCiAgIAlpYzpQdXRUb0ltYWdlKCJDTV9NZXJnZSIsIGNzKQogICAgZW5kCiAgZW5kCgogIC0tIEVsb25nYXRpb24gYXMgSHlzdGVyZXNlIE91dHB1dAogIGlmIChlb24gb3IgZW9uV0YpIHRoZW4KCiAgICBpZiAoSW5IeXN0ZXJlc2U6R2V0VmFsdWUocmVxKS5WYWx1ZSA9PSAxKSB0aGVuCiAgICAgIGlmIGVsb25nYXRpb25QcmUgPj0gSW5Td2l0Y2hPblRocjpHZXRWYWx1ZShyZXEpLlZhbHVlIHRoZW4KICAgICAgICBlbG9uZ2F0aW9uaHlzID0gSW5Td2l0Y2hPbjpHZXRWYWx1ZShyZXEpLlZhbHVlCiAgICAgIGVsc2UKICAgICAgICBpZiBlbG9uZ2F0aW9uUHJlIDw9IEluU3dpdGNoT2ZmVGhyOkdldFZhbHVlKHJlcSkuVmFsdWUgdGhlbgogICAgICAgICAgZWxvbmdhdGlvbmh5cyA9IEluU3dpdGNoT2ZmOkdldFZhbHVlKHJlcSkuVmFsdWUKICAgICAgICBlbmQKICAgICAgZW5kCgogICAgICBpZiBlbG9uZ2F0aW9uUHJlIDwgZWxvbm1pbiB0aGVuCiAgICAgICAgZWxvbm1pbiA9IGVsb25nYXRpb25QcmUKICAgICAgZW5kCgogICAgICBpZiBlbG9uZ2F0aW9uUHJlID4gZWxvbm1heCB0aGVuCiAgICAgICAgZWxvbm1heCA9IGVsb25nYXRpb25QcmUKICAgICAgZW5kCgogICAgICBsYl9zdHIgPSAoc3RyaW5nLmZvcm1hdCgiTWluOiAlZyAgTWF4OiAlZyIsZWxvbm1pbixlbG9ubWF4KSkKICAgICAgRGlzcGxheU1pbk1heDpTZXRBdHRycyh7TElOS1NfTmFtZSA9IGxiX3N0cixMQkxDX0xhYmVsQ29sb3IgPSAxLH0pCgogICAgICBlbG9uZ2F0aW9uID0gZWxvbmdhdGlvbmh5cwoKICAgICAgbGJfc3RyID0gKHN0cmluZy5mb3JtYXQoIkVsb25nYXRpb24gJWcgKCVnKSIsZWxvbmdhdGlvbiwgZWxvbmdhdGlvblByZSkpCiAgICAgIEluRWxvbmdhdGlvbkRpc3BsYXk6U2V0QXR0cnMoe0xJTktTX05hbWUgPSBsYl9zdHIsTEJMQ19MYWJlbENvbG9yID0gMSx9KQogICAgZWxzZQogICAgICBlbG9ubWluPTEwMAogICAgICBlbG9ubWF4PTAKCiAgICAgIGVsb25nYXRpb24gPSBlbG9uZ2F0aW9uUHJlCiAgICBlbmQKCiAgICAtLSBzZXQgYXV4aWxsaWFyeSBvdXRwdXQgZmlyc3QKICAgIC0tIE91dEVsb25nYXRpb246U2V0KHJlcSwgSW5FbG9uZ2F0aW9uOkdldFZhbHVlKHJlcSkpCiAgICBPdXRFbG9uZ2F0aW9uOlNldChyZXEsIGVsb25nYXRpb24pCiAgZW5kCgogIGlmIG5vdCBpcGMgdGhlbgogICAgLS0gU2hvdyBDcm9zc2hhaXIKICAgIGlmIGNyb3NzaGFpciA9PSAxIHRoZW4KICAgICAgbG9jYWwgeCA9IDAKICAgICAgbG9jYWwgeSA9IDAuNSAqIChvdXQuSGVpZ2h0ICogb3V0LllTY2FsZSkgLyAob3V0LldpZHRoICogb3V0LlhTY2FsZSkKICAgIAogICAgICBsb2NhbCBjaCA9IFNoYXBlKCkKICAgIAogICAgICBjaDpNb3ZlVG8oMC41LDApCiAgICAgIGNoOkxpbmVUbygwLjUsMSoob3V0LkhlaWdodCAqIG91dC5ZU2NhbGUpIC8gKG91dC5XaWR0aCAqIG91dC5YU2NhbGUpKQogICAgCiAgICAgIGNoOk1vdmVUbygwLDAuNSAqKG91dC5IZWlnaHQgKiBvdXQuWVNjYWxlKSAvIChvdXQuV2lkdGggKiBvdXQuWFNjYWxlKSkKICAgICAgY2g6TGluZVRvKDEsMC41ICoob3V0LkhlaWdodCAqIG91dC5ZU2NhbGUpIC8gKG91dC5XaWR0aCAqIG91dC5YU2NhbGUpKQogICAgCiAgICAgIGNoID0gY2g6T3V0bGluZU9mU2hhcGUodGhpY2tuZXNzQ0gsICJPTFRfU29saWQiLCAiT0pUX1JvdW5kIiwgOCwgIlNXTV9Ob3JtYWwiLCA4KQogICAgICBjcy5Db2xvciA9IFBpeGVsKHtSID0gZ2FpbkNIX3IsIEcgPSBnYWluQ0hfZywgQiA9IGdhaW5DSF9iLCBBID0gZ2FpbkNIX2F9KQogICAgICBpYzpTaGFwZUZpbGwoY2gpCiAgICAgIGlmIHNlbGYuU3RhdHVzID09ICJPSyIgdGhlbgogICAgICAgIGljOlB1dFRvSW1hZ2UoIkNNX01lcmdlIiwgY3MpCiAgICAgIGVuZAogICAgZW5kCiAgZW5kCgoKICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgLS0tLS0tLS0tLS0tLS0tLS0gRENUTCBGcmVxdWVuY3kgVmlzdWFsaXphdGlvbiAtLS0tLS0tLS0tLS0tLS0tLQogIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICBpZiAoSW5GcmVxdWVuY3lWaXN1YWxpemF0aW9uOkdldFZhbHVlKHJlcSkuVmFsdWUgPT0gMSkgdGhlbgoKICAgIGxvY2FsIGZyYW1lcmF0ZSA9IHNlbGYuQ29tcDpHZXRQcmVmcygiQ29tcC5GcmFtZUZvcm1hdC5SYXRlIikgLS0gZ2V0IHRoZSBmcmFtZSByYXRlIG9mIHRoZSBjb21wIHNldCBpbiB0aGUgcHJlZmVyZW5jZXMKCiAgICBsb2NhbCBub2RlTmFtZSA9IHNlbGYuTmFtZQogICAgRlZLZXJuZWwgPSBzdHJpbmcuZ3N1YihGVktlcm5lbCwgIkZWS2VybmVsIiwgbm9kZU5hbWUpCiAgICBub2RlID0gRFZJUENvbXB1dGVOb2RlKHJlcSwgbm9kZU5hbWUsIEZWS2VybmVsLCAiRlZQYXJhbXMiLCBGVlBhcmFtcykKCiAgICAtLWlmIChsYXN0cmVxdGltZSB+PSByZXEuVGltZSAtIDEpIHRoZW4gLS0gVXNlLCBpZiBDVF9Ub29sCiAgICAtLSAgcGFyYW1zID0gbm9kZTpHZXRQYXJhbUJsb2NrKEZWUGFyYW1zKQogICAgLS1lbmQKICAgIC0tbGFzdHJlcXRpbWUgPSByZXEuVGltZQoKICAgIGlmIG5vdCBwY2FsbChmdW5jdGlvbiAoKQogICAgICBwYXJhbXMuZmZ0X2RhdGEgPSB7ZmZ0X2RhdGFbMV0sZmZ0X2RhdGFbMl0sZmZ0X2RhdGFbM10sZmZ0X2RhdGFbNF0sZmZ0X2RhdGFbNV0sZmZ0X2RhdGFbNl0sZmZ0X2RhdGFbN10sZmZ0X2RhdGFbOF0sZmZ0X2RhdGFbOV0sZmZ0X2RhdGFbMTBdLGZmdF9kYXRhWzExXSxmZnRfZGF0YVsxMl0sZmZ0X2RhdGFbMTNdLGZmdF9kYXRhWzE0XSxmZnRfZGF0YVsxNV0sZmZ0X2RhdGFbMTZdLGZmdF9kYXRhWzE3XSxmZnRfZGF0YVsxOF0sZmZ0X2RhdGFbMTldLGZmdF9kYXRhWzIwXSxmZnRfZGF0YVsyMV0sZmZ0X2RhdGFbMjJdLGZmdF9kYXRhWzIzXSxmZnRfZGF0YVsyNF0sZmZ0X2RhdGFbMjVdfQogICAgICBwYXJhbXMuc2NhbGUgPSBJbkZWU2NhbGU6R2V0VmFsdWUocmVxKS5WYWx1ZQogICAgICBwYXJhbXMuc21vb3RoID0gSW5GVlNtb290aDpHZXRWYWx1ZShyZXEpLlZhbHVlCiAgICAgIHBhcmFtcy5jZCAgICAgPSBJbkZWQ0Q6R2V0VmFsdWUocmVxKS5WYWx1ZQogICAgICBwYXJhbXMuYWxwaGEgID0gSW5GVkFscGhhOkdldFZhbHVlKHJlcSkuVmFsdWUKICAgICAgcGFyYW1zLmNvbXBPcmRlciA9IDE1ICAgICAgICAgICAgICAgICAgIC0tIHBhcmFtcy5zcmNDb21wT3JkZXIgPSBzcmM6SXNNYXNrKCkgYW5kIDEgb3IgMTUKICAgICAgcGFyYW1zLndpZHRoICA9IGltZy5EYXRhV2luZG93OldpZHRoKCkKICAgICAgcGFyYW1zLmhlaWdodCA9IGltZy5EYXRhV2luZG93OkhlaWdodCgpCiAgICAgIHBhcmFtcy5pdGltZSA9IHJlcS5UaW1lIC8gZnJhbWVyYXRlCiAgICAgIG5vZGU6U2V0UGFyYW1CbG9jayhwYXJhbXMpCiAgICBlbmQpIHRoZW4KICAgICAgcGFyYW1zID0gbm9kZTpHZXRQYXJhbUJsb2NrKEZWUGFyYW1zKQogICAgICBwYXJhbXMuZmZ0X2RhdGEgPSB7ZmZ0X2RhdGFbMV0sZmZ0X2RhdGFbMl0sZmZ0X2RhdGFbM10sZmZ0X2RhdGFbNF0sZmZ0X2RhdGFbNV0sZmZ0X2RhdGFbNl0sZmZ0X2RhdGFbN10sZmZ0X2RhdGFbOF0sZmZ0X2RhdGFbOV0sZmZ0X2RhdGFbMTBdLGZmdF9kYXRhWzExXSxmZnRfZGF0YVsxMl0sZmZ0X2RhdGFbMTNdLGZmdF9kYXRhWzE0XSxmZnRfZGF0YVsxNV0sZmZ0X2RhdGFbMTZdLGZmdF9kYXRhWzE3XSxmZnRfZGF0YVsxOF0sZmZ0X2RhdGFbMTldLGZmdF9kYXRhWzIwXSxmZnRfZGF0YVsyMV0sZmZ0X2RhdGFbMjJdLGZmdF9kYXRhWzIzXSxmZnRfZGF0YVsyNF0sZmZ0X2RhdGFbMjVdfQogICAgICBwYXJhbXMuc2NhbGUgPSBJbkZWU2NhbGU6R2V0VmFsdWUocmVxKS5WYWx1ZQogICAgICBwYXJhbXMuc21vb3RoID0gSW5GVlNtb290aDpHZXRWYWx1ZShyZXEpLlZhbHVlCiAgICAgIHBhcmFtcy5jZCAgICAgPSBJbkZWQ0Q6R2V0VmFsdWUocmVxKS5WYWx1ZQogICAgICBwYXJhbXMuYWxwaGEgID0gSW5GVkFscGhhOkdldFZhbHVlKHJlcSkuVmFsdWUKICAgICAgcGFyYW1zLmNvbXBPcmRlciA9IDE1ICAgICAgICAgICAgICAgICAgIC0tIHBhcmFtcy5zcmNDb21wT3JkZXIgPSBzcmM6SXNNYXNrKCkgYW5kIDEgb3IgMTUKICAgICAgcGFyYW1zLndpZHRoICA9IGltZy5EYXRhV2luZG93OldpZHRoKCkKICAgICAgcGFyYW1zLmhlaWdodCA9IGltZy5EYXRhV2luZG93OkhlaWdodCgpCiAgICAgIHBhcmFtcy5pdGltZSA9IHJlcS5UaW1lIC8gZnJhbWVyYXRlCiAgICAgIG5vZGU6U2V0UGFyYW1CbG9jayhwYXJhbXMpCiAgICBlbmQKCgogICAgbm9kZTpBZGRTYW1wbGVyKCJSb3dTYW1wbGVyIiwgVEVYX0ZJTFRFUl9NT0RFX0xJTkVBUiwgVEVYX0FERFJFU1NfTU9ERV9DTEFNUCwgVEVYX05PUk1BTElaRURfQ09PUkRTX1RSVUUpCgogICAgbm9kZTpBZGRJbnB1dCgic3JjIiwgaW1nKQogICAgbm9kZTpBZGRPdXRwdXQoImRzdCIsIG91dCkKCiAgICBsb2NhbCBzdWNjZXNzID0gbm9kZTpSdW5TZXNzaW9uKHJlcSkKICAgIGlmIG5vdCBzdWNjZXNzIHRoZW4KICAgICAgICBkc3QgPSBuaWwKICAgICAgICBkdW1wKG5vZGU6R2V0RXJyb3JMb2coKSkgLS0gRmVobGVyYXVzZ2FiZSBkZXMgRENUTAogICAgZW5kCgogICAgLS0gSW5JbWFnZQogICAgaWYgKEluQ2hhbm5lbDA6R2V0VmFsdWUocmVxKSB+PSBuaWwgYW5kIG5vdCBpcGMpIHRoZW4KICAgICAgbG9jYWwgaWltZyA9IEluQ2hhbm5lbDA6R2V0VmFsdWUocmVxKQoKICAgICAgbG9jYWwgYXBwbHlfbW9kZXMgPSB7CiAgICAgICAgICAiTWVyZ2UiLAogICAgICAgICAgIlNjcmVlbiIsCiAgICAgICAgICAiRGlzc29sdmUiLAogICAgICAgICAgIk11bHRpcGx5IiwKICAgICAgICAgICJPdmVybGF5IiwKICAgICAgICAgICJTb2Z0TGlnaHQiLAogICAgICAgICAgIkhhcmRMaWdodCIsCiAgICAgICAgICAiQ29sb3JEb2RnZSIsCiAgICAgICAgICAiQ29sb3JCdXJuIiwKICAgICAgICAgICJEYXJrZW4iLAogICAgICAgICAgIkxpZ2h0ZW4iLAogICAgICAgICAgIkRpZmZlcmVuY2UiLAogICAgICAgICAgIkV4Y2x1c2lvbiIsCiAgICAgICAgICAiSHVlIiwKICAgICAgICAgICJTYXR1cmF0aW9uIiwKICAgICAgICAgICJDb2xvciIsCiAgICAgICAgICAiTHVtaW5vc2l0eSIsCiAgICAgICAgICB9CiAgICAgIGxvY2FsIGFwcGx5X21vZGUgPSBJbkZWTWVyZ2U6R2V0VmFsdWUocmVxKS5WYWx1ZSArIDEKICAgICAgbG9jYWwgYWxwaGFfZ2FpbiA9IEluQmtnQWxwaGE6R2V0VmFsdWUocmVxKS5WYWx1ZQoKICAgICAgb3V0Ok1lcmdlKGlpbWcsIHsKICAgICAgICAgICAgSU1HUFJfR1BVUmVxdWVzdGVkID0gdHJ1ZSwKICAgICAgICAgICAgSU1HUFJfU291cmNlUmVxICAgID0gcmVxLAogICAgICAgICAgICBNT19BcHBseU1vZGUgICAgICAgPSBhcHBseV9tb2Rlc1thcHBseV9tb2RlXSwKICAgICAgICAgICAgTU9fQXBwbHlPcGVyYXRvciAgID0gIk92ZXIiLAogICAgICAgICAgICBNT19GZ0FscGhhR2FpbiAgICAgPSBhbHBoYV9nYWluLAogICAgICAgICAgICB9KQogICAgZW5kCiAgZW5kCgogIC0tU2hhZGVydG95IEF1ZGlvIC0gV2F2ZWZvcm0KICBpZiAoSW5TaGFkZXJ0b3lBdWRpbzpHZXRWYWx1ZShyZXEpLlZhbHVlID09IDEgYW5kIHNoYWRlcnRveVNwZWNbMV0gfj0gbmlsKSB0aGVuCiAgICBmb3IgeD0xLCA1MTIgZG8KICAgICAgcHRyVyA9IG1hdGguZmxvb3IoeC81MTIqNDc5ICogd2luZG93d2lkdGgvMjU2KSsxCgogICAgICB4dCA9ICg1MTMteCkvNTEyCiAgICAgIHh1ICA9IG1hdGgubG9nMTAoeHQqMC45KzAuMSkrMSAgIC0tIGxvZ2FyaXRobWljIGdyYXBocwoKICAgICAgcHRyUyA9IG1hdGguY2VpbCg1MTMteHUqNTEyKSAgICAgLS0gIG1hdGguY2VpbCh3aW5kb3d3aWR0aC14dSp3aW5kb3d3aWR0aCkKCiAgICAgIHBTLlIgPSBzaGFkZXJ0b3lTcGVjW3B0clNdICogSW5TaGFkZXJBdWRpb1NjYWxlOkdldFZhbHVlKHJlcSkuVmFsdWUKICAgICAgcFcuUiA9ICgod2F2ZWZvcm1bcHRyV10gKiBzY2FsZSkpICsgMC41CgogICAgICBvdXQyOlNldFBpeGVsKHgtMSwwLCBwUykgLS0gU3Bla3RydW1waXhlbCBpbiBkZXIgSGF1cHRzY2hsZWlmZQogICAgICBvdXQyOlNldFBpeGVsKHgtMSwxLCBwVykgLS0gV2F2ZXBpeGVsCgogICAgZW5kCiAgZW5kCgogIGlmIG5vdCBpcGMgdGhlbgogICAgbGFzdHRpbWUgPSBjdXJyZW50dGltZSAgIC0tIGR1ZSB0byB0aGUgc21vb3RoZmVhdHVyZQogIGVuZAoKICBPdXRJbWFnZTpTZXQocmVxLG91dCkKICBPdXRJbWFnZTI6U2V0KHJlcSxvdXQyKQogIGNvbGxlY3RnYXJiYWdlKCk7IC0tID8/PwplbmQK"))
end
goForIt()
